{"version":3,"file":"index.js","sources":["../src/animate.js","../src/handlers/mouse.drag.js","../src/handlers/mouse.scroll.js","../src/handlers/touch.pinch.js","../src/handlers/touch.drag.js","../src/mat4.js","../src/transform.js","../src/tiles.js","../src/pubsub.js","../src/handlers/trace.js","../src/rect.js","../src/render.js","../src/map.js","../src/index.js"],"sourcesContent":["\"use strict\";\n\n//glCreateProgram\n//glCreateShader\n//glShaderSource\n//glCompileShader\n//glAttachShader\n//glLinkProgram <- after this line opengl got everything it needs, \n//                 you can free shader resources\n//glDetachShader\n//glDeleteShader\n//for{//render loop\n//   glUseProgram\n//   //...drawing operations\n//   glUseProgram(0);\n//}\n//glDeleteProgram\n\n/* from mapbox-gl-js - BSD licensed? */\nconst _now = (function () {\n    if (window.performance &&\n        window.performance.now) {\n        return window.performance.now.bind(window.performance);\n    }\n    else {\n        return Date.now.bind(Date);\n    }\n}());\nexport { _now as now };\n\nconst frame = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.msRequestAnimationFrame;\n\nconst _frame = function (fn) {\n    return frame(fn);\n};\nexport { _frame as frame };\n\nconst cancel = window.cancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.msCancelAnimationFrame;\n\nexport function cancelFrame(id) {\n    cancel(id);\n}\n\nexport function timed(fn, dur, ctx) {\n    if (!dur) {\n        fn.call(ctx, 1);\n        return null;\n    }\n\n    let abort = false;\n    const start = _now();\n\n    function tick(now) {\n        if (abort) {\n            return;\n        }\n        now = _now();\n\n        if (now >= (start + dur)) {\n            fn.call(ctx, 1);\n        } else {\n            let k = (now - start) / dur\n            fn.call(ctx, k);\n            _frame(tick);\n        }\n    }\n\n    _frame(tick);\n\n    return function () { abort = true; };\n}\n\n","\nimport Trace from './trace';\n\nexport function dragHandler(map) {\n\n    var canvas = map.getCanvasContainer();\n    canvas.addEventListener(\"mousedown\", doMouseDown, { passive: false });\n    // canvas.addEventListener(\"touchstart\", doMouseDown, { passive: false });\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    var _trace = null;\n\n    function doMouseDown(evt) {\n        // prevent cursor to turn into text selection on chrome\n        evt.preventDefault();\n        canvas.removeEventListener(\"mousedown\", doMouseDown, { passive: false });\n        canvas.addEventListener(\"mousemove\", doMouseDrag, { passive: false });\n        canvas.addEventListener(\"mouseup\", doMouseUp, { passive: false });\n\n        // canvas.removeEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n\n        var r = canvas.getBoundingClientRect();\n        let e = evt.touches ? evt.touches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        //        console.log('doMouseDown');\n        //        console.log([x,y]);\n\n        _trace = new Trace([x, y]);\n        map.panBy(0, 0); // to cancel on going animations\n    }\n\n    function doMouseDrag(evt) {\n        evt.preventDefault();\n        const r = canvas.getBoundingClientRect();\n        // for mouse use raw evt, for touches, use first touch location\n        let e = evt.touches ? evt.touches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        // how much did the map move since last time?\n        let prev = _trace.last()[1]\n        let dx = x - prev[0];\n        let dy = y - prev[1];\n        _trace.shift(200)\n        _trace.push([x, y]);\n\n        //        console.log([x,y]);\n\n        // pan the map\n        map.panBy(dx, dy);\n    }\n\n    function doMouseUp(evt) {\n\n        canvas.removeEventListener(\"mousemove\", doMouseDrag, { passive: false });\n        canvas.removeEventListener(\"mouseup\", doMouseUp, { passive: false });\n        canvas.addEventListener(\"mousedown\", doMouseDown, { passive: false });\n\n        // canvas.removeEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.removeEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n\n        const r = canvas.getBoundingClientRect();\n        // for mouse use raw evt, for touches, use first touch location\n        let e = evt.changedTouches ? evt.changedTouches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        _trace.shift(200)\n        _trace.push([x, y]);\n\n        //        console.log('doMouseUp');\n        //        console.log([x,y])\n\n        // FIXME\n        // if a user can influence the duration\n        // then if the user did set duration = 0 we should not do any panning!\n        //\n        // furthermore, maybe more natural for moving is that the map slows down\n        //\n        // also: \n        // the map should move initially with the same speed (as the user was moving) and \n        // then slowly come to a halt\n        const last = _trace.last()\n        const first = _trace.first()\n        // in seconds\n        let time = (last[0] - first[0]) / 1000\n\n        // so then we can see given the desired duration\n        // how far could the map travel with the same speed\n        // then if we ease out, we travel a bit less far\n        // so that it looks ok\n\n        let start = first[1]\n        let dx = (x - start[0]);\n        let dy = (y - start[1]);\n\n        // take percent of speed computed\n        const percent = 1.0 // 0.7\n        let vx = dx / time * percent\n        let vy = dy / time * percent\n\n        // const max_distance = 400 // 0.5 * screen size\n        // var duration = parseFloat(document.getElementById('panduration').value);\n        // // with combined speed  of departure and arrivale\n        // // * departure (= speed of user action px/s) and\n        // // * arrival (= 0 px /s)\n        // // we can calcualte what will be the distance travelled\n        // // we cap the distance moved at maximum of certain number of pixels\n        // // (to prevent map moving too far: heuristic, half the window size)\n        // var tx = Math.max(Math.min((vx * 0.5) * (duration / 1000), max_distance), -max_distance)\n        // var ty = Math.max(Math.min((vy * 0.5) * (duration / 1000), max_distance), -max_distance)\n        // map.panAnimated(tx, ty);\n\n        // FIXME: settings\n        let duration = parseFloat(map._interaction_settings.pan_duration);\n        // var duration = 1000; // parseFloat(document.getElementById('panduration').value);\n        let tx = (vx * 0.5) * (duration / 1000);\n        let ty = (vy * 0.5) * (duration / 1000);\n        _trace = null;\n        map.panAnimated(tx, ty);\n        // console.log('mouseup')\n    }\n\n}\n","\"use strict\";\n\n/**\n* Handler for a scroll of the MouseWheel\n*\n* Starts an animated zoom (in or out) operation\n*/\n\nimport { now as _now } from '../animate';\nimport Trace from './trace';\n\nexport function scrollHandler (map) {\n\n    const _map = map;\n    const _canvas = map.getCanvasContainer();\n\n    _canvas.addEventListener(\"wheel\", doMouseWheel, { passive: false });\n    _canvas.addEventListener(\"mousewheel\", doMouseWheel, { passive: false });\n\n    var _trace = null;\n    var _prev = null;\n\n    function doMouseWheel(evt)\n    {\n        // prevent from also scrolling the page -- not allowed when passive: true\n        evt.preventDefault();\n        // return if previous evt is shorter than n msec ago\n        const now = _now();\n        if ((now - _prev) < 20)\n        {\n            return \n        }\n        // find the wheel value (this is implemented differently per browser)\n        let value = undefined\n        if (evt.type === 'wheel')\n        {\n            value = evt.deltaY;\n            // Firefox doubles the values on retina screens...\n            // if (firefox && e.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) value /= browser.devicePixelRatio;\n            // if (e.deltaMode === window.WheelEvent.DOM_DELTA_LINE) value *= 40;\n        }\n        else if (evt.type === 'mousewheel')\n        {\n            value = -evt.wheelDeltaY;\n            // if (safari) value = value / 3;\n        }\n        // sometimes, we see a value of 0 \n        // i.e. undetermined y-direction, so skip evt\n        if (value === 0)\n        {\n            return\n        }\n        _prev = now\n\n        // standard value for zoom step\n        var step = 0.1;\n        const direction = Math.max(-1, Math.min(1, -value));\n        if (_trace === null)\n        {\n            _trace = new Trace(direction);\n        }\n        else\n        {\n            let prev = _trace.last()\n            const delta = now - prev[0]\n            _trace.push(direction);\n\n            // FIXME: SETTINGS: var radios = document.getElementsByName('speed');\n            let factor = 1\n            // FIXME: SETTINGS: \n            /*\n            for (var i = 0, length = radios.length; i < length; i++) {\n                if (radios[i].checked) {\n                    // do whatever you want with the checked radio\n                    factor = parseFloat(radios[i].value)\n                    // only one radio can be logically checked, don't check the rest\n                    break;\n                }\n            }\n            */\n\n\n            // make larger zoom steps if mousewheel went faster\n            // FIXME: allow user to set multiplication factor, e.g.\n            // (1, 2, 4) : (normal, fast, superfast) ?\n            switch(delta)\n            {\n                case delta > 750:\n                    step = 0.0625\n                    break;\n                case delta > 500:\n                    step = 0.125\n                    break;\n                case delta > 50:\n                    step = 0.25\n                    break;\n                default:\n                    step = 0.5\n                    break;\n            }\n            step *= factor\n            _trace.shift(2000);\n//            console.log(delta + \" \" + prev[1] + \" \" + step);\n        }\n\n        //if the canvas has size 800 x 800, \n        //evt.clientX: x-coordinate in pixel, starting from the left of the canvas (800 x 800)\n        //evt.clientY: y-coordinate in pixel, starting from the top of the canvas (800 x 800)        \n        //r has size 800 x 760 because of the bar (with height 39.92) at the top\n        //r.left = 0 and r.top = 39.92\n        const r = _canvas.getBoundingClientRect();\n        const x = evt.clientX - r.left - _canvas.clientLeft;  //_canvas.clientLeft is often 0\n        const y = evt.clientY - r.top - _canvas.clientTop;  //_canvas.clientTop is often 0\n\n        switch(direction) \n        {\n            case 1:\n                _map.zoomInAnimated(x, y, step);\n                break;\n            case -1:\n                _map.zoomOutAnimated(x, y, step);\n                break;\n        }\n//        console.log(_trace._trace);\n        // console.log(_trace.length())\n    }\n\n}\n","\"use strict\";\n\nimport { now as _now } from '../animate';\nimport Trace from './trace';\n\n/**\n* Handler for touch events\n* zooms the map if two fingers are used and the distance between them changes.\n* \n*/\n\nexport function touchPinchHandler (map) {\n    var canvas = map.getCanvasContainer();\n\n    canvas.addEventListener(\"touchstart\", doPinchStart, false);\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    function dist(points) {\n        const [dx, dy] = vec(points);\n        return Math.sqrt(dx * dx, dy * dy);\n    }\n\n    function center(points) {\n        const [dx, dy] = vec(points);\n        let p0 = points[0];\n        return [p0[0] + dx / 2,\n                p0[1] + dy / 2];\n    }\n\n    function vec(points) {\n        let dx = points[1][0] - points[0][0];\n        let dy = points[1][1] - points[0][1];\n        return [dx, dy];\n    }\n\n    function getTouchPoints(event) {\n        const r = canvas.getBoundingClientRect();\n        const touches = event.touches;\n        var points = [];\n        // note: length hardcoded as 2\n        for (let j = 0; j < 2; j++) {\n            const x = touches[j].clientX - r.left - canvas.clientLeft;\n            const y = touches[j].clientY - r.top - canvas.clientTop;\n            points.push([x, y]);\n        }\n        return points;\n    }\n\n    var _prevDist = null;\n    var _startTime = null;\n    var _trace = null;\n    // var _startCenter = null;\n\n    function doPinchStart(event) {\n        if (!event.touches || event.touches.length !== 2) { return; }\n        event.preventDefault();\n\n        canvas.removeEventListener(\"touchstart\", doPinchStart, false);\n        canvas.addEventListener(\"touchmove\", doPinchMove, { capture: true, passive: false });\n        canvas.addEventListener(\"touchend\", doPinchEnd, false);\n        \n        // let points = getTouchPoints(event);\n        // console.log(points);\n        // _startCenter = center(points);\n        _prevDist = null;\n        _startTime = _now();\n        console.log('start touch with 2 fingers ' + _startTime);\n        map.abortAndRender(); // to cancel on going animations\n        let points = getTouchPoints(event);\n        _trace = new Trace(points);\n    }\n\n    function doPinchMove(event) {\n        if (!event.touches || event.touches.length !== 2 || (_now() - _startTime) < 30) { return; }\n        console.log('time of touch ' + (_now() - _startTime));\n        // we discard the first few movement events at the beginning (30 ms since start)\n        // these seem to be 'unstable', are rapidly fired after placing the fingers on \n        // the screen and they lead to wildly varying positions\n        event.preventDefault();\n        let points = getTouchPoints(event);\n        _trace.shift(200);\n        _trace.push(points);\n        // console.log(points);\n        let curDist = dist(points);\n        if (_prevDist !== null) {\n            let scaleDelta = curDist / _prevDist;\n            // console.log(scaleDelta);\n            let [x, y] = center(points);\n            map.zoom(x, y, Math.max(Math.min(scaleDelta, 1.1), 0.9));\n        }\n        _prevDist = curDist;\n    }\n\n    function doPinchEnd(event) {\n        if (event.touches.length !== 0) { return; }\n        event.preventDefault();\n        console.log('end');\n        canvas.removeEventListener(\"touchmove\", doPinchMove, { capture: true, passive: false });\n        canvas.removeEventListener(\"touchend\", doPinchEnd, false);\n        canvas.addEventListener(\"touchstart\", doPinchStart, false);\n        _prevDist = null;\n        _startTime = null;      \n        console.log('trace for pinch end ' + _trace.length());\n        if (_trace.length() > 1)\n        {\n            // FIXME:\n            // should the intent of the user be derived from \n            // comparing the last two touch points only?\n            // or, should we compare begin and end of the gesture\n            // or, should we detect some pattern in the gesture points?\n            // or, ... \n            let last = _trace.last();\n            let lastbutone = _trace.lastbutone();\n            let curDist = dist(last[1]);\n            let prevDist = dist(lastbutone[1]);\n            // let scaleDelta = curDist / prevDist;\n            let [x, y] = center(last[1]);\n            let step = 0.5;\n            if (curDist < prevDist)\n            {\n                // distance between fingers has become smaller\n                // -> zoom out\n                map.zoomOutAnimated(x, y, step)\n            } else {\n                // distance between fingers has become larger\n                // -> zoom in\n                map.zoomInAnimated(x, y, step)\n            }\n\n            // FIXME: \n            // should we take the zoom step preference of the\n            // user into account here? e.g. large zoom step -> \n            // allows larger change of the clamped scaledelta?\n            // map.zoomAnimated(x, y, Math.max(Math.min(scaleDelta, 1.2), 0.8));\n        }\n        _trace = null;       \n    }\n}\n\n\n","import Trace from './trace';\n\nexport function touchDragHandler(map) {\n    var canvas = map.getCanvasContainer();\n    canvas.addEventListener(\"touchstart\", doTouchDragStart, false);\n    // canvas.addEventListener(\"touchstart\", doMouseDown, { passive: false });\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    function getTouchPoint(event) {\n        const r = canvas.getBoundingClientRect();\n        const touches = event.touches;       \n        const x = touches[0].clientX - r.left - canvas.clientLeft;\n        const y = touches[0].clientY - r.top - canvas.clientTop;\n            \n        return [x, y];\n    }\n\n    var _trace = null;\n    var _state = null;\n\n    function doTouchDragStart(evt) {\n        if (evt.touches.length > 1) {\n            return;\n        }\n        // prevent cursor to turn into text selection on chrome\n        evt.preventDefault();\n        // map.abortAndRender(); // to cancel on going animations\n        canvas.removeEventListener(\"touchstart\", doTouchDragStart, false);\n        canvas.addEventListener(\"touchmove\", doTouchDragMove, { capture: true, passive: false });\n        canvas.addEventListener(\"touchend\", doTouchDragEnd, false);\n        // canvas.removeEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        \n        //        console.log('doMouseDown');\n        //        console.log([x,y]);\n        let point = getTouchPoint(evt);\n        console.log('touchstart');\n        _trace = new Trace(point);\n        _state = 'pending';\n    }\n    function doTouchDragMove(evt) {\n        \n        // when we detect more than 1 finger on the screen\n        // we obviously do not want to pan, so we set the state to\n        // pending (i.e. currently we do not handle events for panning)\n        if (evt.touches.length > 1) \n        {\n            _state = 'pending';\n            return;\n        }\n        evt.preventDefault();\n        let point = getTouchPoint(evt);\n        \n        // how much did the map move since last time?\n        let prev = _trace.last()[1];\n        let dx = point[0] - prev[0];\n        let dy = point[1] - prev[1];\n        _trace.shift(200);\n        _trace.push(point);\n\n        \n        switch(_state)\n        {\n            case 'pending':\n                // enable the handler when:\n                // - we have moved our finger more than 3 pixels, or\n                // - we have 1 finger for more than 80ms on the screen\n                if (Math.sqrt(dx * dx, dy * dy) >= 3 || (_trace.last()[0] - _trace.first()[0])> 60) {\n                    _state = 'active';\n                }\n                break;\n            case 'active':\n                map.panBy(dx, dy);\n                break;\n        }\n    }\n    function doTouchDragEnd(evt) {\n        if (evt.touches.length !== 0) { return; }\n        canvas.removeEventListener(\"touchmove\", doTouchDragMove, { capture: true, passive: false });\n        canvas.removeEventListener(\"touchend\", doTouchDragEnd, false);\n        canvas.addEventListener(\"touchstart\", doTouchDragStart, false);\n        // canvas.removeEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.removeEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // let point = getTouchPoint(evt);\n        // _trace.shift(200);\n        // _trace.push(point);\n        //        console.log('doMouseUp');\n        //        console.log([x,y])\n        // FIXME\n        // if a user can influence the duration\n        // then if the user did set duration = 0 we should not do any panning!\n        //\n        // furthermore, maybe more natural for moving is that the map slows down\n        //\n        // also: \n        // the map should move initially with the same speed (as the user was moving) and \n        // then slowly come to a halt\n        _trace.shift(200);\n        if (_trace.length() <= 2)\n        {\n            _state = 'pending';\n        }\n        switch(_state)\n        {\n            case 'pending':\n            {\n                console.log('touch drag end - SKIP');\n                break;\n            }\n            case 'active':\n            {               \n                const last = _trace.last();   \n                const first = _trace.first();\n                // in seconds\n                let time = (last[0] - first[0]) / 1000;\n                // so then we can see given the desired duration\n                // how far could the map travel with the same speed\n                // then if we ease out, we travel a bit less far\n                // so that it looks ok\n                let start = first[1];\n                let dx = (last[1][0] - start[0]);\n                let dy = (last[1][1] - start[1]);\n                // take percent of speed computed\n                const percent = 1.0; // 0.7\n                let vx = dx / time * percent;\n                let vy = dy / time * percent;\n                // const max_distance = 400 // 0.5 * screen size\n                var duration = parseFloat(document.getElementById('panduration').value);\n                // with combined speed  of departure and arrivale\n                // * departure (= speed of user action px/s) and\n                // * arrival (= 0 px /s)\n                // we can calcualte what will be the distance travelled\n                // we cap the distance moved at maximum of certain number of pixels\n                // (to prevent map moving too far: heuristic, half the window size)\n                // var tx = Math.max(Math.min((vx * 0.5) * (duration / 1000), max_distance), -max_distance)\n                // var ty = Math.max(Math.min((vy * 0.5) * (duration / 1000), max_distance), -max_distance)\n                let tx = (vx * 0.5) * (duration / 1000);\n                let ty = (vy * 0.5) * (duration / 1000);\n\n                console.log('touch drag end - ANIMATE');\n                console.log([tx, ty]);\n                map.panAnimated(tx, ty);\n\n                break;\n            }\n        }\n        _state = 'pending';\n        _trace = null;\n        console.log('touchend');\n    }\n}\n","\"use strict\";\n\n/**\n * @name mat4\n * @class 4x4 Matrix\n */\n\n//exports.___ = function \n\n\n// vector funcs !!!\nexport function vec3transform (out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n//    console.log(m[0] + \" \" + x + \" \" + m[4]);\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n//    console.log(out[0]);\n    return out;\n}\n\nexport function createvec3() {\n    var out = new Float32Array(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n}\n\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nexport function copy (out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues (m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new Float32Array(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4's explicitly\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nconst _multiply = multiply;\nexport { _multiply as multiply };\nexport const mul = multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale (out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n\n\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n","import { create, createvec3, vec3transform, multiply, invert } from './mat4';\nimport Rectangle from './rect';\nvar meter_to_pixel = 3779.5275590551; // 1 meter equals 3779.5275590551 pixels\n\n\n//import { log } from 'util';\n\n// TODO\n// - Aspect ratio / resize of viewport --> update transform\n// - Take into account the z-value of the slice\n// - Remove duplication inside functions\n\n// let = block scoped\n// var = global / function scoped\n\n\n\n\n//function world_square_matrix(box, ar) {\n//    // Returns transform matrix to go from world to normalized square\n//    // FIXME: aspect ratio - is NOT taken into account ??? !!!\n//    let sx = 2. / ((box.xmax - box.xmin) * ar)\n//    let sy = 2. / (box.ymax - box.ymin)\n//    let tx = -(box.xmax + box.xmin) / (box.xmax - box.xmin)\n//    let ty = -(box.ymax + box.ymin) / (box.ymax - box.ymin)\n//    let m = create()\n//    m[0] = sx\n//    m[5] = sy\n//    m[12] = tx\n//    m[13] = ty\n//    return m\n//}\n\n\nfunction square_viewport_matrix(box) {\n    // Returns transform matrix to go from normalized square to viewport\n    // FIXME: can overflow? better to first multiply with 1/2?\n    let sx = (box.xmax - box.xmin) * .5\n    let sy = (box.ymax - box.ymin) * .5\n    let tx = (box.xmax + box.xmin) * .5\n    let ty = (box.ymax + box.ymin) * .5\n    let m = create()\n    m[0] = sx\n    m[5] = sy\n    m[12] = tx\n    m[13] = ty\n    return m\n}\n\n// FIXME\n//\n// Check handedness of the 3D system and get it right + consistent!\n// https://github.com/g-truc/glm/blob/master/glm/gtc/matrix_transform.inl\n//\n// OrthoLH\n// OrthoRH\n\nclass Transform {\n    constructor(client_rect, center2d, view_scale_Sv) {\n\n        this.viewport_world = create();\n        this.world_viewport = create();\n        //\n        this.world_square = null;\n        this.square_viewport = null;\n        //\n        this.viewport = null;\n\n        // set up initial transformation\n        this.initTransform(center2d, [client_rect.width, client_rect.height], view_scale_Sv)\n//        console.log(\"Set up transform: \" + center2d + \" 1:\" + view_scale_Sv + \" vs 1:\" + this.getScaleDenominator())\n    }\n\n    // fixme: rename -> initTransform\n    initTransform(center_world, viewport_size, denominator) {\n        // compute from the center of the world, the viewport size and the scale\n        // denominator how much of the world is visible\n        let cx = center_world[0],\n            cy = center_world[1]\n\n        // get half visible screen size in world units,\n        // when we look at it at this map scale (1:denominator)\n        let half_visible_screen = [\n            0.5 * viewport_size[0] / meter_to_pixel * denominator,\n            0.5 * viewport_size[1] / meter_to_pixel * denominator\n        ]\n        let xmin = cx - half_visible_screen[0],\n            xmax = cx + half_visible_screen[0],\n            ymin = cy - half_visible_screen[1],\n            ymax = cy + half_visible_screen[1]\n        // the size of the viewport \n        this.viewport = new Rectangle(0, 0, viewport_size[0], viewport_size[1])\n        // we arrive at what part of the world then is visible\n        // let visible_world = this.getVisibleWorld() //\n        let visible_world = new Rectangle(xmin, ymin, xmax, ymax)\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * cx, -scale[1] * cy]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        //console.log(\"INITIAL world square\" + world_square);\n        // we can set up ndc square -> viewport matrix\n\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        //console.log('ll: ' + ll + \" \" + this.viewport.xmin + \" \" + this.viewport.ymin);\n        //console.log('tr: ' + tr + \" \" + this.viewport.xmax + \" \" + this.viewport.ymax);\n    }\n\n    backward(vec3) {\n        let result = createvec3()\n        vec3transform(result, vec3, this.viewport_world)\n        return result\n    }\n\n    updateViewportTransform() {\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n    }\n\n    pan(dx, dy) {\n        this.square_viewport[12] += dx\n        this.square_viewport[13] += dy\n\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        //console.log('ll: ' + ll + \" \" + this.viewport.xmin + \" \" + this.viewport.ymin);\n        //console.log('tr: ' + tr + \" \" + this.viewport.xmax + \" \" + this.viewport.ymax);\n\n        // we arrive at what part of the world then is visible\n        let visible_world = this.getVisibleWorld() // new Rectangle(ll[0], ll[1], tr[0], tr[1])\n        let center = visible_world.center()\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * center[0], -scale[1] * center[1]]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        // and given the size of the viewport we can set up ndc square -> viewport matrix\n        // this.viewport = new Rectangle(0, 0, width, height)\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n    }\n\n    zoom(factor, x, y) {\n        var tmp = create()\n        // 1. translate\n        {\n            let eye = create()\n            eye[12] = -x\n            eye[13] = -y\n            multiply(tmp, eye, this.square_viewport)\n        }\n        // 2. scale\n        {\n            let eye = create()\n            eye[0] = factor\n            eye[5] = factor\n            multiply(tmp, eye, tmp)\n        }\n        // 3. translate back\n        {\n            let eye = create()\n            eye[12] = x\n            eye[13] = y\n            multiply(tmp, eye, tmp)\n        }\n        this.square_viewport = tmp;\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        // we arrive at what part of the world then is visible\n        let visible_world = this.getVisibleWorld() // new Rectangle(ll[0], ll[1], tr[0], tr[1])\n        let center = visible_world.center()\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * center[0], -scale[1] * center[1]]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        // and given the size of the viewport we can set up ndc square -> viewport matrix\n        // this.viewport = new Rectangle(0, 0, width, height)\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n    }\n\n    getVisibleWorld() {\n        //console.log(\"visibleWorld in transform.js\")\n        var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        // we arrive at what part of the world then is visible\n        return new Rectangle(ll[0], ll[1], tr[0], tr[1])\n    }\n\n    getCenter() {\n        //console.log(\"getCenter in transform.js\")\n        var center = this.backward([\n            this.viewport.xmin + (this.viewport.xmax - this.viewport.xmin) * 0.5,\n            this.viewport.ymin + (this.viewport.ymax - this.viewport.ymin) * 0.5, 0.0]);\n        return center\n    }\n\n    getScaleDenominator() {\n        let viewport_in_meter = new Rectangle(0, 0,\n            this.viewport.width() / meter_to_pixel,\n            this.viewport.height() / meter_to_pixel)\n        let world_in_meter = this.getVisibleWorld()\n        let St = Math.sqrt(world_in_meter.area() / viewport_in_meter.area())\n        return St\n    }\n\n\n\n}\n\nexport default Transform\n","import { now } from \"./animate\"\n//import Transform from './transform';\n//import { log } from \"util\";\n\n//import Rectangle from './rect';\n//var meter_to_pixel = 3779.5275590551; // 1 meter equals 3779.5275590551 pixels\n\n\n// FIXME:\n// [x] Remove retrieved property on SSCTree \n// [x] Unify ImageTileContent and TileContent into one class\n// [x] Make Renderer play nicely with the modifications\n// [ ] Resurrect Evictor, with default strategy of removing old stuff\n// [ ] Make retrieval more resilient against non-working server (e.g. ask again for tile content), while not overloading the server\n\n\nfunction center2d(box3d)\n{\n    // 2D center of bottom of box\n    let xmin = box3d[0]\n    let ymin = box3d[1]\n    let xmax = box3d[3]\n    let ymax = box3d[4]\n    return [xmin + 0.5 * (xmax - xmin),\n            ymin + 0.5 * (ymax - ymin)]\n}\n\nfunction distance2d(target, against)\n{\n    // find projected distance between 2 box3d objects\n    let ctr_t = center2d(target)\n    let ctr_a = center2d(against)\n    let dx2 = Math.pow(ctr_a[0] - ctr_t[0], 2)\n    let dy2 = Math.pow(ctr_a[1] - ctr_t[1], 2)\n    return Math.sqrt(dx2 + dy2)\n}\n\nexport class SSCTree {\n    constructor(msgbus, settings) {\n        this.msgbus = msgbus\n        this.tree = null\n        this.settings = settings\n    }\n\n    load() {\n        //\n        // FIXME: convert to worker that does this\n        // \n        // fetch('nl/tree_max9_fanout10_9.json')\n\n        //we specify folder 'dist_test', 'dist_buchholz_greedy', or 'dist_buchholz_astar' in sscview-js\\rollup.config.js\n        //let data_folder = 'data/';\n//        let jsonfile = 'nodes.json';\n        //let jsonfile = 'tree_buchholz.json';\n        //let jsonfile = 'tree.json';\n        fetch(this.settings.tree_root_href + this.settings.tree_root_file_nm)\n            .then(r => {\n                return r.json()\n            })\n            .then(tree => {\n                this.tree = tree;\n                //let box3d = tree.box;\n                //tree.center2d = [(box3d[0] + box3d[3]) / 2, (box3d[1] + box3d[4]) / 2]\n                let dataelements = obtain_dataelements(this.tree)  //dataelements recorded in .json file\n                dataelements.forEach(element => { //originally, each element has attributes \"id\", \"box\", \"info\"\n                    element.content = null\n                    element.last_touched = null\n                    element.url = this.settings.tile_root_href + element.info\n                    element.loaded = false;\n                })\n            })\n            .then(() => {\n                // Notify via PubSub that tree has loaded \n                // (this re-renders the map if not already rendering)\n                this.msgbus.publish('data.tree.loaded', 'tree.ready')\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    load_subtree(node) {\n        fetch(this.settings.tree_root_href + node.uri)\n            .then(r => {\n                return r.json()\n            })\n            .then(j => {\n\n                node.children = j.children;\n                let dataelements = obtain_dataelements(node)  //dataelements recorded in .json file\n                dataelements.forEach(element => { //originally, each element has attributes \"id\", \"box\", \"info\"\n                    element.content = null\n                    element.last_touched = null\n                    element.url = this.settings.tile_root_href + element.info\n                    element.loaded = false;\n                })\n\n                this.msgbus.publish('data.tree.loaded', 'tree.ready')\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n\n    fetch_tiles(box3d, gl) {\n        if (this.tree === null) { return }\n\n        let subtrees = obtain_overlapped_subtrees(this.tree, box3d)\n        subtrees.map(node => {\n            this.load_subtree(node)\n        })\n\n        let overlapped_dataelements = obtain_overlapped_dataelements(this.tree, box3d)\n        let to_retrieve = [];\n        overlapped_dataelements.map(elem => {\n            if (elem.loaded === false) {\n                to_retrieve.push(elem);\n            }\n        })\n\n        // sort the tiles via the distance from center of the box\n        // decorate-sort-undecorate based on distance:\n        //      2D center of viewport -- 2D center of bottom of tile\n        to_retrieve = to_retrieve.map(\n            elem => {\n                return [distance2d(elem.box, box3d), elem]\n            }\n        )\n        to_retrieve.sort(\n            (a, b) => { \n                    if (a[0] < b[0]) { return -1 }\n                    else if (a[0] > b[0]) { return 1 }\n                    else {return 0}\n            }\n        )\n        to_retrieve = to_retrieve.map(\n            elem => {return elem[1]}\n        )\n\n        // schedule tiles for retrieval\n        to_retrieve.map(elem => {\n            let content = new TileContent(this.msgbus, this.settings.texture_root_href)\n            content.load(elem.url, gl) //e.g., elem.url = de/buchholz_greedy_test.obj\n            elem.content = content\n            elem.loaded = true\n            elem.last_touched = now()\n            // FIXME: is this really 'retrieved' ? Or more, scheduled for loading ?\n            // FIXME: put this in the tile itself, instead of in extra object 'this.retrieved'\n        })\n\n    }\n\n    get_relevant_tiles(box3d) {\n        if (this.tree === null) { return [] }\n\n        let overlapped_dataelements = obtain_overlapped_dataelements(this.tree, box3d)\n        return overlapped_dataelements\n            .map(elem => { // set for each tile to be rendered the last accessed time\n                elem.last_touched = now();\n                return elem\n            })\n    }\n\n    // FIXME: why not pass in St (current scale denominator, instead of transform class)\n    stepMap(transform) {\n\n//        let viewport_in_meter = new Rectangle(0, 0,\n//            transform.viewport.width() / meter_to_pixel,\n//            transform.viewport.height() / meter_to_pixel)\n//        let world_in_meter = transform.getvisibleWorld()\n\n//        let St = Math.sqrt(world_in_meter.area() / viewport_in_meter.area()) //current scale denominator\n        // FIXME: these 2 variables should be adjusted\n        //         based on which tGAP is used...\n        // FIXME: this step mapping should move to the data side (the tiles)\n        //         and be kept there (for every dataset visualized on the map)\n        // FIXME: should use this.getScaleDenominator()\n\n        // let Sb = 48000  // (start scale denominator)\n        // let total_steps = 65536 - 1   // how many generalization steps did the process take?\n\n        //let Sb = 24000  // (start scale denominator)\n        //let total_steps = 262144 - 1   // how many generalization steps did the process take?\n\n        let St = transform.getScaleDenominator()\n        if (this.tree === null)\n        {\n             return [0, St]\n        }\n        // reduction in percentage\n        let reductionf = 1 - Math.pow(this.tree.metadata.start_scale_Sb / St, 2) \n        //Originally, step = this.Nb * reductionf.\n        //If the goal map has only 1 feature left, then this.Nb = this.Ns + 1.\n        //If the base map has 5537 features and the goal map has 734 features,\n        //then there are 4803 steps (this.Nb != this.Ns + 1).\n        //It is better to use 'this.Ns + 1' instead of this.Nb\n        // <--->\n        // FIXME: NO! Use Nb to determine mapping (number of objects at base scale) and \n        // clamp the range when steps are missing at the top (so when the tree of merge steps is not full)\n\n        let step = (this.tree.metadata.no_of_steps_Ns + 1) * reductionf //step is not necessarily an integer\n        return [Math.max(0, step), St] \n        // FIXME: Why also return St??? (to make it easier for downstream methods?\n        // but where they are called, they should already have access to St (by means of the transform class)...\n    }\n\n}\n\n\n\n\nfunction obtain_overlapped_dataelements(node, box3d) {\n    // console.log(box)\n    let result = []\n    let stack = [node]\n    while (stack.length > 0) {\n        let node = stack.pop()\n\n        if (node.hasOwnProperty('children') === true)\n        {\n            // visit chids, if they overlap\n            node.children.forEach(child => {\n                if (overlaps3d(node.box, box3d)) {\n                    stack.push(child)\n                }\n            });\n        }\n\n        // add data elements to result list, if box overlaps\n        if (node.hasOwnProperty('dataelements') === true)\n        {\n            node.dataelements.forEach(element => {\n                if (overlaps3d(element.box, box3d)) {\n                    result.push(element)\n                }\n            });\n        }\n    }\n    return result\n}\n\n\nfunction obtain_overlapped_subtrees(node, box3d) {\n    let result = []\n    let stack = [node]\n    while (stack.length > 0) {\n        let node = stack.pop()\n        if (node.hasOwnProperty('children') === true)\n        {\n            // visit chids, if they overlap\n            node.children.forEach(child => {\n                if (child.hasOwnProperty('children'))\n                {\n                    stack.push(child)\n                }\n                else if (child.hasOwnProperty('uri') && !child.hasOwnProperty('loaded') && overlaps3d(child.box, box3d)) {\n                    child.loaded = true;\n                    result.push(child)\n                }\n            });\n        }\n\n    }\n    return result\n}\n\n\nfunction obtain_dataelements(root) {\n    // FIXME: make iterator/generator function* \n    // to avoid making the whole result list in memory\n    let result = []\n    let stack = [root]\n    while (stack.length > 0) {\n        const node = stack.pop()\n\n        if (node.hasOwnProperty('children') === true)\n        {\n            // visit chids, if they overlap\n            node.children.forEach(child => {\n                stack.push(child)\n            });\n        }\n        if (node.hasOwnProperty('dataelements') === true)\n        {\n            // add data elements to result list\n            node.dataelements.forEach(element => {\n                result.push(element)\n            });\n        }\n    }\n    return result\n}\n\n/*\nfunction overlaps2d(one, other) {\n    // Separating axes theorem\n    // xmin=[0][0]\n    // xmax=[1][0]\n    // ymin=[0][1]\n    // ymax=[1][1]\n    // If one of the following is true then there can be no overlap\n    return !(one[1][0] < other[0][0] ||\n        one[0][0] > other[1][0] ||\n        one[1][1] < other[0][1] ||\n        one[0][1] > other[1][1])\n}\n*/\n\nexport function overlaps3d(one, other) {\n    // Separating axes theorem, nD\n    const dims = 3\n    let are_overlapping = true;\n    for (let min = 0; min < dims; min++) {\n        let max = min + dims\n        if ((one[max] < other[min]) || (one[min] > other[max])) {\n            are_overlapping = false\n            break\n        }\n    }\n    return are_overlapping\n}\n\nfunction generate_class_color_dt() {\n\n    var class_color_dt = {\n        2101: { r: 239, g: 200, b: 200 },\n        2112: { r: 255, g: 174, b: 185 },\n        2114: { r: 204, g: 204, b: 204 },\n        2201: { r: 138, g: 211, b: 175 },\n        2202: { r: 51, g: 204, b: 153 },\n        2213: { r: 170, g: 203, b: 175 },\n        2230: { r: 181, g: 227, b: 181 },\n        2301: { r: 157, g: 157, b: 108 },\n        3103: { r: 254, g: 254, b: 254 },\n        3302: { r: 204, g: 153, b: 255 },\n        4101: { r: 234, g: 216, b: 189 },\n        4102: { r: 230, g: 255, b: 204 },\n        4103: { r: 171, g: 223, b: 150 },\n        4104: { r: 255, g: 255, b: 192 },\n        4105: { r: 40, g: 200, b: 254 },\n        4107: { r: 141, g: 197, b: 108 },\n        4108: { r: 174, g: 209, b: 160 },\n        4109: { r: 207, g: 236, b: 168 },\n        4111: { r: 190, g: 239, b: 255 },\n        5112: { r: 181, g: 208, b: 208 },\n    };\n\n    for (var key in class_color_dt) {\n        var color = class_color_dt[key];  //color is a dictionary of elements r, g, b\n        color.r_frac = color.r / 255;\n        color.g_frac = color.g / 255;\n        color.b_frac = color.b / 255;\n    }\n\n    return class_color_dt;\n}\n\nlet isPowerOf2 = ((value) => { return (value & (value - 1)) == 0 })\n\n\n\n\n\n\n\n// FIXME: UNIFY TileContent and ImageTileContent by branching inside load()-method\n// on the file extension to be retrieved... (not super elegant)\n\n// This makes TileContent quite big class -> split in subclasses?\n\nclass TileContent {\n    constructor(msgbus, texture_root_href) {\n        this.msgbus = msgbus\n\n        // image tiles\n        this.texture_root_href = texture_root_href;\n        this.buffer = null;\n        this.texture = null;\n        this.textureCoordBuffer = null;\n\n        // ssc tiles\n        this.line_triangleVertexPosBufr = null;\n        this.displacementBuffer = null;\n        this.polygon_triangleVertexPosBufr = null;\n    }\n\n    load(url, gl) {\n        if (url.endsWith('obj') == true) \n        {\n            this.load_ssc_tile(url, gl) \n        }\n        else if (url.endsWith('json') == true) \n        {\n            this.load_image_tile(url, gl)\n        }\n        else\n        {\n            console.error('unknown url type: '+ url)\n        }\n    }\n\n    load_ssc_tile(url, gl) {\n        fetch(url)  //e.g., url = \"http://localhost:8000/de/buchholz_greedy_test.obj\"\n            .then(response => { return response.text() })  //e.g., the text (dataset) stored in an .obj file            \n            .then(data_text => {\n                var data_from_text = this._obtain_data_from_text(data_text, gl, this.class_color_dt);\n                this.line_triangleVertexPosBufr = data_from_text[0];\n                this.displacementBuffer = data_from_text[1];\n                this.polygon_triangleVertexPosBufr = data_from_text[2];\n                this.msgbus.publish('data.tile.loaded', 'tile.ready')\n            })\n            .catch(err => { console.error(err) });\n    }\n\n    _obtain_data_from_text(data_text, gl) {\n        //data_text is the content of an .obj file\n\n        var class_color_dt = generate_class_color_dt();\n        var deltas_bound_triangles = [];\n        var line_and_polygon_triangleVertexPosBufr = \n            this._obtain_line_and_polygon_triangleVertexPosBufr(data_text, gl, class_color_dt, deltas_bound_triangles)\n\n        let displacementElements = new Float32Array(deltas_bound_triangles.flat(1));\n        let displacementBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, displacementBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, displacementElements, gl.STATIC_DRAW);\n\n        displacementBuffer.itemSize = 2; //each item has only x and y\n        displacementBuffer.numItems = displacementElements.length / 2;\n\n        return [\n            line_and_polygon_triangleVertexPosBufr[0],\n            displacementBuffer,\n            line_and_polygon_triangleVertexPosBufr[1]];\n    }\n\n\n    _obtain_line_and_polygon_triangleVertexPosBufr(data_text, gl,\n        class_color_dt, deltas_bound_triangles) {\n\n        var step_high = [];\n        var vertex_lt = [];\n        var feature_color = [];\n        var triangle_color_lt = [];\n        var vertices_bound_triangles = []; //vertices of the boundaries, in order to form triangles to display the boundaries\n        data_text.split(\"\\n\").forEach(l => this._parseLine(\n            l, vertex_lt, class_color_dt, triangle_color_lt,\n            step_high, feature_color, vertices_bound_triangles, deltas_bound_triangles));\n\n        //obtain line_triangleVertexPosBufr;\n        var line_vertexElements = new Float32Array(vertices_bound_triangles.flat(1));\n        var line_itemSize = 4; //the number of elements, which is 4 for position, i.e., x, y, z (step_low), step_high\n        var line_extended_itemSize = line_itemSize; //for computing the number of vertices; \n        var line_triangleVertexPosBufr = this._obtain_triangleVertexPosBufr(\n            gl, line_vertexElements, line_itemSize, line_extended_itemSize);\n\n        //obtain polygon_triangleVertexPosBufr;\n        var polygon_vertexElements = new Float32Array(triangle_color_lt);\n        var polygon_itemSize = 3; //the number of elements, which is 3 for position, i.e., x, y, z \n        //each vertex has 6 elements in triangle_color_lt, i.e., x, y, z, r_frac, g_frac, b_frac\n        var polygon_extended_itemSize = 6; //for computing the number of vertices;        \n        var polygon_triangleVertexPosBufr = this._obtain_triangleVertexPosBufr(\n            gl, polygon_vertexElements, polygon_itemSize, polygon_extended_itemSize);\n\n        return [line_triangleVertexPosBufr, polygon_triangleVertexPosBufr];\n    }\n\n\n    _obtain_triangleVertexPosBufr(gl, vertexElements, itemSize, extended_itemSize) {\n        \n        let triangleVertexPosBufr = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        gl.bufferData(gl.ARRAY_BUFFER, vertexElements, gl.STATIC_DRAW);\n\n        triangleVertexPosBufr.itemSize = itemSize;        \n        triangleVertexPosBufr.numItems = vertexElements.length / extended_itemSize; \n        //the number of vertices;\n\n        return triangleVertexPosBufr;\n    }\n\n\n    _parseLine(line, vertex_lt, class_color_dt, triangle_color_lt,\n        step_high, feature_color, vertices_bound_triangles, deltas_bound_triangles) {\n\n        var words = line.split(' ');\n        if (words[0] == 'v') {\n            vertex_lt.push({\n                x: Number(words[1]),\n                y: Number(words[2]),\n                z: Number(words[3])\n            });\n        } else if (words[0] == 'g') {\n            var feature_class = Number(words[1].split('_')[0]);\n            feature_color[0] = class_color_dt[feature_class];\n        } else if (words[0] == 'f') {\n            // 3 vertex indentifiers make a triangle; add coordinates and colors\n            var f_color = feature_color[0];\n            for (i = 1; i <= 3; i++) {\n                var vertex = vertex_lt[Number(words[i]) - 1];\n                triangle_color_lt.push(vertex.x, vertex.y, vertex.z,\n                    f_color.r_frac, f_color.g_frac, f_color.b_frac);\n            }\n        }\n        else if (words[0] == '#') {\n            // words[1]: step_high; words[2]: edge_id\n            if (words.length > 1) {\n                step_high[0] = words[1];\n            }\n        }\n        else if (words[0] == 'l') {\n            var polyline = [];\n            for (var i = 1; i < words.length; i++) {\n                polyline.push(vertex_lt[words[i] - 1]);\n            }\n\n            var point_records = [];\n            for (var j = 0; j < polyline.length; j++) {\n                var pt = polyline[j];\n                point_records.push([pt.x, pt.y, pt.z, step_high[0]]); //pt.z is step_low\n            }\n\n            for (var k = 0; k < point_records.length - 1; k++) {\n                var start = point_records[k];    //start point of a line segment\n                var end = point_records[k + 1];  //end point of the line segment\n                var start_xy = start.slice(0, 2);\n                var end_xy = end.slice(0, 2);\n                var v = make_vector_start_end(start_xy, end_xy);\n                var length = norm(v);\n\n                if (length != 0) {\n                    var unitvec = div(v, length);\n                    //The lengths of startr, startl, endr, and endl are sqrt(2)\n                    var startr = add(mul(unitvec, -1), rotate90cw(unitvec));\n                    var startl = add(mul(unitvec, -1), rotate90ccw(unitvec));\n                    var endr = add(unitvec, rotate90cw(unitvec));\n                    var endl = add(unitvec, rotate90ccw(unitvec));\n\n\n                    //start consists of x, y, z (step_low), step_high, while\n                    //startl consists of only x, y\n                    vertices_bound_triangles.push(start, start, end, start, end, end);\n                    deltas_bound_triangles.push(startl, startr, endl, startr, endr, endl);\n                }\n            }\n        }\n\n        //#region vector computation\n\n        function sub(a, b) {\n            /*Subtract a vector b from a, or subtract a scalar*/\n            var result_values = [];\n            if (isNaN(b)) { //b is not a number; b is iterable\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] - b[i]);\n                }\n            }\n            else {\n                for (var j = 0; j < a.length; j++) {\n                    result_values.push(a[j] - b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function add(a, b) {\n            /*Add a vector b to a, or add a scalar*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] + b[i]);\n                }\n            }\n            else {\n                for (var j = 0; j < a.length; j++) {\n                    result_values.push(a[j] + b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function mul(a, b) {\n            /*Multiply a vector either element-wise with another vector, or with a\n            scalar.*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] * b[i]);\n                }\n            }\n            else {\n                for (var j = 0; j < a.length; j++) {\n                    result_values.push(a[j] * b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function div(a, b) {\n            /*Element-wise division with another vector, or with a scalar.*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] / b[i]);\n                }\n            }\n            else {\n                for (var j = 0; j < a.length; j++) {\n                    result_values.push(a[j] / b);\n                }\n            }\n\n            return result_values;\n        }\n\n\n        //function make_vector(end, start) {\n        //    /*Creates a vector from the start to the end.\n\n        //    Vector is made based on two points{ end - (minus) start.\n        //        */\n        //    return sub(end, start);\n        //}\n\n        function make_vector_start_end(start, end) {\n            /*Creates a vector from the start to the end.\n            \n            Vector is made based on two points{ end - (minus) start.\n                */\n            return sub(end, start);\n        }\n\n        function dot(v1, v2) {\n            /*Returns dot product of v1 and v2 */\n            if (v1.length != v2.length) {\n                throw \"Vector dimensions should be equal\";\n            }\n\n            var dot_value = 0;\n            for (var i = 0; i < v1.length; i++) {\n                dot_value += v1[i] * v2[i];\n            }\n            return dot_value;\n        }\n\n\n        function norm2(v) {\n            /*Returns the norm of v, *squared*.*/\n            return dot(v, v);\n        }\n\n\n        function norm(a) {\n            /*L2 norm*/\n            return Math.sqrt(norm2(a));\n        }\n\n\n        //function dist(start, end) {\n        //    /*Distance between two positons*/\n        //    return norm(make_vector_start_end(start, end));\n        //}\n\n\n        //function unit(v) {\n        //    /*Returns the unit vector in the direction of v.*/\n        //    return div(v, norm(v));\n        //}\n\n\n        //function cross(a, b) {\n        //    /*Cross product between a 3-vector or a 2-vector*/\n        //    if (a.length != b.length) {\n        //        throw \"Vector dimensions should be equal\";\n        //    }\n        //    if (a.length == 3) {\n        //        return (\n        //            a[1] * b[2] - a[2] * b[1],\n        //            a[2] * b[0] - a[0] * b[2],\n        //            a[0] * b[1] - a[1] * b[0]);\n        //    }\n        //    else if (a.length == 2) {\n        //        return a[0] * b[1] - a[1] * b[0];\n        //    }\n        //    else {\n        //        throw 'Vectors must be 2D or 3D';\n        //    }\n        //}\n\n        //function angle(v1, v2) {\n        //    /*angle between 2 vectors*/\n        //    return Math.acos(dot(v1, v2) / (norm(v1) * norm(v2)));\n        //}\n\n        //function angle_unit(v1, v2) {\n        //    /*angle between 2 *unit* vectors*/\n        //    let d = dot(v1, v2)\n        //    if (d > 1.0 || d < -1.0) {\n        //        console.log(\"dot not in [-1, 1] -- clamp\");\n        //    }\n        //    d = Math.max(-1.0, Math.min(1.0, d));\n        //    return Math.acos(d);\n        //}\n\n        //function near_zero(val) {\n        //    if (Math.abs(val) <= Math.pow(0.1, 8)) {\n        //        return true;\n        //    }\n        //    else {\n        //        return false;\n        //    }\n        //}\n\n        //function bisector(u1, u2) {\n        //    /*Based on two unit vectors perpendicular to the wavefront,\n        //    get the bisector\n            \n        //    The magnitude of the bisector vector represents the speed\n        //        in which a vertex has to move to keep up(stay at the intersection of)\n        //    the 2 wavefront edges\n        //    */\n        //    let direction = add(u1, u2);\n\n        //    var max_value = 0;\n        //    for (var i = 0; i < direction.length; i++) {\n        //        max_value = Math.max(max_value, Math.abs(direction[i]));\n        //    }\n\n        //    if (near_zero(max_value)) {\n        //        return (0, 0);\n        //    }\n        //    let alpha = 0.5 * Math.PI + 0.5 * angle_unit(u1, u2);\n        //    let magnitude = Math.sin(alpha); //if u1 and u2 are unit vectors, then magnitude = sqrt(2) / 2\n        //    var bisector_result = div(unit(direction), magnitude);\n        //    return bisector_result;\n        //}\n\n\n        function rotate90ccw(v) {\n            /*Rotate 2d vector 90 degrees counter clockwise\n            \n                (x, y) -> (-y, x)\n            */\n            return [-v[1], v[0]];\n        }\n\n\n        function rotate90cw(v) {\n            /*Rotate 2d vector 90 degrees clockwise\n            \n                (x, y) -> (y, -x)\n            */\n            return [v[1], -v[0]];\n        }\n    //#endregion\n    }\n\n\n    load_image_tile(href, gl) {\n        let f = () => {\n\n            // setup texture as placeholder for texture to be retrieved later\n            this.texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this.texture);\n            // Because images have to be download over the internet\n            // they might take a moment until they are ready.\n            // Until then put a single pixel in the texture so we can\n            // use it immediately. When the image has finished downloading\n            // we'll update the texture with the contents of the image.\n            const level = 0;\n            const internalFormat = gl.RGBA;\n            const width = 1;\n            const height = 1;\n            const border = 0;\n            const srcFormat = gl.RGBA;\n            const srcType = gl.UNSIGNED_BYTE;\n            const pixel = new Uint8Array([255, 255, 255, 255]);  // opaque blue\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n                            width, height, border, srcFormat, srcType,\n                            pixel);\n\n            this.textureCoordBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n                0.0, 0.0, \n                0.0, 1.0,\n                1.0, 1.0,\n                0.0, 0.0,\n                1.0, 1.0,\n                1.0, 0.0\n            ]), gl.STATIC_DRAW);\n\n            fetch(href).then(r => { return r.json() })\n            .then(mesh => { \n                this._process_image_tile(mesh, gl)\n                // this.msgbus.publish('data', 'tile.loaded.triangles')\n            })\n            .catch(err => { console.error(err) }) }\n\n        f()\n        // q.add(f)\n\n        // let image = new Image()\n        // let now = performance.now()\n        // image.crossOrigin = \"\"\n        // image.src = 'https://geodata.nationaalgeoregister.nl/tiles/service/tms/1.0.0/brtachtergrondkaart/EPSG:28992/0/0/0.png'\n        // image.addEventListener('load', () => {\n        //     this.texture = gl.createTexture();\n        //     gl.bindTexture(gl.TEXTURE_2D, this.texture);         \n        //     gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        //     console.log(performance.now() - now)\n        //     if (isPowerOf2(image.width) && isPowerOf2(image.height)) \n        //     {\n        //         gl.generateMipmap(gl.TEXTURE_2D);\n        //     }\n        //     else\n        //     {\n        //         gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        //         gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        //         gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        //     }\n        // })\n    /*\n    this.texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n\n    var now = performance.now();\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n*/\n        // let scope = this;\n        // let client = new XMLHttpRequest();\n        // client.open('GET', this.url, true);\n        // client.responseType = \"text\";  // \"text\", \"\", \"arraybuffer\", \"json\" -- https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n        // client.onreadystatechange = function()\n        // {\n        //     if (client.readyState === XMLHttpRequest.DONE && client.status === 200)\n        //     {\n        //         console.log('loaded tile ' + scope.url)\n        //         scope._process(client.response);\n        //         // var buf = new ArrayBuffer(client.response.length);\n        //         // buf = client.response;\n        //         // // Here we do transfer the buffer in a way that does not involve\n        //         // // copying the ArrayBuffer\n        //         // // Note, we do assume that this works, but as it has been added\n        //         // // to the spec later, this could not be implemented in a browser!\n        //         // postMessage(buf, [buf]);\n        //     }\n        //     // we close the worker process\n        //     // close();\n        // }\n        // client.send(null);\n    }\n\n    _process_image_tile(response, gl) {\n        let result = []\n        \n        response.points.forEach(\n            point => result.push(...point)\n        )\n        // could also be: response.points.flat(1); ???\n        this._upload_image_tile_mesh(gl, new Float32Array(result))\n\n        fetch(this.texture_root_href + response.texture_href, {mode: 'cors'})\n            .then((response) => {\n                if (!response.ok) {\n                    throw response;\n                }\n                \n                return response.blob();\n            })\n            .then((blob) => {\n                // Giving options does not work for Firefox (do we need to give all option fields?)\n                return createImageBitmap(blob\n                    // , \n                    // {\n                    // premultiplyAlpha: 'none',\n                    // colorSpaceConversion: 'none',\n                    // }\n                    );\n            }).then((bitmap) => {\n                this.texture = gl.createTexture();\n                gl.bindTexture(gl.TEXTURE_2D, this.texture);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\n                if (isPowerOf2(bitmap.width) && isPowerOf2(bitmap.height)) \n                {\n                    gl.generateMipmap(gl.TEXTURE_2D);\n                }\n                else\n                {\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                }\n                this.msgbus.publish('data.tile.loaded', 'tile.loaded.texture')\n            }).catch(function(e) {\n                console.error(e);\n            });\n    }\n\n    _upload_image_tile_mesh(gl, mesh) {\n        this.buffer = gl.createBuffer();  //buffer is an object with a reference to the memory location on the GPU\n        // bind buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        // upload content to the GPU\n        gl.bufferData(gl.ARRAY_BUFFER, mesh, gl.STATIC_DRAW);\n        // remember number of triangles for this buffer\n        this.buffer.numItems = (mesh.length) / 3;\n        // do not keep the floatarray object alive\n        // now we have uploaded the triangles to the GPU\n        // FIXME: is this needed?\n        // this.buffer.buffer = null\n    }\n\n    destroy(gl) {\n        // clear buffers / textures\n        let buffers = [this.buffer, this.textureCoordBuffer, this.line_triangleVertexPosBufr, this.displacementBuffer, this.polygon_triangleVertexPosBufr]\n        buffers.forEach(\n            buffer =>\n            {\n                if (buffer !== null)\n                {\n                    gl.deleteBuffer(buffer)\n                    buffer = null\n                }\n            }\n        )\n        let textures = [this.texture]\n        textures.forEach(\n            texture => \n            {\n                gl.deleteTexture(texture)\n                texture = null\n            }\n        )\n\n    }\n\n}\n\n\n\nexport class Evictor {\n    constructor(ssctree, gl)\n    {\n        this.ssctree = ssctree\n        this.gl = gl\n    }\n\n    /*\n    // Releasing resources by means of an evictor... \n    // the evict method implements a strategy to decide which resources to evict\n    //\n    // Aspects to consider:\n    // - tile size\n    // - when was it last used\n    // - how far is it away from the center of the map\n    // - is it currently displayed\n    // - ... ?\n    */\n    evict(box3d)\n    {\n        let gl = this.gl\n        let to_evict = []\n        if (this.ssctree.tree === null) { return; }\n        let dataelements = obtain_dataelements(this.ssctree.tree).filter(elem => { return elem.loaded })\n        console.log('number of loaded tiles: ' + dataelements.length)\n        dataelements.forEach(\n            tile =>\n            {\n                // remove tiles that were rendered more than 3 seconds ago\n                // and that are currently not on the screen\n                if (tile.last_touched !== null && (tile.last_touched + 3000) < now() \n                    && !overlaps3d(box3d, tile.box))\n                {\n                    to_evict.push(tile)\n                }\n            }\n        )\n        console.log('number of tiles for which memory will be released: ' + to_evict.length)\n        to_evict.forEach(tile => {\n            tile.content.destroy(gl)\n            tile.content = null\n            tile.last_touched = null\n            tile.loaded = false\n        })\n        // when we have removed tiles, let's clear the screen\n        if (to_evict.length > 0 )\n        {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n        }\n    }\n}\n\nexport default SSCTree\n\n","// from https://github.com/kelektiv/node-uuid\n// mit license\n\n// Lookup Table\nlet byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n    byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n    let i = offset || 0;\n    let bth = byteToHex;\n    // join used to fix memory issue caused by concatenation: \n    // https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n    return ([bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nfunction mathRNG() {\n    let rnds = new Array(16);\n    for (let i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) {\n            r = Math.random() * 0x100000000;\n        }\n        rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n    return rnds;\n}\n\nfunction getUuid() {\n    let x = mathRNG();\n    return bytesToUuid(x);\n}\n// end: from https://github.com/kelektiv/node-uuid\n\n\nclass MessageBus {\n    constructor() {\n        this._topics = {}; // {topic: [subscriberFn, ...], ...}\n    }\n\n    publish(topic, message, sender) {\n        // console.log('publish invoked ' + topic + ' ' + sender + ' ' + message);\n        if (sender === null) {\n            sender = 0\n        }\n        let subscribers = this._topics[topic];\n        if (!subscribers) {\n            return false;\n        }\n        subscribers.forEach(subscriberFn => {\n            setTimeout(subscriberFn(topic, message, sender), 0)\n        });\n\n        return true;\n    }\n\n    subscribe(topic, func) {\n        // if the topic list does not exist yet, make one\n        if (!this._topics[topic]) {\n            this._topics[topic] = [];\n        }\n        // add the topic to the list\n        this._topics[topic].push(func)\n        // return reference to arrow function that removes subscription, once invoked\n        return {\n            remove: (() => {\n                // console.log('Invoking remove')\n                // console.log(this._topics[topic])\n                // console.log('old length ' + this._topics[topic].length)\n                let index = this._topics[topic].indexOf(func)\n                // console.log(index)\n                this._topics[topic].splice(index, 1)\n                // console.log('new length ' + this._topics[topic].length)\n                if (this._topics[topic].length === 0) {\n                    delete this._topics[topic]\n                }\n            })\n        }\n    }\n\n}\n\nconst instance = new MessageBus();\nObject.freeze(instance);\n\n\nexport class MessageBusConnector {\n\n    constructor() {\n        this.id = getUuid()\n    }\n\n    publish(topic, message) {\n        return instance.publish(topic, message, this.id)\n    }\n\n    subscribe(topic, func) {\n        return instance.subscribe(topic, func)\n    }\n}\n\nexport default MessageBusConnector;\n","/**\n* Records the trace of the mouse\n*/\n\nimport { now as _now } from '../animate';\n\nclass Trace\n{\n    constructor(val)\n    {\n        this._trace = []\n        this.push(val);\n    }\n\n    shift(cutoff)  // value in msec\n    {\n        // remove old positions older than `cutoff` value (in milli seconds)\n        const now = _now();\n        while ((this._trace.length > 0) && ((now - this._trace[0][0]) > cutoff))\n        {\n            // remove at beginning of array\n            this._trace.shift();\n        }\n    }\n\n    push(val)\n    {\n        const now = _now();\n        this._trace.push([now, val]);\n    }\n\n    first()\n    {\n        return this._trace[0]\n    }\n\n    last()\n    {\n        return this._trace[this._trace.length - 1]\n    }\n\n    lastbutone()\n    {\n        return this._trace[this._trace.length - 2]\n    }\n\n    length()\n    {\n        return this._trace.length\n    }\n}\n\nexport default Trace\n","\"use strict\";\n\nclass Rectangle {\n    constructor(xmin, ymin, xmax, ymax)\n    {\n        this.xmin = xmin\n        this.ymin = ymin\n        this.xmax = xmax\n        this.ymax = ymax\n    }\n\n    width()\n    {\n        return this.xmax - this.xmin\n    }\n\n    height()\n    {\n        return this.ymax - this.ymin\n    }\n\n    toString()\n    {\n        return `new Rectangle(${this.xmin}, ${this.ymin}, ${this.xmax}, ${this.ymax})`\n    }\n\n    area()\n    {\n        return this.width() * this.height()\n    }\n\n    center()\n    {\n        return [this.xmin + this.width() * 0.5,\n                this.ymin + this.height() * 0.5]\n    }\n}\n\nexport default Rectangle\n","// FIXME: rename draw to renderFunc ?\n\nclass DrawProgram {\n    constructor(gl, vertexShaderText, fragmentShaderText) {\n\n        const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexShaderText);\n        const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentShaderText);\n\n        // Create program: attach, link, validate, detach, delete\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            console.error('ERROR linking program!', gl.getProgramInfoLog(shaderProgram));\n            return;\n        }\n        gl.validateProgram(shaderProgram);\n        if (!gl.getProgramParameter(shaderProgram, gl.VALIDATE_STATUS)) {\n            console.error('ERROR validating program!', gl.getProgramInfoLog(shaderProgram));\n            return;\n        }\n\n        this.shaderProgram = shaderProgram;\n        this.gl = gl;\n\n        // FIXME: when to call these detach/delete's? After succesful compilation?\n        // gl.detachShader(this.shaderProgram, vertexShader);\n        // gl.detachShader(this.shaderProgram, fragmentShader);\n        // gl.deleteShader(vertexShader);\n        // gl.deleteShader(fragmentShader);\n\n        // creates a shader of the given type, uploads the source and\n        // compiles it.\n        function loadShader(gl, type, source) {\n\n            const shader = gl.createShader(type);\n            gl.shaderSource(shader, source); // Send the source of the shader\n            gl.compileShader(shader); // Compile the shader program\n\n            // See if it compiled successfully\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                console.error('ERROR occurred while compiling the shaders: ' + gl.getShaderInfoLog(shader));\n                gl.deleteShader(shader);\n                return null;\n            }\n\n            return shader;\n        }\n    }\n\n    _prepare_vertices(gl, shaderProgram, attribute_name, itemSize, stride, offset) {\n\n        const attrib_location = gl.getAttribLocation(shaderProgram, attribute_name);\n        gl.enableVertexAttribArray(attrib_location);\n        gl.vertexAttribPointer(\n            attrib_location,    // * Attribute location\n            itemSize,           // * Number of components per attribute ????? \n            gl.FLOAT,           // * Type of elements\n            false,              // * Is normalized?\n            stride,             // * stride \n            offset              // * Offset from the beginning of \n        );\n\n    }\n\n}\n\n\n\n\nclass ImageTileDrawProgram extends DrawProgram \n{\n    constructor(gl)\n    {\n        let vertexShaderText = `\n            precision highp float;\n\n            attribute vec3 vertexPosition_modelspace;\n            attribute vec2 aTextureCoord;\n\n            uniform mat4 M;\n\n            varying highp vec2 vTextureCoord;\n\n            void main()\n            {\n              gl_Position = M * vec4(vertexPosition_modelspace, 1.0);\n              vTextureCoord = aTextureCoord;\n            }\n        `\n\n        let fragmentShaderText = `\n            precision highp float;\n\n            varying highp vec2 vTextureCoord;\n\n            uniform sampler2D uSampler;\n            \n            void main()\n            {\n              gl_FragColor = texture2D(uSampler, vTextureCoord);\n            }\n        `\n\n        super(gl, vertexShaderText, fragmentShaderText)\n    }\n\n//    draw(matrix, tilecontent)\n    draw_tile(matrix, tile) {\n        if (tile.content.buffer === null)\n        {\n            return;\n        }\n\n        let gl = this.gl;\n        gl.useProgram(this.shaderProgram);\n        gl.bindBuffer(gl.ARRAY_BUFFER, tile.content.buffer);\n\n        // FIXME: better to store with bucket how the layout of the mesh is?\n        const positionAttrib = gl.getAttribLocation(this.shaderProgram, 'vertexPosition_modelspace');\n        // gl.vertexAttribPointer(positionAttrib, 3, gl.FLOAT, false, 24, 0);\n        gl.vertexAttribPointer(positionAttrib, 3, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(positionAttrib);\n\n        {\n            let M = gl.getUniformLocation(this.shaderProgram, 'M');\n            gl.uniformMatrix4fv(M, false, matrix);\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, tile.content.textureCoordBuffer)\n        const textureAttrib = gl.getAttribLocation(this.shaderProgram, 'aTextureCoord');\n        gl.vertexAttribPointer(textureAttrib, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(textureAttrib);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, tile.content.texture);\n\n        const uSampler = gl.getUniformLocation(this.shaderProgram, 'uSampler');\n        gl.uniform1i(uSampler, 0);\n\n        gl.disable(gl.BLEND);\n        gl.enable(gl.DEPTH_TEST);\n        gl.drawArrays(gl.TRIANGLES, 0, tile.content.buffer.numItems); // FIXME!\n    }\n}\n\n\n\n\nclass LineDrawProgram extends DrawProgram {\n    constructor(gl) {\n\n        let vertexShaderText = `\nprecision highp float;\n\nattribute vec2 displacement;\nattribute vec4 vertexPosition_modelspace;\nuniform mat4 M;\nuniform float near;\nuniform float half_width_reality;\n\nvoid main()\n{\n    vec4 pos = vertexPosition_modelspace;\n\n    if (pos.z <= near && pos.w > near)\n    {\n        pos.x +=  displacement.x * half_width_reality;\n        pos.y +=  displacement.y * half_width_reality;\n        gl_Position = M * vec4(pos.xyz, 1.0);\n\n    } else {\n        gl_Position = vec4(-10.0,-10.0,-10.0,1.0);\n        return;\n    }\n}\n`;\n\n        let fragmentShaderText = `\nprecision mediump float;\nuniform vec4 uColor;\n\nvoid main()\n{\n    gl_FragColor = uColor; // color of the lines\n}\n`;\n\n        super(gl, vertexShaderText, fragmentShaderText)\n\n        this.colors = [[141, 211, 199]\n            , [190, 186, 218]\n            , [251, 128, 114]\n            , [128, 177, 211]\n            , [253, 180, 98]\n            , [179, 222, 105]\n            , [252, 205, 229]\n            , [217, 217, 217]\n            , [188, 128, 189]\n            , [204, 235, 197]\n        ].map(x => { return [x[0] / 255., x[1] / 255., x[2] / 255.]; });\n    }\n\n\n    draw_tile(matrix, tile, near_St, boundary_width_screen) {\n        let gl = this.gl;\n        let shaderProgram = this.shaderProgram;\n        let triangleVertexPosBufr = tile.content.line_triangleVertexPosBufr;\n        let displacementBuffer = tile.content.displacementBuffer;\n\n        if (triangleVertexPosBufr === null) {\n            return;\n        }\n        gl.useProgram(shaderProgram);\n\n        // void vertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset)\n        // size is the number of components per attribute. For example, with RGB colors, it would be 3; and with an\n        // alpha channel, RGBA, it would be 4. If we have location data with (x,y,z) attributes, it would be 3; and if we\n        // had a fourth parameter w, (x,y,z,w), it would be 4. Texture parameters (s,t) would be 2. type is the datatype,\n        // stride and offset can be set to the default of 0 for now and will be reexamined in Chapter 9 when we discuss\n        // interleaved arrays.\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        this._prepare_vertices(gl, shaderProgram, 'vertexPosition_modelspace', 4, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, displacementBuffer);\n        this._prepare_vertices(gl, shaderProgram, 'displacement', 2, 0, 0);\n\n        // the unit of boundary_width is mm; 1 mm equals 3.7795275590551 pixels\n        // FIXME: MM: at which amount of dots per inch has this been calculated?\n\n         // FIXME: settings/view\n//        let boundary_width_screen = 0.2;\n        //var boundary_width_screen = parseFloat(document.getElementById('boundary_width_slider').value);\n        // The unit of the map must be meter!!!\n        var half_width_reality = boundary_width_screen * near_St[1] / 1000 / 2;\n//        if (width_increase > 0)\n//        {\n//            half_width_reality *= width_increase;\n//        }\n\n        {\n            let M_location = gl.getUniformLocation(shaderProgram, 'M');\n            gl.uniformMatrix4fv(M_location, false, matrix);\n\n            let near_location = gl.getUniformLocation(shaderProgram, 'near');\n            gl.uniform1f(near_location, near_St[0]);\n\n            let half_width_reality_location = gl.getUniformLocation(shaderProgram, 'half_width_reality');\n            gl.uniform1f(half_width_reality_location, half_width_reality);\n            var c = [0.0, 0.0, 0.0]; // black\n//            if (width_increase <= 0)\n//            {\n//                // var c = this.colors[tile.id % this.colors.length];\n//                c = [1.0, 1.0, 1.0]; // white\n//            }\n            var color_location = gl.getUniformLocation(shaderProgram, 'uColor');\n            gl.uniform4f(color_location, c[0], c[1], c[2], 1.0);\n        }\n\n        // Set clear color to white, fully opaque\n        // gl.clearColor(1., 1., 1., 1.0);\n        // gl.clearDepth(1.0); // Clear everything\n\n        // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); // Clear the color buffer with specified clear color\n        // gl.clear(gl.COLOR_BUFFER_BIT)\n\n        // gl.disable(gl.BLEND);\n        gl.enable(gl.BLEND); // FIXME: needed?\n        gl.disable(gl.DEPTH_TEST);\n\n        // gl.enable(gl.CULL_FACE);\n        // gl.disable(gl.CULL_FACE); // FIXME: should we be explicit about face orientation and use culling?\n\n        // gl.cullFace(gl.BACK);\n        // gl.cullFace(gl.FRONT);\n        // gl.cullFace(gl.FRONT_AND_BACK);\n\n        gl.drawArrays(\n            gl.TRIANGLES, // kind of primitives to render; e.g., POINTS, LINES\n            0,            // Specifies the starting index in the enabled arrays.\n            triangleVertexPosBufr.numItems // Specifies the number of indices to be rendered.\n        );\n    }\n}\n\n\n\nclass PolygonDrawProgram extends DrawProgram {\n    constructor(gl) {\n        let vertexShaderText = `\nprecision highp float;\n\nattribute vec3 vertexPosition_modelspace;\nattribute vec4 vertexColor;\nuniform mat4 M;\nvarying vec4 fragColor;\n\nvoid main()\n{\n    fragColor = vertexColor;\n    gl_Position = M * vec4(vertexPosition_modelspace, 1);\n}\n`;\n        let fragmentShaderText = `\nprecision mediump float;\n\nvarying vec4 fragColor;\nvoid main()\n{\n    gl_FragColor = vec4(fragColor);\n}\n`;\n        super(gl, vertexShaderText, fragmentShaderText)\n    }\n\n    draw_tile(matrix, tile) {\n        let gl = this.gl;\n        let shaderProgram = this.shaderProgram;\n        gl.useProgram(shaderProgram);\n\n        var triangleVertexPosBufr = tile.content.polygon_triangleVertexPosBufr;\n        if (triangleVertexPosBufr === null) {\n            return;\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        this._prepare_vertices(gl, shaderProgram, 'vertexPosition_modelspace', 3, 24, 0);\n        this._prepare_vertices(gl, shaderProgram, 'vertexColor', 3, 24, 12);\n\n        {\n            let M_location = gl.getUniformLocation(shaderProgram, 'M');\n            gl.uniformMatrix4fv(M_location, false, matrix);\n        }\n\n        gl.disable(gl.BLEND);\n        gl.enable(gl.DEPTH_TEST);\n        gl.drawArrays(gl.TRIANGLES, 0, triangleVertexPosBufr.numItems);\n    }\n}\n\n\nexport class Renderer {\n    constructor(gl, ssctree) {\n        this.gl = gl\n        this.ssctree = ssctree\n        this.settings = { boundary_width: 0.2 }\n\n        // construct programs once, at init time\n        this.programs = [\n            new PolygonDrawProgram(this.gl),\n            new LineDrawProgram(this.gl),\n            new ImageTileDrawProgram(gl)\n        ];\n    }\n\n    // addBucket(mesh)\n    // {\n    //     console.log('making new mesh')\n    //     let b = new Bucket(this.gl, mesh)\n    //     this.buckets.push(b)\n    //     // setTimeout(() => {\n    //     //     this.buckets.map(bucket => {\n    //     //         bucket.destroy()\n    //     //     })\n    //     // }, 15000)\n    // }\n\n    render_relevant_tiles(matrix, box3d, near_St) {\n        // FIXME: \n        // should a bucket have a method to 'draw' itself?\n        // e.g. by associating multiple programs with a bucket\n        // when the bucket is constructed?\n\n        var tiles = this.ssctree.get_relevant_tiles(box3d)\n//            .filter(tile => {return tile.hasOwnProperty('content') && tile.content !== null})\n\n//        let gl = this.gl;\n//        gl.clearColor(1.0, 1.0, 1.0, 1.0);\n//        gl.clearDepth(1.0); // Clear everything\n//        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); // Clear the color buffer with specified clear color\n\n        this._clear();\n        if (tiles.length > 0) {\n\n            var polygon_draw_program = this.programs[0];\n            tiles\n//            .filter(tile => {tile.}) // FIXME tile should only have polygon data\n            .forEach(tile => {\n                polygon_draw_program.draw_tile(matrix, tile);\n            })\n\n            var image_tile_draw_program = this.programs[2];\n            tiles\n                .filter(\n                    // tile should have image data\n                    tile => {\n                        return tile.texture !== null\n                    }\n                ) \n                .forEach(tile => {\n                    image_tile_draw_program.draw_tile(matrix, tile);\n                })\n\n\n            // FIXME: if lines have width == 0; why draw them?\n            // If we want to draw lines twice -> thick line under / small line over\n            // we need to do this twice + move the code for determining line width here...\n            var line_draw_program = this.programs[1];\n            tiles\n            .forEach(tile => {\n                // FIXME: would be nice to specify width here in pixels.\n                // bottom lines (black)\n                // line_draw_program.draw_tile(matrix, tile, near_St, 2.0);\n                // interior (color)\n                line_draw_program.draw_tile(matrix, tile, near_St, this.settings.boundary_width);\n            })\n        }\n\n        // this.buckets.forEach(bucket => {\n        //     this.programs[0].draw(matrix, bucket);\n        // })\n        // FIXME:\n        // in case there is no active buckets (i.e. all buckets are destroy()'ed )\n        // we should this.gl.clear()\n    }\n\n    _clear()\n    {\n        let gl = this.gl;\n        gl.clearColor(1.0, 1.0, 1.0, 1.0);\n        gl.clearDepth(1.0); // Clear everything\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);  // Clear the color buffer with specified clear color\n\n    }\n\n    setViewport(width, height) {\n        this.gl.viewport(0, 0, width, height);\n    }\n\n\n}\n","\"use strict\";\n\n// const bindHandler = require('./handler');\nimport { dragHandler } from './handlers/mouse.drag';\nimport { moveHandler } from './handlers/mouse.move';\nimport { scrollHandler } from './handlers/mouse.scroll';\n\nimport { touchPinchHandler } from './handlers/touch.pinch';\nimport { touchDragHandler } from \"./handlers/touch.drag\";\n\nimport Transform from './transform';\nimport { timed } from './animate';\nimport { Renderer } from \"./render\";\n\n// import MyLoader from './loader';\n// import { TileSet , Evictor } from './tiles';\nimport { SSCTree, Evictor } from './tiles';\n\nimport { MessageBusConnector } from './pubsub'\n\nclass Map {\n    constructor(map_settings) {\n        let container = map_settings['canvas_nm']\n        if (typeof container === 'string') {\n            this._container = window.document.getElementById(container)\n        }\n        else {\n            this._container = container\n        }\n        if (!this._container) {\n            throw new Error(`Container '${container}' not found.`)\n        }\n\n        // FIXME: to not circle map updates (can this be done more elegantly?)\n//        this._should_broadcast_move = true;\n\n        this._abort = null\n        this._transform = new Transform(this.getCanvasContainer().getBoundingClientRect(),\n                                        map_settings.initialization.center2d,\n                                        map_settings.initialization.scale_den)\n\n        /* settings for zooming and panning */\n        this._interaction_settings = {\n            zoom_factor: 1,\n            zoom_duration: 1000,\n            pan_duration: 1000\n        };\n\n\n        this.msgbus = new MessageBusConnector()\n\n        this.msgbus.subscribe('data.tile.loaded', (topic, message, sender) => {\n            //console.log('1 subscribe data.tile.loaded')\n            if (this._abort === null) {\n                //console.log('Rendering because received:', topic, \", \", message, \", \", sender)\n                this.panAnimated(0, 0) // animate for a small time, so that when new tiles are loaded, we are already rendering\n            }\n        })\n\n        this.msgbus.subscribe('data.tree.loaded', (topic, message, sender) => {\n            const near_St = this.ssctree.stepMap(this._transform)\n            this._prepare_active_tiles(near_St[0])\n        })\n\n        this.msgbus.subscribe(\"settings.render.boundary-width\", (topic, message, sender) => { \n            this.renderer.settings.boundary_width = parseFloat(message);\n            this.abortAndRender();\n        } );\n\n        this.msgbus.subscribe(\"settings.interaction.zoom-factor\", (topic, message, sender) => {\n//            console.log(message);\n            this._interaction_settings.zoom_factor = parseFloat(message);\n            this.abortAndRender();\n        });\n\n        this.msgbus.subscribe(\"settings.interaction.zoom-animation\", (topic, message, sender) => {\n//            console.log(message);\n            this._interaction_settings.zoom_duration = parseFloat(message);\n            this.abortAndRender();\n        });\n        this.msgbus.subscribe(\"settings.interaction.pan-animation\", (topic, message, sender) => {\n//            console.log('setting pan_duration: ' + message);\n            this._interaction_settings.pan_duration = parseFloat(message);\n            this.abortAndRender();\n        });\n\n\n        // data load\n        this.ssctree = new SSCTree(this.msgbus, map_settings.datasets[0])\n        this.renderer = new Renderer(\n            this._container.getContext('webgl', { alpha: true, antialias: true })\n            // || this._container.getContext('experimental-webgl', { alpha: true, antialias: true })\n            ,\n            this.ssctree);\n        this.renderer.setViewport(this.getCanvasContainer().width,\n                                  this.getCanvasContainer().height)\n\n        dragHandler(this)  // attach mouse handlers\n        scrollHandler(this)\n//        moveHandler(this)\n        touchPinchHandler(this) // attach touch handlers\n        touchDragHandler(this)\n\n\n        { \n            let near_St = this.ssctree.stepMap(this.getTransform())\n            this.msgbus.publish('map.scale', [this.getTransform().getCenter(), near_St[1]]) \n        };\n\n        this.evictor = new Evictor(this.ssctree,\n                                   this.getCanvasContainer().getContext('webgl', { alpha: true, antialias: true }))\n        // every 30 seconds release resources\n        window.setInterval(\n            () => {\n                const near_St = this.ssctree.stepMap(this.getTransform())\n                const near = near_St[0]\n                const box2d = this.getTransform().getVisibleWorld()\n                const box3d = [box2d.xmin, box2d.ymin, near, box2d.xmax, box2d.ymax, near]\n                this.evictor.evict(box3d)\n                this.render()\n            },\n            30000\n        )\n\n    }\n\n    loadTree() {\n        this.ssctree.load()\n    }\n\n    getCanvasContainer() {\n        return this._container;\n    }\n\n    getTransform() {\n        return this._transform;\n    }\n\n    render() {\n        const near_St = this.ssctree.stepMap(this.getTransform())\n        var matrix_box3d = this._prepare_active_tiles(near_St[0])\n        this.msgbus.publish('map.scale', [this.getTransform().getCenter(), near_St[1]])\n        this.renderer.render_relevant_tiles(matrix_box3d[0], matrix_box3d[1], near_St);\n    }\n\n    _prepare_active_tiles(near) {\n        let matrix = this.getTransform().world_square\n        const far = -0.5\n        matrix[10] = -2.0 / (near - far)\n        matrix[14] = (near + far) / (near - far)\n        const box2d = this.getTransform().getVisibleWorld()\n        const box3d = [box2d.xmin, box2d.ymin, near, box2d.xmax, box2d.ymax, near]\n        let gl = this._container.getContext('webgl', { alpha: true, antialias: true }); // || this._container.getContext('experimental-webgl', { alpha: true, antialias: true });\n//        let gl = this._container.getContext('experimental-webgl', { alpha: false, antialias: true })\n        this.ssctree.fetch_tiles(box3d, gl)\n        return [matrix, box3d]\n    }\n\n    doEaseNone(start, end) {\n        let interpolate = ((k) => {\n            var m = new Float32Array(16);\n            for (let i = 0; i < 16; i++) {\n                let delta = start[i] + k * (end[i] - start[i]);\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1) {\n                this._abort = null\n            }\n        })\n        return interpolate;\n    }\n\n    doEaseInOutSine(start, end) {\n        function interpolate(k) {\n            var m = new Float32Array(16);\n            let D = Math.cos(Math.PI * k) - 1\n            for (let i = 0; i < 16; i++) {\n                let c = end[i] - start[i];\n                let delta = -c * 0.5 * D + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1) {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    doEaseOutSine(start, end) {\n        let interpolate = (k) => {\n            var m = new Float32Array(16);\n            let D = (Math.sin(k * (Math.PI * 0.5)));\n            for (let i = 0; i < 16; i++) {\n                let c = end[i] - start[i];\n                let delta = c * D + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k === 1) {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    doEaseOutQuint(start, end) {\n        function interpolate(k) {\n            let t = k - 1\n            let t5p1 = Math.pow(t, 5) + 1\n            var m = new Float32Array(16);\n            for (let i = 0; i < 16; i++) {\n                let c = end[i] - start[i];\n                let delta = c * t5p1 + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1) {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    animateZoom(x, y, factor) {\n        const start = this.getTransform().world_square;\n        this.getTransform().zoom(factor, x, this.getCanvasContainer().getBoundingClientRect().height - y);\n        const end = this.getTransform().world_square;\n        var interpolate = this.doEaseOutSine(start, end);\n        return interpolate;\n    }\n\n    animatePan(dx, dy) {\n        const start = this.getTransform().world_square;\n        this.getTransform().pan(dx, -dy);\n        const end = this.getTransform().world_square;\n        var interpolate = this.doEaseOutSine(start, end);\n        return interpolate;\n    }\n\n    jumpTo(x, y, scale) {\n        let center_world = [x, y];\n        let r = this.getCanvasContainer();\n        let viewport_size = [r.width, r.height];\n        let denominator = scale;\n        this._transform.initTransform(center_world, viewport_size, denominator);\n        this.abortAndRender();\n    }\n\n    panBy(dx, dy) {\n        //console.log(\"_abort in map.js:\", this._abort)\n        if (this._abort !== null) {\n            this._abort();\n        }\n        this.getTransform().pan(dx, -dy);\n        this.render();\n    }\n\n    zoom(x, y, factor) {\n        this.getTransform().zoom(factor, x, this.getCanvasContainer().getBoundingClientRect().height - y);\n        this.render();\n    }\n\n    abortAndRender() {\n        // aborts running animation\n        // and renders the map based on the current transform\n        if (this._abort !== null) {\n            this._abort();\n            this._abort = null;\n        }\n        this.getTransform().pan(0, 0);\n        this.render();\n    }\n\n    zoomInAnimated(x, y, step) {\n        this.zoomAnimated(x, y, 1.0 + step)\n    }\n\n    zoomOutAnimated(x, y, step) {\n        this.zoomAnimated(x, y, 1.0 / (1.0 + step))\n    }\n\n    zoomAnimated(x, y, factor) {\n        if (this._abort !== null) {\n            this._abort();\n        }\n        var interpolator = this.animateZoom(x, y, factor);\n        // FIXME: settings\n        this._abort = timed(interpolator, this._interaction_settings.zoom_duration, this);\n    }\n\n    panAnimated(dx, dy) {\n        if (this._abort !== null) {\n            this._abort();\n        }\n        // FIXME: settings\n        var interpolator = this.animatePan(dx, dy);\n        this._abort = timed(interpolator, this._interaction_settings.pan_duration, this);\n    }\n\n    resize(newWidth, newHeight) {\n        //console.log(\"resize\");\n        let tr = this.getTransform();\n        let center = tr.getCenter();\n        let denominator = tr.getScaleDenominator();\n        // re-initialize the transform\n        tr.initTransform(center, [newWidth, newHeight], denominator);\n        // update the viewport size of the renderer\n        this.renderer.setViewport(newWidth, newHeight)\n    }\n\n}\n\nexport default Map\n","// import  Rectangle from \"./rect\"\nimport Map from \"./map\"\nimport MessageBusConnector from \"./pubsub\"\n//let r = new Rectangle(1, 2, 3, 4);\n//console.log(r);\n\nconst exported = {\n    Map,\n    MessageBusConnector\n}\n\nexport default exported;"],"names":["timed","fn","dur","ctx","tick","now","abort","_now","start","call","let","k","_frame","dragHandler","map","doMouseDown","evt","preventDefault","canvas","removeEventListener","passive","addEventListener","doMouseDrag","doMouseUp","r","getBoundingClientRect","e","touches","x","clientX","left","clientLeft","y","clientY","top","clientTop","_trace","Trace","panBy","const","prev","last","dx","dy","shift","push","changedTouches","first","time","vx","vy","duration","parseFloat","_interaction_settings","pan_duration","tx","ty","panAnimated","getCanvasContainer","oncontextmenu","scrollHandler","doMouseWheel","_prev","value","undefined","type","deltaY","wheelDeltaY","step","direction","Math","max","min","delta","_canvas","_map","zoomInAnimated","zoomOutAnimated","touchPinchHandler","dist","points","vec","sqrt","center","p0","getTouchPoints","event","j","doPinchStart","length","doPinchMove","capture","doPinchEnd","_prevDist","_startTime","console","log","abortAndRender","curDist","scaleDelta","zoom","lastbutone","prevDist","touchDragHandler","getTouchPoint","doTouchDragStart","doTouchDragMove","doTouchDragEnd","point","_state","document","getElementById","vec3transform","out","a","m","z","w","createvec3","Float32Array","create","invert","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiply","b","b0","b1","b2","b3","square_viewport_matrix","box","sx","xmax","xmin","sy","ymax","ymin","center2d","box3d","distance2d","target","against","ctr_t","ctr_a","dx2","pow","dy2","obtain_overlapped_dataelements","node","result","stack","pop","hasOwnProperty","children","forEach","child","overlaps3d","dataelements","element","obtain_overlapped_subtrees","loaded","obtain_dataelements","root","one","other","are_overlapping","generate_class_color_dt","class_color_dt","2101","g","2112","2114","2201","2202","2213","2230","2301","3103","3302","4101","4102","4103","4104","4105","4107","4108","4109","4111","5112","key","color","r_frac","g_frac","b_frac","bytesToUuid","buf","offset","i","bth","byteToHex","join","mathRNG","rnds","Array","random","getUuid","window","performance","bind","Date","frame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","val","this","cutoff","_multiply","Rectangle","width","height","toString","area","Transform","client_rect","view_scale_Sv","viewport_world","world_viewport","world_square","square_viewport","viewport","initTransform","center_world","viewport_size","denominator","cx","cy","half_visible_screen","visible_world","scale","translate","updateViewportTransform","backward","vec3","pan","getVisibleWorld","factor","tmp","eye","eye$1","eye$2","ll","tr","getCenter","getScaleDenominator","viewport_in_meter","world_in_meter","DrawProgram","gl","vertexShaderText","fragmentShaderText","loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","validateProgram","VALIDATE_STATUS","getProgramInfoLog","_prepare_vertices","attribute_name","itemSize","stride","attrib_location","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","ImageTileDrawProgram","super","draw_tile","matrix","tile","content","buffer","useProgram","bindBuffer","ARRAY_BUFFER","positionAttrib","M","getUniformLocation","uniformMatrix4fv","textureCoordBuffer","textureAttrib","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","uSampler","uniform1i","disable","BLEND","enable","DEPTH_TEST","drawArrays","TRIANGLES","numItems","LineDrawProgram","colors","near_St","boundary_width_screen","triangleVertexPosBufr","line_triangleVertexPosBufr","displacementBuffer","half_width_reality","M_location","near_location","uniform1f","half_width_reality_location","c","color_location","uniform4f","PolygonDrawProgram","polygon_triangleVertexPosBufr","Renderer","ssctree","settings","boundary_width","programs","render_relevant_tiles","tiles","get_relevant_tiles","_clear","polygon_draw_program","image_tile_draw_program","filter","line_draw_program","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setViewport","SSCTree","msgbus","tree","load","fetch","tree_root_href","tree_root_file_nm","then","json","this$1","last_touched","url","tile_root_href","info","publish","catch","err","load_subtree","uri","fetch_tiles","overlapped_dataelements","to_retrieve","elem","sort","TileContent","texture_root_href","stepMap","transform","St","reductionf","metadata","start_scale_Sb","no_of_steps_Ns","isPowerOf2","endsWith","load_ssc_tile","load_image_tile","response","text","data_text","data_from_text","_obtain_data_from_text","deltas_bound_triangles","line_and_polygon_triangleVertexPosBufr","_obtain_line_and_polygon_triangleVertexPosBufr","displacementElements","flat","createBuffer","bufferData","STATIC_DRAW","step_high","vertex_lt","feature_color","triangle_color_lt","vertices_bound_triangles","split","l","_parseLine","line_vertexElements","_obtain_triangleVertexPosBufr","polygon_vertexElements","vertexElements","extended_itemSize","line","sub","result_values","isNaN","add","mul","dot","v1","v2","dot_value","norm2","v","rotate90ccw","rotate90cw","words","Number","feature_class","f_color","vertex","polyline","point_records","pt","end","start_xy","slice","end_xy","unitvec","startr","startl","endr","endl","href","createTexture","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","mesh","_process_image_tile","_upload_image_tile_mesh","texture_href","mode","ok","blob","createImageBitmap","bitmap","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","destroy","deleteBuffer","deleteTexture","Evictor","evict","to_evict","substr","MessageBus","_topics","topic","message","sender","subscribers","subscriberFn","setTimeout","subscribe","func","remove","index","indexOf","splice","instance","Object","freeze","MessageBusConnector","id","Map","map_settings","container","_container","Error","_abort","_transform","initialization","scale_den","zoom_factor","zoom_duration","_prepare_active_tiles","renderer","datasets","getContext","alpha","antialias","getTransform","evictor","setInterval","near","box2d","render","loadTree","matrix_box3d","doEaseNone","doEaseInOutSine","interpolate","D","cos","PI","doEaseOutSine","sin","doEaseOutQuint","t","t5p1","animateZoom","animatePan","jumpTo","zoomAnimated","interpolator","resize","newWidth","newHeight"],"mappings":"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"}