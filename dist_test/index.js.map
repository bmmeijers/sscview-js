{"version":3,"file":"index.js","sources":["../src/animate.js","../src/handlers/mouse.drag.js","../src/handlers/mouse.scroll.js","../src/handlers/touch.pinch.js","../src/handlers/touch.drag.js","../src/mat4.js","../src/transform.js","../src/tiles.js","../src/pubsub.js","../src/handlers/trace.js","../src/rect.js","../src/render.js","../src/map.js","../src/index.js"],"sourcesContent":["\"use strict\";\n\n//glCreateProgram\n//glCreateShader\n//glShaderSource\n//glCompileShader\n//glAttachShader\n//glLinkProgram <- after this line opengl got everything it needs, \n//                 you can free shader resources\n//glDetachShader\n//glDeleteShader\n//for{//render loop\n//   glUseProgram\n//   //...drawing operations\n//   glUseProgram(0);\n//}\n//glDeleteProgram\n\n/* from mapbox-gl-js - BSD licensed? */\nconst _now = (function () {\n    if (window.performance &&\n        window.performance.now) {\n        return window.performance.now.bind(window.performance);\n    }\n    else {\n        return Date.now.bind(Date);\n    }\n}());\nexport { _now as now };\n\nconst frame = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.msRequestAnimationFrame;\n\nconst _frame = function (fn) {\n    return frame(fn);\n};\nexport { _frame as frame };\n\nconst cancel = window.cancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.msCancelAnimationFrame;\n\nexport function cancelFrame(id) {\n    cancel(id);\n}\n\nexport function timed(fn, dur, ctx) {\n    if (!dur) {\n        fn.call(ctx, 1);\n        return null;\n    }\n\n    let abort = false;\n    const start = _now();\n\n    function tick(now) {\n        if (abort) {\n            return;\n        }\n        now = _now();\n\n        if (now >= start + dur) {\n            fn.call(ctx, 1);\n        } else {\n            let k = (now - start) / dur\n            fn.call(ctx, k);\n            _frame(tick);\n        }\n    }\n\n    _frame(tick);\n\n    return function () { abort = true; };\n}\n\n","\nimport Trace from './trace';\n\nexport function dragHandler(map) {\n\n    var canvas = map.getCanvasContainer();\n    canvas.addEventListener(\"mousedown\", doMouseDown, { passive: false });\n    // canvas.addEventListener(\"touchstart\", doMouseDown, { passive: false });\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    var _trace = null;\n\n    function doMouseDown(evt) {\n        // prevent cursor to turn into text selection on chrome\n        evt.preventDefault();\n        canvas.removeEventListener(\"mousedown\", doMouseDown, { passive: false });\n        canvas.addEventListener(\"mousemove\", doMouseDrag, { passive: false });\n        canvas.addEventListener(\"mouseup\", doMouseUp, { passive: false });\n\n        // canvas.removeEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n\n        var r = canvas.getBoundingClientRect();\n        let e = evt.touches ? evt.touches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        //        console.log('doMouseDown');\n        //        console.log([x,y]);\n\n        _trace = new Trace([x, y]);\n        map.panBy(0, 0); // to cancel on going animations\n    }\n\n    function doMouseDrag(evt) {\n        evt.preventDefault();\n        const r = canvas.getBoundingClientRect();\n        // for mouse use raw evt, for touches, use first touch location\n        let e = evt.touches ? evt.touches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        // how much did the map move since last time?\n        let prev = _trace.last()[1]\n        let dx = x - prev[0];\n        let dy = y - prev[1];\n        _trace.shift(200)\n        _trace.push([x, y]);\n\n        //        console.log([x,y]);\n\n        // pan the map\n        map.panBy(dx, dy);\n    }\n\n    function doMouseUp(evt) {\n\n        canvas.removeEventListener(\"mousemove\", doMouseDrag, { passive: false });\n        canvas.removeEventListener(\"mouseup\", doMouseUp, { passive: false });\n        canvas.addEventListener(\"mousedown\", doMouseDown, { passive: false });\n\n        // canvas.removeEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.removeEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n\n        const r = canvas.getBoundingClientRect();\n        // for mouse use raw evt, for touches, use first touch location\n        let e = evt.changedTouches ? evt.changedTouches[0] : evt;\n\n        const x = e.clientX - r.left - canvas.clientLeft;\n        const y = e.clientY - r.top - canvas.clientTop;\n\n        _trace.shift(200)\n        _trace.push([x, y]);\n\n        //        console.log('doMouseUp');\n        //        console.log([x,y])\n\n        // FIXME\n        // if a user can influence the duration\n        // then if the user did set duration = 0 we should not do any panning!\n        //\n        // furthermore, maybe more natural for moving is that the map slows down\n        //\n        // also: \n        // the map should move initially with the same speed (as the user was moving) and \n        // then slowly come to a halt\n        const last = _trace.last()\n        const first = _trace.first()\n        // in seconds\n        let time = (last[0] - first[0]) / 1000\n\n        // so then we can see given the desired duration\n        // how far could the map travel with the same speed\n        // then if we ease out, we travel a bit less far\n        // so that it looks ok\n\n        let start = first[1]\n        let dx = (x - start[0]);\n        let dy = (y - start[1]);\n\n        // take percent of speed computed\n        const percent = 1.0 // 0.7\n        let vx = dx / time * percent\n        let vy = dy / time * percent\n\n        // const max_distance = 400 // 0.5 * screen size\n        // var duration = parseFloat(document.getElementById('panduration').value);\n        // // with combined speed  of departure and arrivale\n        // // * departure (= speed of user action px/s) and\n        // // * arrival (= 0 px /s)\n        // // we can calcualte what will be the distance travelled\n        // // we cap the distance moved at maximum of certain number of pixels\n        // // (to prevent map moving too far: heuristic, half the window size)\n        // var tx = Math.max(Math.min((vx * 0.5) * (duration / 1000), max_distance), -max_distance)\n        // var ty = Math.max(Math.min((vy * 0.5) * (duration / 1000), max_distance), -max_distance)\n        // map.panAnimated(tx, ty);\n\n        var duration = parseFloat(document.getElementById('panduration').value);\n        let tx = (vx * 0.5) * (duration / 1000);\n        let ty = (vy * 0.5) * (duration / 1000);\n        _trace = null;\n        map.panAnimated(tx, ty);\n        // console.log('mouseup')\n    }\n\n}","\"use strict\";\n\n/**\n* Handler for a scroll of the MouseWheel\n*\n* Starts an animated zoom (in or out) operation\n*/\n\nimport { now as _now } from '../animate';\nimport Trace from './trace';\n\nexport function scrollHandler (map) {\n\n    const _map = map;\n    const _canvas = map.getCanvasContainer();\n\n    _canvas.addEventListener(\"wheel\", doMouseWheel, { passive: false });\n    _canvas.addEventListener(\"mousewheel\", doMouseWheel, { passive: false });\n\n    var _trace = null;\n    var _prev = null;\n\n    function doMouseWheel(evt)\n    {\n        // prevent from also scrolling the page -- not allowed when passive: true\n        evt.preventDefault();\n        // return if previous evt is shorter than n msec ago\n        const now = _now();\n        if ((now - _prev) < 20)\n        {\n            return \n        }\n        // find the wheel value (this is implemented differently per browser)\n        let value = undefined\n        if (evt.type === 'wheel')\n        {\n            value = evt.deltaY;\n            // Firefox doubles the values on retina screens...\n            // if (firefox && e.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) value /= browser.devicePixelRatio;\n            // if (e.deltaMode === window.WheelEvent.DOM_DELTA_LINE) value *= 40;\n        }\n        else if (evt.type === 'mousewheel')\n        {\n            value = -evt.wheelDeltaY;\n            // if (safari) value = value / 3;\n        }\n        // sometimes, we see a value of 0 \n        // i.e. undetermined y-direction, so skip evt\n        if (value === 0)\n        {\n            return\n        }\n        _prev = now\n\n        // standard value for zoom step\n        var step = 0.1;\n        const direction = Math.max(-1, Math.min(1, -value));\n        if (_trace === null)\n        {\n            _trace = new Trace(direction);\n        }\n        else\n        {\n            let prev = _trace.last()\n            const delta = now - prev[0]\n            _trace.push(direction);\n\n            var radios = document.getElementsByName('speed');\n            let factor = 1\n            for (var i = 0, length = radios.length; i < length; i++) {\n                if (radios[i].checked) {\n                    // do whatever you want with the checked radio\n                    factor = parseFloat(radios[i].value)\n                    // only one radio can be logically checked, don't check the rest\n                    break;\n                }\n            }\n\n\n            // make larger zoom steps if mousewheel went faster\n            // FIXME: allow user to set multiplication factor, e.g.\n            // (1, 2, 4) : (normal, fast, superfast) ?\n            switch(delta)\n            {\n                case delta > 750:\n                    step = 0.0625\n                    break;\n                case delta > 500:\n                    step = 0.125\n                    break;\n                case delta > 50:\n                    step = 0.25\n                    break;\n                default:\n                    step = 0.5\n                    break;\n            }\n            step *= factor\n            _trace.shift(2000);\n//            console.log(delta + \" \" + prev[1] + \" \" + step);\n        }\n\n        //if the canvas has size 800 x 800, \n        //evt.clientX: x-coordinate in pixel, starting from the left of the canvas (800 x 800)\n        //evt.clientY: y-coordinate in pixel, starting from the top of the canvas (800 x 800)        \n        //r has size 800 x 760 because of the bar (with height 39.92) at the top\n        //r.left = 0 and r.top = 39.92\n        const r = _canvas.getBoundingClientRect();\n        //const x = evt.clientX - r.left - _canvas.clientLeft;  //_canvas.clientLeft is 0\n        //const y = evt.clientY - r.top - _canvas.clientTop;  //_canvas.clientTop is 0\n        const x = evt.clientX - r.left;\n        const y = evt.clientY - r.top;\n        switch(direction) \n        {\n            case 1:\n                _map.zoomInAnimated(x, y, step);\n                break;\n            case -1:\n                _map.zoomOutAnimated(x, y, step);\n                break;\n        }\n//        console.log(_trace._trace);\n        // console.log(_trace.length())\n    }\n\n}\n","\"use strict\";\n\nimport { now as _now } from '../animate';\nimport Trace from './trace';\n\n/**\n* Handler for touch events\n* zooms the map if two fingers are used and the distance between them changes.\n* \n*/\n\nexport function touchPinchHandler (map) {\n    var canvas = map.getCanvasContainer();\n\n    canvas.addEventListener(\"touchstart\", doPinchStart, false);\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    function dist(points) {\n        const [dx, dy] = vec(points);\n        return Math.sqrt(dx * dx, dy * dy);\n    }\n\n    function center(points) {\n        const [dx, dy] = vec(points);\n        let p0 = points[0];\n        return [p0[0] + dx / 2,\n                p0[1] + dy / 2];\n    }\n\n    function vec(points) {\n        let dx = points[1][0] - points[0][0];\n        let dy = points[1][1] - points[0][1];\n        return [dx, dy];\n    }\n\n    function getTouchPoints(event) {\n        const r = canvas.getBoundingClientRect();\n        const touches = event.touches;\n        var points = [];\n        // note: length hardcoded as 2\n        for (let j = 0; j < 2; j++) {\n            const x = touches[j].clientX - r.left - canvas.clientLeft;\n            const y = touches[j].clientY - r.top - canvas.clientTop;\n            points.push([x, y]);\n        }\n        return points;\n    }\n\n    var _prevDist = null;\n    var _startTime = null;\n    var _trace = null;\n    // var _startCenter = null;\n\n    function doPinchStart(event) {\n        if (!event.touches || event.touches.length !== 2) { return; }\n        event.preventDefault();\n\n        canvas.removeEventListener(\"touchstart\", doPinchStart, false);\n        canvas.addEventListener(\"touchmove\", doPinchMove, { capture: true, passive: false });\n        canvas.addEventListener(\"touchend\", doPinchEnd, false);\n        \n        // let points = getTouchPoints(event);\n        // console.log(points);\n        // _startCenter = center(points);\n        _prevDist = null;\n        _startTime = _now();\n        console.log('start touch with 2 fingers ' + _startTime);\n        map.abortAndRender(); // to cancel on going animations\n        let points = getTouchPoints(event);\n        _trace = new Trace(points);\n    }\n\n    function doPinchMove(event) {\n        if (!event.touches || event.touches.length !== 2 || (_now() - _startTime) < 30) { return; }\n        console.log('time of touch ' + (_now() - _startTime));\n        // we discard the first few movement events at the beginning (30 ms since start)\n        // these seem to be 'unstable', are rapidly fired after placing the fingers on \n        // the screen and they lead to wildly varying positions\n        event.preventDefault();\n        let points = getTouchPoints(event);\n        _trace.shift(200);\n        _trace.push(points);\n        // console.log(points);\n        let curDist = dist(points);\n        if (_prevDist !== null) {\n            let scaleDelta = curDist / _prevDist;\n            // console.log(scaleDelta);\n            let [x, y] = center(points);\n            map.zoom(x, y, Math.max(Math.min(scaleDelta, 1.1), 0.9));\n        }\n        _prevDist = curDist;\n    }\n\n    function doPinchEnd(event) {\n        if (event.touches.length !== 0) { return; }\n        event.preventDefault();\n        console.log('end');\n        canvas.removeEventListener(\"touchmove\", doPinchMove, { capture: true, passive: false });\n        canvas.removeEventListener(\"touchend\", doPinchEnd, false);\n        canvas.addEventListener(\"touchstart\", doPinchStart, false);\n        _prevDist = null;\n        _startTime = null;      \n        console.log('trace for pinch end ' + _trace.length());\n        if (_trace.length() > 1)\n        {\n            // FIXME:\n            // should the intent of the user be derived from \n            // comparing the last two touch points only?\n            // or, should we compare begin and end of the gesture\n            // or, should we detect some pattern in the gesture points?\n            // or, ... \n            let last = _trace.last();\n            let lastbutone = _trace.lastbutone();\n            let curDist = dist(last[1]);\n            let prevDist = dist(lastbutone[1]);\n            // let scaleDelta = curDist / prevDist;\n            let [x, y] = center(last[1]);\n            let step = 0.5;\n            if (curDist < prevDist)\n            {\n                // distance between fingers has become smaller\n                // -> zoom out\n                map.zoomOutAnimated(x, y, step)\n            } else {\n                // distance between fingers has become larger\n                // -> zoom in\n                map.zoomInAnimated(x, y, step)\n            }\n\n            // FIXME: \n            // should we take the zoom step preference of the\n            // user into account here? e.g. large zoom step -> \n            // allows larger change of the clamped scaledelta?\n            // map.zoomAnimated(x, y, Math.max(Math.min(scaleDelta, 1.2), 0.8));\n        }\n        _trace = null;       \n    }\n}\n\n\n","import Trace from './trace';\n\nexport function touchDragHandler(map) {\n    var canvas = map.getCanvasContainer();\n    canvas.addEventListener(\"touchstart\", doTouchDragStart, false);\n    // canvas.addEventListener(\"touchstart\", doMouseDown, { passive: false });\n    canvas.oncontextmenu = function (evt) {\n        // prevent context menu from popping up\n        evt.preventDefault();\n    };\n\n    function getTouchPoint(event) {\n        const r = canvas.getBoundingClientRect();\n        const touches = event.touches;       \n        const x = touches[0].clientX - r.left - canvas.clientLeft;\n        const y = touches[0].clientY - r.top - canvas.clientTop;\n            \n        return [x, y];\n    }\n\n    var _trace = null;\n    var _state = null;\n\n    function doTouchDragStart(evt) {\n        if (evt.touches.length > 1) {\n            return;\n        }\n        // prevent cursor to turn into text selection on chrome\n        evt.preventDefault();\n        // map.abortAndRender(); // to cancel on going animations\n        canvas.removeEventListener(\"touchstart\", doTouchDragStart, false);\n        canvas.addEventListener(\"touchmove\", doTouchDragMove, { capture: true, passive: false });\n        canvas.addEventListener(\"touchend\", doTouchDragEnd, false);\n        // canvas.removeEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        \n        //        console.log('doMouseDown');\n        //        console.log([x,y]);\n        let point = getTouchPoint(evt);\n        console.log('touchstart');\n        _trace = new Trace(point);\n        _state = 'pending';\n    }\n    function doTouchDragMove(evt) {\n        \n        // when we detect more than 1 finger on the screen\n        // we obviously do not want to pan, so we set the state to\n        // pending (i.e. currently we do not handle events for panning)\n        if (evt.touches.length > 1) \n        {\n            _state = 'pending';\n            return;\n        }\n        evt.preventDefault();\n        let point = getTouchPoint(evt);\n        \n        // how much did the map move since last time?\n        let prev = _trace.last()[1];\n        let dx = point[0] - prev[0];\n        let dy = point[1] - prev[1];\n        _trace.shift(200);\n        _trace.push(point);\n\n        \n        switch(_state)\n        {\n            case 'pending':\n                // enable the handler when:\n                // - we have moved our finger more than 3 pixels, or\n                // - we have 1 finger for more than 80ms on the screen\n                if (Math.sqrt(dx * dx, dy * dy) >= 3 || (_trace.last()[0] - _trace.first()[0])> 60) {\n                    _state = 'active';\n                }\n                break;\n            case 'active':\n                map.panBy(dx, dy);\n                break;\n        }\n    }\n    function doTouchDragEnd(evt) {\n        if (evt.touches.length !== 0) { return; }\n        canvas.removeEventListener(\"touchmove\", doTouchDragMove, { capture: true, passive: false });\n        canvas.removeEventListener(\"touchend\", doTouchDragEnd, false);\n        canvas.addEventListener(\"touchstart\", doTouchDragStart, false);\n        // canvas.removeEventListener(\"touchmove\", doMouseDrag, { capture: true, passive: false });\n        // canvas.removeEventListener(\"touchend\", doMouseUp, { capture: true, passive: false });\n        // canvas.addEventListener(\"touchstart\", doMouseDown, { capture: true, passive: false });\n        // let point = getTouchPoint(evt);\n        // _trace.shift(200);\n        // _trace.push(point);\n        //        console.log('doMouseUp');\n        //        console.log([x,y])\n        // FIXME\n        // if a user can influence the duration\n        // then if the user did set duration = 0 we should not do any panning!\n        //\n        // furthermore, maybe more natural for moving is that the map slows down\n        //\n        // also: \n        // the map should move initially with the same speed (as the user was moving) and \n        // then slowly come to a halt\n        _trace.shift(200);\n        if (_trace.length() <= 2)\n        {\n            _state = 'pending';\n        }\n        switch(_state)\n        {\n            case 'pending':\n            {\n                console.log('touch drag end - SKIP');\n                break;\n            }\n            case 'active':\n            {               \n                const last = _trace.last();   \n                const first = _trace.first();\n                // in seconds\n                let time = (last[0] - first[0]) / 1000;\n                // so then we can see given the desired duration\n                // how far could the map travel with the same speed\n                // then if we ease out, we travel a bit less far\n                // so that it looks ok\n                let start = first[1];\n                let dx = (last[1][0] - start[0]);\n                let dy = (last[1][1] - start[1]);\n                // take percent of speed computed\n                const percent = 1.0; // 0.7\n                let vx = dx / time * percent;\n                let vy = dy / time * percent;\n                // const max_distance = 400 // 0.5 * screen size\n                var duration = parseFloat(document.getElementById('panduration').value);\n                // with combined speed  of departure and arrivale\n                // * departure (= speed of user action px/s) and\n                // * arrival (= 0 px /s)\n                // we can calcualte what will be the distance travelled\n                // we cap the distance moved at maximum of certain number of pixels\n                // (to prevent map moving too far: heuristic, half the window size)\n                // var tx = Math.max(Math.min((vx * 0.5) * (duration / 1000), max_distance), -max_distance)\n                // var ty = Math.max(Math.min((vy * 0.5) * (duration / 1000), max_distance), -max_distance)\n                let tx = (vx * 0.5) * (duration / 1000);\n                let ty = (vy * 0.5) * (duration / 1000);\n\n                console.log('touch drag end - ANIMATE');\n                console.log([tx, ty]);\n                map.panAnimated(tx, ty);\n\n                break;\n            }\n        }\n        _state = 'pending';\n        _trace = null;\n        console.log('touchend');\n    }\n}\n","\"use strict\";\n\n/**\n * @name mat4\n * @class 4x4 Matrix\n */\n\n//exports.___ = function \n\n\n// vector funcs !!!\nexport function vec3transform (out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n//    console.log(m[0] + \" \" + x + \" \" + m[4]);\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n//    console.log(out[0]);\n    return out;\n}\n\nexport function createvec3() {\n    var out = new Float32Array(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n}\n\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\n\n\nexport function copy (out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues (m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    var out = new Float32Array(16);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4's explicitly\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nconst _multiply = multiply;\nexport { _multiply as multiply };\nexport const mul = multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale (out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n\n///**\n// * Rotates a mat4 by the given angle around the given axis\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the matrix to rotate\n// * @param {Number} rad the angle to rotate the matrix by\n// * @param {vec3} axis the axis to rotate around\n// * @returns {mat4} out\n// */\n//export function rotate(out, a, rad, axis) {\n//    var x = axis[0], y = axis[1], z = axis[2],\n//        len = Math.sqrt(x * x + y * y + z * z),\n//        s, c, t,\n//        a00, a01, a02, a03,\n//        a10, a11, a12, a13,\n//        a20, a21, a22, a23,\n//        b00, b01, b02,\n//        b10, b11, b12,\n//        b20, b21, b22;\n\n//    if (len === 0) return null;\n\n//    len = 1 / len;\n//    x *= len;\n//    y *= len;\n//    z *= len;\n\n//    s = Math.sin(rad);\n//    c = Math.cos(rad);\n//    t = 1 - c;\n\n//    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n//    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n//    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n//    // Construct the elements of the rotation matrix\n//    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n//    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n//    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n//    // Perform rotation-specific matrix multiplication\n//    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n//    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n//    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n//    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n//    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n//    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n//    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n//    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n//    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n//    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n//    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n//    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n//    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n//        out[12] = a[12];\n//        out[13] = a[13];\n//        out[14] = a[14];\n//        out[15] = a[15];\n//    }\n//    return out;\n//}\n\n///**\n// * Rotates a matrix by the given angle around the X axis\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the matrix to rotate\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function rotateX(out, a, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad),\n//        a10 = a[4],\n//        a11 = a[5],\n//        a12 = a[6],\n//        a13 = a[7],\n//        a20 = a[8],\n//        a21 = a[9],\n//        a22 = a[10],\n//        a23 = a[11];\n\n//    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n//        out[0]  = a[0];\n//        out[1]  = a[1];\n//        out[2]  = a[2];\n//        out[3]  = a[3];\n//        out[12] = a[12];\n//        out[13] = a[13];\n//        out[14] = a[14];\n//        out[15] = a[15];\n//    }\n\n//    // Perform axis-specific matrix multiplication\n//    out[4] = a10 * c + a20 * s;\n//    out[5] = a11 * c + a21 * s;\n//    out[6] = a12 * c + a22 * s;\n//    out[7] = a13 * c + a23 * s;\n//    out[8] = a20 * c - a10 * s;\n//    out[9] = a21 * c - a11 * s;\n//    out[10] = a22 * c - a12 * s;\n//    out[11] = a23 * c - a13 * s;\n//    return out;\n//}\n\n///**\n// * Rotates a matrix by the given angle around the Y axis\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the matrix to rotate\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function rotateY(out, a, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad),\n//        a00 = a[0],\n//        a01 = a[1],\n//        a02 = a[2],\n//        a03 = a[3],\n//        a20 = a[8],\n//        a21 = a[9],\n//        a22 = a[10],\n//        a23 = a[11];\n\n//    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n//        out[4]  = a[4];\n//        out[5]  = a[5];\n//        out[6]  = a[6];\n//        out[7]  = a[7];\n//        out[12] = a[12];\n//        out[13] = a[13];\n//        out[14] = a[14];\n//        out[15] = a[15];\n//    }\n\n//    // Perform axis-specific matrix multiplication\n//    out[0] = a00 * c - a20 * s;\n//    out[1] = a01 * c - a21 * s;\n//    out[2] = a02 * c - a22 * s;\n//    out[3] = a03 * c - a23 * s;\n//    out[8] = a00 * s + a20 * c;\n//    out[9] = a01 * s + a21 * c;\n//    out[10] = a02 * s + a22 * c;\n//    out[11] = a03 * s + a23 * c;\n//    return out;\n//}\n\n///**\n// * Rotates a matrix by the given angle around the Z axis\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the matrix to rotate\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function rotateZ(out, a, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad),\n//        a00 = a[0],\n//        a01 = a[1],\n//        a02 = a[2],\n//        a03 = a[3],\n//        a10 = a[4],\n//        a11 = a[5],\n//        a12 = a[6],\n//        a13 = a[7];\n\n//    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n//        out[8]  = a[8];\n//        out[9]  = a[9];\n//        out[10] = a[10];\n//        out[11] = a[11];\n//        out[12] = a[12];\n//        out[13] = a[13];\n//        out[14] = a[14];\n//        out[15] = a[15];\n//    }\n\n//    // Perform axis-specific matrix multiplication\n//    out[0] = a00 * c + a10 * s;\n//    out[1] = a01 * c + a11 * s;\n//    out[2] = a02 * c + a12 * s;\n//    out[3] = a03 * c + a13 * s;\n//    out[4] = a10 * c - a00 * s;\n//    out[5] = a11 * c - a01 * s;\n//    out[6] = a12 * c - a02 * s;\n//    out[7] = a13 * c - a03 * s;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a vector translation\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.translate(dest, dest, vec);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {vec3} v Translation vector\n// * @returns {mat4} out\n// */\n//export function fromTranslation(out, v) {\n//    out[0] = 1;\n//    out[1] = 0;\n//    out[2] = 0;\n//    out[3] = 0;\n//    out[4] = 0;\n//    out[5] = 1;\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = 0;\n//    out[9] = 0;\n//    out[10] = 1;\n//    out[11] = 0;\n//    out[12] = v[0];\n//    out[13] = v[1];\n//    out[14] = v[2];\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a vector scaling\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.scale(dest, dest, vec);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {vec3} v Scaling vector\n// * @returns {mat4} out\n// */\n//export function fromScaling(out, v) {\n//    out[0] = v[0];\n//    out[1] = 0;\n//    out[2] = 0;\n//    out[3] = 0;\n//    out[4] = 0;\n//    out[5] = v[1];\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = 0;\n//    out[9] = 0;\n//    out[10] = v[2];\n//    out[11] = 0;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a given angle around a given axis\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.rotate(dest, dest, rad, axis);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {Number} rad the angle to rotate the matrix by\n// * @param {vec3} axis the axis to rotate around\n// * @returns {mat4} out\n// */\n//export function fromRotation(out, rad, axis) {\n//    var x = axis[0], y = axis[1], z = axis[2],\n//        len = Math.sqrt(x * x + y * y + z * z),\n//        s, c, t;\n\n//    if (len === 0) return null;\n\n//    len = 1 / len;\n//    x *= len;\n//    y *= len;\n//    z *= len;\n\n//    s = Math.sin(rad);\n//    c = Math.cos(rad);\n//    t = 1 - c;\n\n//    // Perform rotation-specific matrix multiplication\n//    out[0] = x * x * t + c;\n//    out[1] = y * x * t + z * s;\n//    out[2] = z * x * t - y * s;\n//    out[3] = 0;\n//    out[4] = x * y * t - z * s;\n//    out[5] = y * y * t + c;\n//    out[6] = z * y * t + x * s;\n//    out[7] = 0;\n//    out[8] = x * z * t + y * s;\n//    out[9] = y * z * t - x * s;\n//    out[10] = z * z * t + c;\n//    out[11] = 0;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from the given angle around the X axis\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.rotateX(dest, dest, rad);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function fromXRotation(out, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad);\n\n//    // Perform axis-specific matrix multiplication\n//    out[0]  = 1;\n//    out[1]  = 0;\n//    out[2]  = 0;\n//    out[3]  = 0;\n//    out[4] = 0;\n//    out[5] = c;\n//    out[6] = s;\n//    out[7] = 0;\n//    out[8] = 0;\n//    out[9] = -s;\n//    out[10] = c;\n//    out[11] = 0;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from the given angle around the Y axis\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.rotateY(dest, dest, rad);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function fromYRotation(out, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad);\n\n//    // Perform axis-specific matrix multiplication\n//    out[0]  = c;\n//    out[1]  = 0;\n//    out[2]  = -s;\n//    out[3]  = 0;\n//    out[4] = 0;\n//    out[5] = 1;\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = s;\n//    out[9] = 0;\n//    out[10] = c;\n//    out[11] = 0;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from the given angle around the Z axis\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.rotateZ(dest, dest, rad);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {Number} rad the angle to rotate the matrix by\n// * @returns {mat4} out\n// */\n//export function fromZRotation(out, rad) {\n//    var s = Math.sin(rad),\n//        c = Math.cos(rad);\n\n//    // Perform axis-specific matrix multiplication\n//    out[0]  = c;\n//    out[1]  = s;\n//    out[2]  = 0;\n//    out[3]  = 0;\n//    out[4] = -s;\n//    out[5] = c;\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = 0;\n//    out[9] = 0;\n//    out[10] = 1;\n//    out[11] = 0;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a quaternion rotation and vector translation\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.translate(dest, vec);\n// *     var quatMat = mat4.create();\n// *     quat4.toMat4(quat, quatMat);\n// *     mat4.multiply(dest, quatMat);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {quat4} q Rotation quaternion\n// * @param {vec3} v Translation vector\n// * @returns {mat4} out\n// */\n//export function fromRotationTranslation(out, q, v) {\n//    // Quaternion math\n//    var x = q[0], y = q[1], z = q[2], w = q[3],\n//        x2 = x + x,\n//        y2 = y + y,\n//        z2 = z + z,\n\n//        xx = x * x2,\n//        xy = x * y2,\n//        xz = x * z2,\n//        yy = y * y2,\n//        yz = y * z2,\n//        zz = z * z2,\n//        wx = w * x2,\n//        wy = w * y2,\n//        wz = w * z2;\n\n//    out[0] = 1 - (yy + zz);\n//    out[1] = xy + wz;\n//    out[2] = xz - wy;\n//    out[3] = 0;\n//    out[4] = xy - wz;\n//    out[5] = 1 - (xx + zz);\n//    out[6] = yz + wx;\n//    out[7] = 0;\n//    out[8] = xz + wy;\n//    out[9] = yz - wx;\n//    out[10] = 1 - (xx + yy);\n//    out[11] = 0;\n//    out[12] = v[0];\n//    out[13] = v[1];\n//    out[14] = v[2];\n//    out[15] = 1;\n\n//    return out;\n//}\n\n///**\n// * Returns the translation vector component of a transformation\n// *  matrix. If a matrix is built with fromRotationTranslation,\n// *  the returned vector will be the same as the translation vector\n// *  originally supplied.\n// * @param  {vec3} out Vector to receive translation component\n// * @param  {mat4} mat Matrix to be decomposed (input)\n// * @return {vec3} out\n// */\n//export function getTranslation(out, mat) {\n//    out[0] = mat[12];\n//    out[1] = mat[13];\n//    out[2] = mat[14];\n\n//    return out;\n//}\n\n///**\n// * Returns the scaling factor component of a transformation\n// *  matrix. If a matrix is built with fromRotationTranslationScale\n// *  with a normalized Quaternion paramter, the returned vector will be\n// *  the same as the scaling vector\n// *  originally supplied.\n// * @param  {vec3} out Vector to receive scaling factor component\n// * @param  {mat4} mat Matrix to be decomposed (input)\n// * @return {vec3} out\n// */\n//export function getScaling(out, mat) {\n//    var m11 = mat[0],\n//        m12 = mat[1],\n//        m13 = mat[2],\n//        m21 = mat[4],\n//        m22 = mat[5],\n//        m23 = mat[6],\n//        m31 = mat[8],\n//        m32 = mat[9],\n//        m33 = mat[10];\n\n//    out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n//    out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n//    out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n//    return out;\n//}\n\n///**\n// * Returns a quaternion representing the rotational component\n// *  of a transformation matrix. If a matrix is built with\n// *  fromRotationTranslation, the returned quaternion will be the\n// *  same as the quaternion originally supplied.\n// * @param {quat} out Quaternion to receive the rotation component\n// * @param {mat4} mat Matrix to be decomposed (input)\n// * @return {quat} out\n// */\n//export function getRotation(out, mat) {\n//  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n//    var trace = mat[0] + mat[5] + mat[10];\n//    var S = 0;\n\n//    if (trace > 0) {\n//        S = Math.sqrt(trace + 1.0) * 2;\n//        out[3] = 0.25 * S;\n//        out[0] = (mat[6] - mat[9]) / S;\n//        out[1] = (mat[8] - mat[2]) / S;\n//        out[2] = (mat[1] - mat[4]) / S;\n//    } else if ((mat[0] > mat[5]) & (mat[0] > mat[10])) {\n//        S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n//        out[3] = (mat[6] - mat[9]) / S;\n//        out[0] = 0.25 * S;\n//        out[1] = (mat[1] + mat[4]) / S;\n//        out[2] = (mat[8] + mat[2]) / S;\n//    } else if (mat[5] > mat[10]) {\n//        S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n//        out[3] = (mat[8] - mat[2]) / S;\n//        out[0] = (mat[1] + mat[4]) / S;\n//        out[1] = 0.25 * S;\n//        out[2] = (mat[6] + mat[9]) / S;\n//    } else {\n//        S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n//        out[3] = (mat[1] - mat[4]) / S;\n//        out[0] = (mat[8] + mat[2]) / S;\n//        out[1] = (mat[6] + mat[9]) / S;\n//        out[2] = 0.25 * S;\n//    }\n\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a quaternion rotation, vector translation and vector scale\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.translate(dest, vec);\n// *     var quatMat = mat4.create();\n// *     quat4.toMat4(quat, quatMat);\n// *     mat4.multiply(dest, quatMat);\n// *     mat4.scale(dest, scale)\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {quat4} q Rotation quaternion\n// * @param {vec3} v Translation vector\n// * @param {vec3} s Scaling vector\n// * @returns {mat4} out\n// */\n//export function fromRotationTranslationScale(out, q, v, s) {\n//    // Quaternion math\n//    var x = q[0], y = q[1], z = q[2], w = q[3],\n//        x2 = x + x,\n//        y2 = y + y,\n//        z2 = z + z,\n\n//        xx = x * x2,\n//        xy = x * y2,\n//        xz = x * z2,\n//        yy = y * y2,\n//        yz = y * z2,\n//        zz = z * z2,\n//        wx = w * x2,\n//        wy = w * y2,\n//        wz = w * z2,\n//        sx = s[0],\n//        sy = s[1],\n//        sz = s[2];\n\n//    out[0] = (1 - (yy + zz)) * sx;\n//    out[1] = (xy + wz) * sx;\n//    out[2] = (xz - wy) * sx;\n//    out[3] = 0;\n//    out[4] = (xy - wz) * sy;\n//    out[5] = (1 - (xx + zz)) * sy;\n//    out[6] = (yz + wx) * sy;\n//    out[7] = 0;\n//    out[8] = (xz + wy) * sz;\n//    out[9] = (yz - wx) * sz;\n//    out[10] = (1 - (xx + yy)) * sz;\n//    out[11] = 0;\n//    out[12] = v[0];\n//    out[13] = v[1];\n//    out[14] = v[2];\n//    out[15] = 1;\n\n//    return out;\n//}\n\n///**\n// * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n// * This is equivalent to (but much faster than):\n// *\n// *     mat4.identity(dest);\n// *     mat4.translate(dest, vec);\n// *     mat4.translate(dest, origin);\n// *     var quatMat = mat4.create();\n// *     quat4.toMat4(quat, quatMat);\n// *     mat4.multiply(dest, quatMat);\n// *     mat4.scale(dest, scale)\n// *     mat4.translate(dest, negativeOrigin);\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {quat4} q Rotation quaternion\n// * @param {vec3} v Translation vector\n// * @param {vec3} s Scaling vector\n// * @param {vec3} o The origin vector around which to scale and rotate\n// * @returns {mat4} out\n// */\n//export function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n//  // Quaternion math\n//    var x = q[0], y = q[1], z = q[2], w = q[3],\n//        x2 = x + x,\n//        y2 = y + y,\n//        z2 = z + z,\n\n//        xx = x * x2,\n//        xy = x * y2,\n//        xz = x * z2,\n//        yy = y * y2,\n//        yz = y * z2,\n//        zz = z * z2,\n//        wx = w * x2,\n//        wy = w * y2,\n//        wz = w * z2,\n\n//        sx = s[0],\n//        sy = s[1],\n//        sz = s[2],\n\n//        ox = o[0],\n//        oy = o[1],\n//        oz = o[2];\n\n//    out[0] = (1 - (yy + zz)) * sx;\n//    out[1] = (xy + wz) * sx;\n//    out[2] = (xz - wy) * sx;\n//    out[3] = 0;\n//    out[4] = (xy - wz) * sy;\n//    out[5] = (1 - (xx + zz)) * sy;\n//    out[6] = (yz + wx) * sy;\n//    out[7] = 0;\n//    out[8] = (xz + wy) * sz;\n//    out[9] = (yz - wx) * sz;\n//    out[10] = (1 - (xx + yy)) * sz;\n//    out[11] = 0;\n//    out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n//    out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n//    out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n//    out[15] = 1;\n\n//    return out;\n//}\n\n///**\n// * Calculates a 4x4 matrix from the given quaternion\n// *\n// * @param {mat4} out mat4 receiving operation result\n// * @param {quat} q Quaternion to create matrix from\n// *\n// * @returns {mat4} out\n// */\n//export function fromQuat(out, q) {\n//    var x = q[0], y = q[1], z = q[2], w = q[3],\n//        x2 = x + x,\n//        y2 = y + y,\n//        z2 = z + z,\n\n//        xx = x * x2,\n//        yx = y * x2,\n//        yy = y * y2,\n//        zx = z * x2,\n//        zy = z * y2,\n//        zz = z * z2,\n//        wx = w * x2,\n//        wy = w * y2,\n//        wz = w * z2;\n\n//    out[0] = 1 - yy - zz;\n//    out[1] = yx + wz;\n//    out[2] = zx - wy;\n//    out[3] = 0;\n\n//    out[4] = yx - wz;\n//    out[5] = 1 - xx - zz;\n//    out[6] = zy + wx;\n//    out[7] = 0;\n\n//    out[8] = zx + wy;\n//    out[9] = zy - wx;\n//    out[10] = 1 - xx - yy;\n//    out[11] = 0;\n\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = 0;\n//    out[15] = 1;\n\n//    return out;\n//}\n\n///**\n// * Generates a frustum matrix with the given bounds\n// *\n// * @param {mat4} out mat4 frustum matrix will be written into\n// * @param {Number} left Left bound of the frustum\n// * @param {Number} right Right bound of the frustum\n// * @param {Number} bottom Bottom bound of the frustum\n// * @param {Number} top Top bound of the frustum\n// * @param {Number} near Near bound of the frustum\n// * @param {Number} far Far bound of the frustum\n// * @returns {mat4} out\n// */\n//export function frustum(out, left, right, bottom, top, near, far) {\n//    var rl = 1 / (right - left),\n//        tb = 1 / (top - bottom),\n//        nf = 1 / (near - far);\n//    out[0] = (near * 2) * rl;\n//    out[1] = 0;\n//    out[2] = 0;\n//    out[3] = 0;\n//    out[4] = 0;\n//    out[5] = (near * 2) * tb;\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = (right + left) * rl;\n//    out[9] = (top + bottom) * tb;\n//    out[10] = (far + near) * nf;\n//    out[11] = -1;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = (far * near * 2) * nf;\n//    out[15] = 0;\n//    return out;\n//}\n\n///**\n// * Generates a perspective projection matrix with the given bounds\n// *\n// * @param {mat4} out mat4 frustum matrix will be written into\n// * @param {number} fovy Vertical field of view in radians\n// * @param {number} aspect Aspect ratio. typically viewport width/height\n// * @param {number} near Near bound of the frustum\n// * @param {number} far Far bound of the frustum\n// * @returns {mat4} out\n// */\n//export function perspective(out, fovy, aspect, near, far) {\n//    var f = 1.0 / Math.tan(fovy / 2),\n//        nf = 1 / (near - far);\n//    out[0] = f / aspect;\n//    out[1] = 0;\n//    out[2] = 0;\n//    out[3] = 0;\n//    out[4] = 0;\n//    out[5] = f;\n//    out[6] = 0;\n//    out[7] = 0;\n//    out[8] = 0;\n//    out[9] = 0;\n//    out[10] = (far + near) * nf;\n//    out[11] = -1;\n//    out[12] = 0;\n//    out[13] = 0;\n//    out[14] = (2 * far * near) * nf;\n//    out[15] = 0;\n//    return out;\n//}\n\n///**\n// * Generates a perspective projection matrix with the given field of view.\n// * This is primarily useful for generating projection matrices to be used\n// * with the still experiemental WebVR API.\n// *\n// * @param {mat4} out mat4 frustum matrix will be written into\n// * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n// * @param {number} near Near bound of the frustum\n// * @param {number} far Far bound of the frustum\n// * @returns {mat4} out\n// */\n//export function perspectiveFromFieldOfView(out, fov, near, far) {\n//    var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0),\n//        downTan = Math.tan(fov.downDegrees * Math.PI / 180.0),\n//        leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0),\n//        rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0),\n//        xScale = 2.0 / (leftTan + rightTan),\n//        yScale = 2.0 / (upTan + downTan);\n\n//    out[0] = xScale;\n//    out[1] = 0.0;\n//    out[2] = 0.0;\n//    out[3] = 0.0;\n//    out[4] = 0.0;\n//    out[5] = yScale;\n//    out[6] = 0.0;\n//    out[7] = 0.0;\n//    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n//    out[9] = ((upTan - downTan) * yScale * 0.5);\n//    out[10] = far / (near - far);\n//    out[11] = -1.0;\n//    out[12] = 0.0;\n//    out[13] = 0.0;\n//    out[14] = (far * near) / (near - far);\n//    out[15] = 0.0;\n//    return out;\n//}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n///**\n// * Generates a look-at matrix with the given eye position, focal point, and up axis\n// *\n// * @param {mat4} out mat4 frustum matrix will be written into\n// * @param {vec3} eye Position of the viewer\n// * @param {vec3} center Point the viewer is looking at\n// * @param {vec3} up vec3 pointing up\n// * @returns {mat4} out\n// */\n//export function lookAt(out, eye, center, up) {\n//    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n//        eyex = eye[0],\n//        eyey = eye[1],\n//        eyez = eye[2],\n//        upx = up[0],\n//        upy = up[1],\n//        upz = up[2],\n//        centerx = center[0],\n//        centery = center[1],\n//        centerz = center[2];\n\n//    if (Math.abs(eyex - centerx) === 0 &&\n//        Math.abs(eyey - centery) === 0 &&\n//        Math.abs(eyez - centerz) === 0) {\n//        return identity(out);\n//    }\n\n//    z0 = eyex - centerx;\n//    z1 = eyey - centery;\n//    z2 = eyez - centerz;\n\n//    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n//    z0 *= len;\n//    z1 *= len;\n//    z2 *= len;\n\n//    x0 = upy * z2 - upz * z1;\n//    x1 = upz * z0 - upx * z2;\n//    x2 = upx * z1 - upy * z0;\n//    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n//    if (!len) {\n//        x0 = 0;\n//        x1 = 0;\n//        x2 = 0;\n//    } else {\n//        len = 1 / len;\n//        x0 *= len;\n//        x1 *= len;\n//        x2 *= len;\n//    }\n\n//    y0 = z1 * x2 - z2 * x1;\n//    y1 = z2 * x0 - z0 * x2;\n//    y2 = z0 * x1 - z1 * x0;\n\n//    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n//    if (!len) {\n//        y0 = 0;\n//        y1 = 0;\n//        y2 = 0;\n//    } else {\n//        len = 1 / len;\n//        y0 *= len;\n//        y1 *= len;\n//        y2 *= len;\n//    }\n\n//    out[0] = x0;\n//    out[1] = y0;\n//    out[2] = z0;\n//    out[3] = 0;\n//    out[4] = x1;\n//    out[5] = y1;\n//    out[6] = z1;\n//    out[7] = 0;\n//    out[8] = x2;\n//    out[9] = y2;\n//    out[10] = z2;\n//    out[11] = 0;\n//    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n//    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n//    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n//    out[15] = 1;\n\n//    return out;\n//}\n\n///**\n// * Returns a string representation of a mat4\n// *\n// * @param {mat4} a matrix to represent as a string\n// * @returns {String} string representation of the matrix\n// */\n//export function str(a) {\n//    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n//                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n//                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n//                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n//}\n\n///**\n// * Returns Frobenius norm of a mat4\n// *\n// * @param {mat4} a the matrix to calculate Frobenius norm of\n// * @returns {Number} Frobenius norm\n// */\n//export function frob(a) {\n//    return (Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2)));\n//}\n\n///**\n// * Adds two mat4's\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the first operand\n// * @param {mat4} b the second operand\n// * @returns {mat4} out\n// */\n//export function add(out, a, b) {\n//    out[0] = a[0] + b[0];\n//    out[1] = a[1] + b[1];\n//    out[2] = a[2] + b[2];\n//    out[3] = a[3] + b[3];\n//    out[4] = a[4] + b[4];\n//    out[5] = a[5] + b[5];\n//    out[6] = a[6] + b[6];\n//    out[7] = a[7] + b[7];\n//    out[8] = a[8] + b[8];\n//    out[9] = a[9] + b[9];\n//    out[10] = a[10] + b[10];\n//    out[11] = a[11] + b[11];\n//    out[12] = a[12] + b[12];\n//    out[13] = a[13] + b[13];\n//    out[14] = a[14] + b[14];\n//    out[15] = a[15] + b[15];\n//    return out;\n//}\n\n///**\n// * Subtracts matrix b from matrix a\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the first operand\n// * @param {mat4} b the second operand\n// * @returns {mat4} out\n// */\n//export function subtract(out, a, b) {\n//    out[0] = a[0] - b[0];\n//    out[1] = a[1] - b[1];\n//    out[2] = a[2] - b[2];\n//    out[3] = a[3] - b[3];\n//    out[4] = a[4] - b[4];\n//    out[5] = a[5] - b[5];\n//    out[6] = a[6] - b[6];\n//    out[7] = a[7] - b[7];\n//    out[8] = a[8] - b[8];\n//    out[9] = a[9] - b[9];\n//    out[10] = a[10] - b[10];\n//    out[11] = a[11] - b[11];\n//    out[12] = a[12] - b[12];\n//    out[13] = a[13] - b[13];\n//    out[14] = a[14] - b[14];\n//    out[15] = a[15] - b[15];\n//    return out;\n//}\n\n///**\n// * Alias for {@link mat4.subtract}\n// * @function\n// */\n//export {subtract as sub};\n\n///**\n// * Multiply each element of the matrix by a scalar.\n// *\n// * @param {mat4} out the receiving matrix\n// * @param {mat4} a the matrix to scale\n// * @param {Number} b amount to scale the matrix's elements by\n// * @returns {mat4} out\n// */\n//export function multiplyScalar(out, a, b) {\n//    out[0] = a[0] * b;\n//    out[1] = a[1] * b;\n//    out[2] = a[2] * b;\n//    out[3] = a[3] * b;\n//    out[4] = a[4] * b;\n//    out[5] = a[5] * b;\n//    out[6] = a[6] * b;\n//    out[7] = a[7] * b;\n//    out[8] = a[8] * b;\n//    out[9] = a[9] * b;\n//    out[10] = a[10] * b;\n//    out[11] = a[11] * b;\n//    out[12] = a[12] * b;\n//    out[13] = a[13] * b;\n//    out[14] = a[14] * b;\n//    out[15] = a[15] * b;\n//    return out;\n//}\n\n///**\n// * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n// *\n// * @param {mat4} out the receiving vector\n// * @param {mat4} a the first operand\n// * @param {mat4} b the second operand\n// * @param {Number} scale the amount to scale b's elements by before adding\n// * @returns {mat4} out\n// */\n//export function multiplyScalarAndAdd(out, a, b, scale) {\n//    out[0] = a[0] + (b[0] * scale);\n//    out[1] = a[1] + (b[1] * scale);\n//    out[2] = a[2] + (b[2] * scale);\n//    out[3] = a[3] + (b[3] * scale);\n//    out[4] = a[4] + (b[4] * scale);\n//    out[5] = a[5] + (b[5] * scale);\n//    out[6] = a[6] + (b[6] * scale);\n//    out[7] = a[7] + (b[7] * scale);\n//    out[8] = a[8] + (b[8] * scale);\n//    out[9] = a[9] + (b[9] * scale);\n//    out[10] = a[10] + (b[10] * scale);\n//    out[11] = a[11] + (b[11] * scale);\n//    out[12] = a[12] + (b[12] * scale);\n//    out[13] = a[13] + (b[13] * scale);\n//    out[14] = a[14] + (b[14] * scale);\n//    out[15] = a[15] + (b[15] * scale);\n//    return out;\n//}\n\n///**\n// * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n// *\n// * @param {mat4} a The first matrix.\n// * @param {mat4} b The second matrix.\n// * @returns {Boolean} True if the matrices are equal, false otherwise.\n// */\n//export function equals(a, b) {\n//    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n//           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n//           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n//           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n//}\n","import { create, createvec3, vec3transform, multiply, invert } from './mat4';\nimport Rectangle from './rect';\n\n// TODO\n// - Aspect ratio / resize of viewport --> update transform\n// - Take into account the z-value of the slice\n// - Remove duplication inside functions\n\n// let = block scoped\n// var = global / function scoped\n\n\nvar meter_to_pixel = 3779.5275590551; // 1 meter equals 3779.5275590551 pixels\n\nfunction world_square_matrix(box, ar) {\n    // Returns transform matrix to go from world to normalized square\n    // FIXME: aspect ratio - is NOT taken into account ??? !!!\n    let sx = 2. / ((box.xmax - box.xmin) * ar)\n    let sy = 2. / (box.ymax - box.ymin)\n    let tx = -(box.xmax + box.xmin) / (box.xmax - box.xmin)\n    let ty = -(box.ymax + box.ymin) / (box.ymax - box.ymin)\n    let m = create()\n    m[0] = sx\n    m[5] = sy\n    m[12] = tx\n    m[13] = ty\n    return m\n}\n\n\nfunction square_viewport_matrix(box) {\n    // Returns transform matrix to go from normalized square to viewport\n    // FIXME: can overflow? better to first multiply with 1/2?\n    let sx = (box.xmax - box.xmin) * .5\n    let sy = (box.ymax - box.ymin) * .5\n    let tx = (box.xmax + box.xmin) * .5\n    let ty = (box.ymax + box.ymin) * .5\n    let m = create()\n    m[0] = sx\n    m[5] = sy\n    m[12] = tx\n    m[13] = ty\n    return m\n}\n\n// FIXME\n//\n// Check handedness of the 3D system and get it right + consistent!\n// https://github.com/g-truc/glm/blob/master/glm/gtc/matrix_transform.inl\n//\n// OrthoLH\n// OrthoRH\n\nclass Transform {\n    constructor(Sb, Nb, Ns, center_world, viewport_size, denominator) {\n\n        this.Sb = Sb; // start scale denominator\n        this.Nb = Nb; //total number of objects on base map \n        this.Ns = Ns; //total number of steps\n        // matrices\n        this.viewport_world = create();\n        this.world_viewport = create();\n        //\n        this.world_square = null;\n        this.square_viewport = null;\n        //\n        this.viewport = null;\n        // set up initial transformation\n        this.initTransform(center_world, viewport_size, denominator)\n        //console.log(\"Set up transform: \" + center_world + \" 1:\" + denominator + \" vs 1:\" + this.getScaleDenominator())\n    }\n\n    // fixme: rename -> initTransform\n    initTransform(center_world, viewport_size, denominator) {\n        // compute from the center of the world, the viewport size and the scale\n        // denominator how much of the world is visible\n        let cx = center_world[0],\n            cy = center_world[1]\n        let width = viewport_size[0],\n            height = viewport_size[1]\n        let halfw = 0.5 * width,\n            halfh = 0.5 * height\n\n        // get half visible screen size in world units,\n        // when we look at it at this map scale (1:denominator)\n        let half_visible_screen = [halfw / meter_to_pixel * denominator, halfh / meter_to_pixel * denominator]\n        let xmin = cx - half_visible_screen[0],\n            xmax = cx + half_visible_screen[0],\n            ymin = cy - half_visible_screen[1],\n            ymax = cy + half_visible_screen[1]\n        // the size of the viewport \n        this.viewport = new Rectangle(0, 0, width, height)\n        // we arrive at what part of the world then is visible\n        // let visible_world = this.visibleWorld() //\n        let visible_world = new Rectangle(xmin, ymin, xmax, ymax)\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * cx, -scale[1] * cy]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        //console.log(\"INITIAL world square\" + world_square);\n        // we can set up ndc square -> viewport matrix\n\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        //console.log('ll: ' + ll + \" \" + this.viewport.xmin + \" \" + this.viewport.ymin);\n        //console.log('tr: ' + tr + \" \" + this.viewport.xmax + \" \" + this.viewport.ymax);\n    }\n\n    backward(vec3) {\n        let result = createvec3()\n        vec3transform(result, vec3, this.viewport_world)\n        return result\n    }\n\n    updateViewportTransform() {\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n    }\n\n    pan(dx, dy) {\n        this.square_viewport[12] += dx\n        this.square_viewport[13] += dy\n\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        //console.log('ll: ' + ll + \" \" + this.viewport.xmin + \" \" + this.viewport.ymin);\n        //console.log('tr: ' + tr + \" \" + this.viewport.xmax + \" \" + this.viewport.ymax);\n\n        // we arrive at what part of the world then is visible\n        let visible_world = this.visibleWorld() // new Rectangle(ll[0], ll[1], tr[0], tr[1])\n        let center = visible_world.center()\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * center[0], -scale[1] * center[1]]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        // and given the size of the viewport we can set up ndc square -> viewport matrix\n        // this.viewport = new Rectangle(0, 0, width, height)\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n    }\n\n    zoom(factor, x, y) {\n        var tmp = create()\n        // 1. translate\n        {\n            let eye = create()\n            eye[12] = -x\n            eye[13] = -y\n            multiply(tmp, eye, this.square_viewport)\n        }\n        // 2. scale\n        {\n            let eye = create()\n            eye[0] = factor\n            eye[5] = factor\n            multiply(tmp, eye, tmp)\n        }\n        // 3. translate back\n        {\n            let eye = create()\n            eye[12] = x\n            eye[13] = y\n            multiply(tmp, eye, tmp)\n        }\n        this.square_viewport = tmp;\n        multiply(this.world_viewport, this.square_viewport, this.world_square)\n        invert(this.viewport_world, this.world_viewport)\n        // var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        // var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        // we arrive at what part of the world then is visible\n        let visible_world = this.visibleWorld() // new Rectangle(ll[0], ll[1], tr[0], tr[1])\n        let center = visible_world.center()\n        // scaling/translating is then as follows:\n        let scale = [2. / visible_world.width(), 2. / visible_world.height()]\n        let translate = [-scale[0] * center[0], -scale[1] * center[1]]\n        // by means of which we can calculate a world -> ndc square matrix\n        let world_square = create()\n        world_square[0] = scale[0]\n        world_square[5] = scale[1]\n        world_square[12] = translate[0]\n        world_square[13] = translate[1]\n        this.world_square = world_square\n        // and given the size of the viewport we can set up ndc square -> viewport matrix\n        // this.viewport = new Rectangle(0, 0, width, height)\n        this.square_viewport = square_viewport_matrix(this.viewport)\n        // and going from one to the other is then the concatenation of the 2 (and its inverse)\n        this.updateViewportTransform()\n    }\n\n    visibleWorld() {\n        //console.log(\"visibleWorld in transform.js\")\n        var ll = this.backward([this.viewport.xmin, this.viewport.ymin, 0.0]);\n        var tr = this.backward([this.viewport.xmax, this.viewport.ymax, 0.0]);\n        // we arrive at what part of the world then is visible\n        return new Rectangle(ll[0], ll[1], tr[0], tr[1])\n    }\n\n    getCenter() {\n        //console.log(\"getCenter in transform.js\")\n        var center = this.backward([\n            this.viewport.xmin + (this.viewport.xmax - this.viewport.xmin) * 0.5,\n            this.viewport.ymin + (this.viewport.ymax - this.viewport.ymin) * 0.5, 0.0]);\n        return center\n    }\n\n    getScaleDenominator() {\n        let viewport_in_meter = new Rectangle(0, 0,\n            this.viewport.width() / meter_to_pixel,\n            this.viewport.height() / meter_to_pixel)\n        let world_in_meter = this.visibleWorld()\n        let St = Math.sqrt(world_in_meter.area() / viewport_in_meter.area())\n        return St\n    }\n\n    stepMap() {\n        let viewport_in_meter = new Rectangle(0, 0,\n            this.viewport.width() / meter_to_pixel,\n            this.viewport.height() / meter_to_pixel)\n        let world_in_meter = this.visibleWorld()\n\n\n        // FIXME: these 2 variables should be adjusted\n        //         based on which tGAP is used...\n        // FIXME: this step mapping should move to the data side (the tiles)\n        //         and be kept there (for every dataset visualized on the map)\n        // FIXME: should use this.getScaleDenominator()\n\n        // let Sb = 48000  // (start scale denominator)\n        // let total_steps = 65536 - 1   // how many generalization steps did the process take?\n\n        //let Sb = 24000  // (start scale denominator)\n        //let total_steps = 262144 - 1   // how many generalization steps did the process take?\n\n\n\n        let St = Math.sqrt(world_in_meter.area() / viewport_in_meter.area()) //current scale denominator \n        let reductionf = 1 - Math.pow(this.Sb / St, 2) // reduction in percentage\n\n        //Originally, step = this.Nb * reductionf.\n        //If the goal map has only 1 feature left, then this.Nb = this.Ns + 1.\n        //If the base map has 5537 features and the goal map has 734 features,\n        //then there are 4803 steps (this.Nb != this.Ns + 1).\n        //It is better to use 'this.Ns + 1' instead of this.Nb\n        let step = (this.Ns + 1) * reductionf //step is not necessarily an integer\n        return [Math.max(0, step), St]\n    }\n\n}\n\nexport default Transform\n","import { now } from \"./animate\"\nimport Transform from './transform';\n\nexport class SSCTree {\n    constructor(msgbus) {\n        this.msgbus = msgbus\n        this.tree = null\n        this.retrieved = {}\n    }\n\n    load() {\n        //\n        // FIXME: convert to worker that does this\n        // \n        // fetch('nl/tree_max9_fanout10_9.json')\n\n        //we specify folder 'dist_test', 'dist_buchholz_greedy', or 'dist_buchholz_astar' in sscview-js\\rollup.config.js\n        let data_folder = 'data/';\n        let jsonfile = 'nodes.json';\n//        let jsonfile = 'tree_buchholz.json';\n        //let jsonfile = 'tree.json';\n\n        fetch(data_folder + jsonfile)\n            .then(r => {\n                return r.json()\n            })\n            .then(tree => {\n                this.tree = tree;\n                let box3d = tree.box;\n                tree.center2d = [(box3d[0] + box3d[3]) / 2, (box3d[1] + box3d[4]) / 2]\n                let dataelements = obtain_dataelements(this.tree)  //dataelements recorded in .json file\n                dataelements.forEach(element => { //originally, each element has attributes \"id\", \"box\", \"info\"\n                    element.content = null\n                    element.last_touched = null\n                    element.url = data_folder + element.info\n                })\n            })\n            .then(() => {\n                this.msgbus.publish('data.tree.loaded', 'tree.ready')\n            }) // FIXME: Notify via PubSub that tree has loaded (should re-render map if not rendering)\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    fetch_tiles(box3d, gl) {\n        if (this.tree === null) { return }\n\n        let overlapped_dataelements = obtain_overlapped_dataelements(this.tree, box3d)\n        // FIXME: sort the tiles via the distance from center of the box?\n        overlapped_dataelements.map(elem => {\n            if (!this.retrieved[elem.url] && elem.content === null) {\n                let content = new TileContent(this.msgbus)\n                content.load(elem.url, gl) //e.g., elem.url = de/buchholz_greedy_test.obj\n                elem.content = content\n                this.retrieved[elem.url] = true \n                // FIXME: is this really 'retrieved' ? Or more, scheduled for loading ?\n                // FIXME: put this in the tile itself, instead of in extra object 'this.retrieved'\n            }\n        })\n    }\n\n    get_relevant_tiles(box3d) {\n        if (this.tree === null) { return [] }\n\n        let overlapped_dataelements = obtain_overlapped_dataelements(this.tree, box3d)\n        return overlapped_dataelements\n            .filter(elem => { // those tiles that are loaded and overlap the screen\n                //elem.content may have been assigned in function set_active_tiles\n                return elem.content !== null && overlaps3d(box3d, elem.box)\n            })\n            .map(elem => { // set for each tile to be rendered the last accessed time\n                elem.last_touched = now();\n                return elem\n            })\n    }\n\n}\n\n\nclass TileContent {\n    constructor(msgbus) {\n        this.msgbus = msgbus\n        this.line_triangleVertexPosBufr = null;\n        this.displacementBuffer = null;\n        this.polygon_triangleVertexPosBufr = null;\n    }\n\n    load(url, gl) {\n        fetch(url)  //e.g., url = \"http://localhost:8000/de/buchholz_greedy_test.obj\"\n            .then(response => { return response.text() })  //e.g., the text (dataset) stored in an .obj file            \n            .then(data_text => {\n                var data_from_text = this._obtain_data_from_text(data_text, gl, this.class_color_dt);\n                this.line_triangleVertexPosBufr = data_from_text[0];\n                this.displacementBuffer = data_from_text[1];\n                this.polygon_triangleVertexPosBufr = data_from_text[2];\n                this.msgbus.publish('data.tile.loaded', 'tile.ready')\n            })\n            .catch(err => { console.error(err) });\n    }\n\n    _obtain_data_from_text(data_text, gl) {\n        //data_text is the content of an .obj file\n\n        var class_color_dt = generate_class_color_dt();\n        var deltas_bound_triangles = [];\n        var line_and_polygon_triangleVertexPosBufr = \n            this._obtain_line_and_polygon_triangleVertexPosBufr(data_text, gl, class_color_dt, deltas_bound_triangles)\n\n        let displacementElements = new Float32Array(deltas_bound_triangles.flat(1));\n        let displacementBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, displacementBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, displacementElements, gl.STATIC_DRAW);\n\n        displacementBuffer.itemSize = 2; //each item has only x and y\n        displacementBuffer.numItems = displacementElements.length / 2;\n\n        return [\n            line_and_polygon_triangleVertexPosBufr[0],\n            displacementBuffer,\n            line_and_polygon_triangleVertexPosBufr[1]];\n    }\n\n\n    _obtain_line_and_polygon_triangleVertexPosBufr(data_text, gl,\n        class_color_dt, deltas_bound_triangles) {\n\n        var step_high = [];\n        var vertex_lt = [];\n        var feature_color = [];\n        var triangle_color_lt = [];\n        var vertices_bound_triangles = []; //vertices of the boundaries, in order to form triangles to display the boundaries\n        data_text.split(\"\\n\").forEach(l => this._parseLine(\n            l, vertex_lt, class_color_dt, triangle_color_lt,\n            step_high, feature_color, vertices_bound_triangles, deltas_bound_triangles));\n\n        //obtain line_triangleVertexPosBufr;\n        var line_vertexElements = new Float32Array(vertices_bound_triangles.flat(1));\n        var line_itemSize = 4; //the number of elements, which is 4 for position, i.e., x, y, z (step_low), step_high\n        var line_extended_itemSize = line_itemSize; //for computing the number of vertices; \n        var line_triangleVertexPosBufr = this._obtain_triangleVertexPosBufr(\n            gl, line_vertexElements, line_itemSize, line_extended_itemSize);\n\n        //obtain polygon_triangleVertexPosBufr;\n        var polygon_vertexElements = new Float32Array(triangle_color_lt);\n        var polygon_itemSize = 3; //the number of elements, which is 3 for position, i.e., x, y, z \n        //each vertex has 6 elements in triangle_color_lt, i.e., x, y, z, r_frac, g_frac, b_frac\n        var polygon_extended_itemSize = 6; //for computing the number of vertices;        \n        var polygon_triangleVertexPosBufr = this._obtain_triangleVertexPosBufr(\n            gl, polygon_vertexElements, polygon_itemSize, polygon_extended_itemSize);\n\n        return [line_triangleVertexPosBufr, polygon_triangleVertexPosBufr];\n    }\n\n\n    _obtain_triangleVertexPosBufr(gl, vertexElements, itemSize, extended_itemSize) {\n        \n        let triangleVertexPosBufr = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        gl.bufferData(gl.ARRAY_BUFFER, vertexElements, gl.STATIC_DRAW);\n\n        triangleVertexPosBufr.itemSize = itemSize;        \n        triangleVertexPosBufr.numItems = vertexElements.length / extended_itemSize; //the number of vertices;\n\n        return triangleVertexPosBufr;\n    }\n\n\n    _parseLine(line, vertex_lt, class_color_dt, triangle_color_lt,\n        step_high, feature_color, vertices_bound_triangles, deltas_bound_triangles) {\n\n        var words = line.split(' ');\n        if (words[0] == 'v') {\n            vertex_lt.push({\n                x: Number(words[1]),\n                y: Number(words[2]),\n                z: Number(words[3])\n            });\n        } else if (words[0] == 'g') {\n            var feature_class = Number(words[1].split('_')[0]);\n            feature_color[0] = class_color_dt[feature_class];\n        } else if (words[0] == 'f') {\n            // 3 vertex indentifiers make a triangle; add coordinates and colors\n            var f_color = feature_color[0];\n            for (i = 1; i <= 3; i++) {\n                var vertex = vertex_lt[Number(words[i]) - 1];\n                triangle_color_lt.push(vertex.x, vertex.y, vertex.z,\n                    f_color.r_frac, f_color.g_frac, f_color.b_frac);\n            }\n        }\n        else if (words[0] == '#') {\n            // words[1]: step_high; words[2]: edge_id\n            if (words.length > 1) {\n                step_high[0] = words[1];\n            }\n        }\n        else if (words[0] == 'l') {\n            var polyline = [];\n            for (var i = 1; i < words.length; i++) {\n                polyline.push(vertex_lt[words[i] - 1]);\n            }\n\n            var point_records = [];\n            for (var j = 0; j < polyline.length; j++) {\n                var pt = polyline[j];\n                point_records.push([pt.x, pt.y, pt.z, step_high[0]]); //pt.z is step_low\n            }\n\n            for (var j = 0; j < point_records.length - 1; j++) {\n                var start = point_records[j];    //start point of a line segment\n                var end = point_records[j + 1];  //end point of the line segment\n                var start_xy = start.slice(0, 2);\n                var end_xy = end.slice(0, 2);\n                var v = make_vector_start_end(start_xy, end_xy);\n                var length = norm(v);\n\n                if (length != 0) {\n                    var unitvec = div(v, length);\n                    //The lengths of startr, startl, endr, and endl are sqrt(2)\n                    var startr = add(mul(unitvec, -1), rotate90cw(unitvec));\n                    var startl = add(mul(unitvec, -1), rotate90ccw(unitvec));\n                    var endr = add(unitvec, rotate90cw(unitvec));\n                    var endl = add(unitvec, rotate90ccw(unitvec));\n\n\n                    //start consists of x, y, z (step_low), step_high, while\n                    //startl consists of only x, y\n                    vertices_bound_triangles.push(start, start, end, start, end, end);\n                    deltas_bound_triangles.push(startl, startr, endl, startr, endr, endl);\n                }\n            }\n        }\n\n        //#region vector computation\n\n        function sub(a, b) {\n            /*Subtract a vector b from a, or subtract a scalar*/\n            var result_values = [];\n            if (isNaN(b)) { //b is not a number; b is iterable\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] - b[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] - b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function add(a, b) {\n            /*Add a vector b to a, or add a scalar*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] + b[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] + b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function mul(a, b) {\n            /*Multiply a vector either element-wise with another vector, or with a\n            scalar.*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] * b[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] * b);\n                }\n            }\n\n            return result_values;\n        }\n\n        function div(a, b) {\n            /*Element-wise division with another vector, or with a scalar.*/\n            var result_values = [];\n            if (isNaN(b)) {\n                if (a.length != b.length) {\n                    throw \"Vector dimensions should be equal\";\n                }\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] / b[i]);\n                }\n            }\n            else {\n                for (var i = 0; i < a.length; i++) {\n                    result_values.push(a[i] / b);\n                }\n            }\n\n            return result_values;\n        }\n\n\n        //function make_vector(end, start) {\n        //    /*Creates a vector from the start to the end.\n\n        //    Vector is made based on two points{ end - (minus) start.\n        //        */\n        //    return sub(end, start);\n        //}\n\n        function make_vector_start_end(start, end) {\n            /*Creates a vector from the start to the end.\n            \n            Vector is made based on two points{ end - (minus) start.\n                */\n            return sub(end, start);\n        }\n\n        function dot(v1, v2) {\n            /*Returns dot product of v1 and v2 */\n            if (v1.length != v2.length) {\n                throw \"Vector dimensions should be equal\";\n            }\n\n            var dot_value = 0;\n            for (var i = 0; i < v1.length; i++) {\n                dot_value += v1[i] * v2[i];\n            }\n            return dot_value;\n        }\n\n\n        function norm2(v) {\n            /*Returns the norm of v, *squared*.*/\n            return dot(v, v);\n        }\n\n\n        function norm(a) {\n            /*L2 norm*/\n            return Math.sqrt(norm2(a));\n        }\n\n\n        function dist(start, end) {\n            /*Distance between two positons*/\n            return norm(make_vector_start_end(start, end));\n        }\n\n\n        function unit(v) {\n            /*Returns the unit vector in the direction of v.*/\n            return div(v, norm(v));\n        }\n\n\n        function cross(a, b) {\n            /*Cross product between a 3-vector or a 2-vector*/\n            if (a.length != b.length) {\n                throw \"Vector dimensions should be equal\";\n            }\n            if (a.length == 3) {\n                return (\n                    a[1] * b[2] - a[2] * b[1],\n                    a[2] * b[0] - a[0] * b[2],\n                    a[0] * b[1] - a[1] * b[0]);\n            }\n            else if (a.length == 2) {\n                return a[0] * b[1] - a[1] * b[0];\n            }\n            else {\n                throw 'Vectors must be 2D or 3D';\n            }\n        }\n\n        function angle(v1, v2) {\n            /*angle between 2 vectors*/\n            return Math.acos(dot(v1, v2) / (norm(v1) * norm(v2)));\n        }\n\n        function angle_unit(v1, v2) {\n            /*angle between 2 *unit* vectors*/\n            let d = dot(v1, v2)\n            if (d > 1.0 || d < -1.0) {\n                console.log(\"dot not in [-1, 1] -- clamp\");\n            }\n            d = Math.max(-1.0, Math.min(1.0, d));\n            return Math.acos(d);\n        }\n\n        function near_zero(val) {\n            if (Math.abs(val) <= Math.pow(0.1, 8)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n\n        function bisector(u1, u2) {\n            /*Based on two unit vectors perpendicular to the wavefront,\n            get the bisector\n            \n            The magnitude of the bisector vector represents the speed\n                in which a vertex has to move to keep up(stay at the intersection of)\n            the 2 wavefront edges\n            */\n            let direction = add(u1, u2);\n\n            var max_value = 0;\n            for (var i = 0; i < direction.length; i++) {\n                max_value = Math.max(max_value, Math.abs(direction[i]));\n            }\n\n            if (near_zero(max_value)) {\n                return (0, 0);\n            }\n            let alpha = 0.5 * Math.PI + 0.5 * angle_unit(u1, u2);\n            let magnitude = Math.sin(alpha); //if u1 and u2 are unit vectors, then magnitude = sqrt(2) / 2\n            var bisector_result = div(unit(direction), magnitude);\n            return bisector_result;\n        }\n\n\n        function rotate90ccw(v) {\n            /*Rotate 2d vector 90 degrees counter clockwise\n            \n                (x, y) -> (-y, x)\n            */\n            return [-v[1], v[0]];\n        }\n\n\n        function rotate90cw(v) {\n            /*Rotate 2d vector 90 degrees clockwise\n            \n                (x, y) -> (y, -x)\n            */\n            return [v[1], -v[0]];\n        }\n    \n\n    //#endregion\n    }\n\n\n}\n\n\n\n\n\nfunction obtain_overlapped_dataelements(node, box3d) {\n    // console.log(box)\n    let result = []\n    let stack = [node]\n    while (stack.length > 0) {\n        let node = stack.pop()\n\n        // visit chids, if they overlap\n        node.children.forEach(child => {\n            if (overlaps3d(node.box, box3d)) {\n                stack.push(child)\n            }\n        });\n\n        // add data elements to result list, if box overlaps\n        node.dataelements.forEach(element => {\n            if (overlaps3d(element.box, box3d)) {\n                result.push(element)\n            }\n        });\n    }\n    return result\n}\n\n\nfunction obtain_dataelements(root) {\n    // FIXME: make iterator/generator function* \n    // to avoid making the whole result list\n    let result = []\n    let stack = [root]\n    while (stack.length > 0) {\n        const node = stack.pop()\n\n        // visit chids, if they overlap\n        node.children.forEach(child => {\n            stack.push(child)\n        });\n\n        // add data elements to result list, if box overlaps\n        node.dataelements.forEach(element => {\n            result.push(element)\n        });\n    }\n    return result\n}\n\nfunction overlaps2d(one, other) {\n    // Separating axes theorem\n    // xmin=[0][0]\n    // xmax=[1][0]\n    // ymin=[0][1]\n    // ymax=[1][1]\n    // If one of the following is true then there can be no overlap\n    return !(one[1][0] < other[0][0] ||\n        one[0][0] > other[1][0] ||\n        one[1][1] < other[0][1] ||\n        one[0][1] > other[1][1])\n}\n\n\nexport function overlaps3d(one, other) {\n    // Separating axes theorem, nD\n    const dims = 3\n    let are_overlapping = true;\n    for (let min = 0; min < dims; min++) {\n        let max = min + dims\n        if ((one[max] < other[min]) || (one[min] > other[max])) {\n            are_overlapping = false\n            break\n        }\n    }\n    return are_overlapping\n}\n\nfunction generate_class_color_dt() {\n\n    var class_color_dt = {\n        2101: { r: 239, g: 200, b: 200 },\n        2112: { r: 255, g: 174, b: 185 },\n        2114: { r: 204, g: 204, b: 204 },\n        2201: { r: 138, g: 211, b: 175 },\n        2202: { r: 51, g: 204, b: 153 },\n        2213: { r: 170, g: 203, b: 175 },\n        2230: { r: 181, g: 227, b: 181 },\n        2301: { r: 157, g: 157, b: 108 },\n        3103: { r: 254, g: 254, b: 254 },\n        3302: { r: 204, g: 153, b: 255 },\n        4101: { r: 234, g: 216, b: 189 },\n        4102: { r: 230, g: 255, b: 204 },\n        4103: { r: 171, g: 223, b: 150 },\n        4104: { r: 255, g: 255, b: 192 },\n        4105: { r: 40, g: 200, b: 254 },\n        4107: { r: 141, g: 197, b: 108 },\n        4108: { r: 174, g: 209, b: 160 },\n        4109: { r: 207, g: 236, b: 168 },\n        4111: { r: 190, g: 239, b: 255 },\n        5112: { r: 181, g: 208, b: 208 },\n    };\n\n    for (var key in class_color_dt) {\n        var color = class_color_dt[key];  //color is a dictionary of elements r, g, b\n        color.r_frac = color.r / 255;\n        color.g_frac = color.g / 255;\n        color.b_frac = color.b / 255;\n    }\n\n    return class_color_dt;\n}\n\n\n// let isPowerOf2 = ((value) => { return (value & (value - 1)) == 0 })\n\nexport default SSCTree\n\n","// from https://github.com/kelektiv/node-uuid\n// mit license\n\n// Lookup Table\nlet byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n    byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n    let i = offset || 0;\n    let bth = byteToHex;\n    // join used to fix memory issue caused by concatenation: \n    // https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n    return ([bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nfunction mathRNG() {\n    let rnds = new Array(16);\n    for (let i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) {\n            r = Math.random() * 0x100000000;\n        }\n        rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n    return rnds;\n}\n\nfunction getUuid() {\n    let x = mathRNG();\n    return bytesToUuid(x);\n}\n// end: from https://github.com/kelektiv/node-uuid\n\n\nclass MessageBus {\n    constructor() {\n        this._topics = {}; // {topic: [subscriberFn, ...], ...}\n    }\n\n    publish(topic, message, sender) {\n        // console.log('publish invoked ' + topic + ' ' + sender + ' ' + message);\n        if (sender === null) {\n            sender = 0\n        }\n        if (!this._topics[topic]) {\n            return false;\n        }\n        let subscribers = this._topics[topic];\n        subscribers.forEach(subscriberFn => {\n            setTimeout(subscriberFn(topic, message, sender), 0)\n        });\n\n        return true;\n    }\n\n    subscribe(topic, func) {\n        // if the topic list does not exist yet, make one\n        if (!this._topics[topic]) {\n            this._topics[topic] = [];\n        }\n        // add the topic to the list\n        this._topics[topic].push(func)\n        // return reference to arrow function that removes subscription, once invoked\n        return {\n            remove: (() => {\n                // console.log('Invoking remove')\n                // console.log(this._topics[topic])\n                // console.log('old length ' + this._topics[topic].length)\n                let index = this._topics[topic].indexOf(func)\n                // console.log(index)\n                this._topics[topic].splice(index, 1)\n                // console.log('new length ' + this._topics[topic].length)\n                if (this._topics[topic].length === 0) {\n                    delete this._topics[topic]\n                }\n            })\n        }\n    }\n\n}\n\nconst instance = new MessageBus();\nObject.freeze(instance);\n\n\nexport class MessageBusConnector {\n\n    constructor() {\n        this.id = getUuid()\n    }\n\n    publish(topic, message) {\n        return instance.publish(topic, message, this.id)\n    }\n\n    subscribe(topic, func) {\n        return instance.subscribe(topic, func)\n    }\n}\n\nexport default MessageBusConnector;","/**\n* Records the trace of the mouse\n*/\n\nimport { now as _now } from '../animate';\n\nclass Trace\n{\n    constructor(val)\n    {\n        this._trace = []\n        this.push(val);\n    }\n\n    shift(cutoff)  // value in msec\n    {\n        // remove old positions older than `cutoff` value (in milli seconds)\n        const now = _now();\n        while ((this._trace.length > 0) && ((now - this._trace[0][0]) > cutoff))\n        {\n            // remove at beginning of array\n            this._trace.shift();\n        }\n    }\n\n    push(val)\n    {\n        const now = _now();\n        this._trace.push([now, val]);\n    }\n\n    first()\n    {\n        return this._trace[0]\n    }\n\n    last()\n    {\n        return this._trace[this._trace.length - 1]\n    }\n\n    lastbutone()\n    {\n        return this._trace[this._trace.length - 2]\n    }\n\n    length()\n    {\n        return this._trace.length\n    }\n}\n\nexport default Trace\n","\"use strict\";\n\nclass Rectangle {\n    constructor(xmin, ymin, xmax, ymax)\n    {\n        this.xmin = xmin\n        this.ymin = ymin\n        this.xmax = xmax\n        this.ymax = ymax\n    }\n\n    width()\n    {\n        return this.xmax - this.xmin\n    }\n\n    height()\n    {\n        return this.ymax - this.ymin\n    }\n\n    toString()\n    {\n        return `new Rectangle(${this.xmin}, ${this.ymin}, ${this.xmax}, ${this.ymax})`\n    }\n\n    area()\n    {\n        return this.width() * this.height()\n    }\n\n    center()\n    {\n        return [this.xmin + this.width() * 0.5,\n                this.ymin + this.height() * 0.5]\n    }\n}\n\nexport default Rectangle\n","// FIXME: rename draw to renderFunc ?\n\nclass DrawProgram {\n    constructor(gl, vertexShaderText, fragmentShaderText) {\n\n        const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexShaderText);\n        const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentShaderText);\n\n        // Create program: attach, link, validate, detach, delete\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            console.error('ERROR linking program!', gl.getProgramInfoLog(shaderProgram));\n            return;\n        }\n        gl.validateProgram(shaderProgram);\n        if (!gl.getProgramParameter(shaderProgram, gl.VALIDATE_STATUS)) {\n            console.error('ERROR validating program!', gl.getProgramInfoLog(shaderProgram));\n            return;\n        }\n\n        this.shaderProgram = shaderProgram;\n        this.gl = gl;\n\n        // FIXME: when to call these detach/delete's? After succesful compilation?\n        // gl.detachShader(this.shaderProgram, vertexShader);\n        // gl.detachShader(this.shaderProgram, fragmentShader);\n        // gl.deleteShader(vertexShader);\n        // gl.deleteShader(fragmentShader);\n\n        // creates a shader of the given type, uploads the source and\n        // compiles it.\n        function loadShader(gl, type, source) {\n\n            const shader = gl.createShader(type);\n            gl.shaderSource(shader, source); // Send the source of the shader\n            gl.compileShader(shader); // Compile the shader program\n\n            // See if it compiled successfully\n            if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                console.error('ERROR occurred while compiling the shaders: ' + gl.getShaderInfoLog(shader));\n                gl.deleteShader(shader);\n                return null;\n            }\n\n            return shader;\n        }\n    }\n\n    _prepare_vertices(gl, shaderProgram, attribute_name, itemSize, stride, offset) {\n\n        const attrib_location = gl.getAttribLocation(shaderProgram, attribute_name);\n        gl.enableVertexAttribArray(attrib_location);\n        gl.vertexAttribPointer(\n            attrib_location,    // * Attribute location\n            itemSize,           // * Number of components per attribute ????? \n            gl.FLOAT,           // * Type of elements\n            false,              // * Is normalized?\n            stride,             // * stride \n            offset              // * Offset from the beginning of \n        );\n\n    }\n\n}\n\n\n\nclass LineDrawProgram extends DrawProgram {\n    constructor(gl) {\n\n        this.colors = [[141,211,199]\n            ,[190,186,218]\n            ,[251,128,114]\n            ,[128,177,211]\n            ,[253,180,98]\n            ,[179,222,105]\n            ,[252,205,229]\n            ,[217,217,217]\n            ,[188,128,189]\n            ,[204,235,197]\n        ].map(x => { return [x[0]/255., x[1]/255., x[2]/255.]; });\n\n        let vertexShaderText = `\nprecision highp float;\n\nattribute vec2 displacement;\nattribute vec4 vertexPosition_modelspace;\nuniform mat4 M;\nuniform float near;\nuniform float half_width_reality;\n\nvoid main()\n{\n    vec4 pos = vertexPosition_modelspace;\n\n    if (pos.z <= near && pos.w > near)\n    {\n        pos.x +=  displacement.x * half_width_reality;\n        pos.y +=  displacement.y * half_width_reality;\n        gl_Position = M * vec4(pos.xyz, 1.0);\n\n    } else {\n        gl_Position = vec4(-10.0,-10.0,-10.0,1.0);\n        return;\n    }\n}\n`;\n\n        let fragmentShaderText = `\nprecision mediump float;\nuniform vec4 uColor;\n\nvoid main()\n{\n    gl_FragColor = uColor; // color of the lines\n}\n`;\n\n        super(gl, vertexShaderText, fragmentShaderText)\n    }\n\n\n    draw_tile(matrix, tile, near_St, width_increase) {\n        let gl = this.gl;\n        let shaderProgram = this.shaderProgram;\n        let triangleVertexPosBufr = tile.content.line_triangleVertexPosBufr;\n        let displacementBuffer = tile.content.displacementBuffer;\n\n        if (triangleVertexPosBufr === null) {\n            return;\n        }\n        gl.useProgram(shaderProgram);\n\n        // void vertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset)\n        // size is the number of components per attribute. For example, with RGB colors, it would be 3; and with an\n        // alpha channel, RGBA, it would be 4. If we have location data with (x,y,z) attributes, it would be 3; and if we\n        // had a fourth parameter w, (x,y,z,w), it would be 4. Texture parameters (s,t) would be 2. type is the datatype,\n        // stride and offset can be set to the default of 0 for now and will be reexamined in Chapter 9 when we discuss\n        // interleaved arrays.\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        this._prepare_vertices(gl, shaderProgram, 'vertexPosition_modelspace', 4, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, displacementBuffer);\n        this._prepare_vertices(gl, shaderProgram, 'displacement', 2, 0, 0);\n\n        // the unit of boundary_width is mm; 1 mm equals 3.7795275590551 pixels\n        // FIXME: MM: at which amount of dots per inch has this been calculated?\n        var boundary_width_screen = parseFloat(document.getElementById('boundary_width_slider').value);\n        // The unit of the map must be meter!!!\n        var half_width_reality = boundary_width_screen * near_St[1] / 1000 / 2;\n        if (width_increase > 0)\n        {\n            half_width_reality *= width_increase;\n        }\n\n        {\n            let M_location = gl.getUniformLocation(shaderProgram, 'M');\n            gl.uniformMatrix4fv(M_location, false, matrix);\n\n            let near_location = gl.getUniformLocation(shaderProgram, 'near');\n            gl.uniform1f(near_location, near_St[0]);\n\n            let half_width_reality_location = gl.getUniformLocation(shaderProgram, 'half_width_reality');\n            gl.uniform1f(half_width_reality_location, half_width_reality);\n            if (width_increase > 0)\n            {\n                var c = [0.0, 0.0, 0.0]; // black\n            }\n            else\n            {\n                var c = this.colors[tile.id % this.colors.length];\n                // var c = [1.0, 1.0, 1.0]; // white\n            }\n            var color_location = gl.getUniformLocation(shaderProgram, 'uColor');\n            gl.uniform4f(color_location, c[0], c[1], c[2], 1.0);\n        }\n\n        // Set clear color to white, fully opaque\n        // gl.clearColor(1., 1., 1., 1.0);\n        // gl.clearDepth(1.0); // Clear everything\n\n        // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); // Clear the color buffer with specified clear color\n        // gl.clear(gl.COLOR_BUFFER_BIT)\n\n        // gl.disable(gl.BLEND);\n        gl.enable(gl.BLEND); // FIXME: needed?\n        gl.disable(gl.DEPTH_TEST);\n\n        // gl.enable(gl.CULL_FACE);\n        // gl.disable(gl.CULL_FACE); // FIXME: should we be explicit about face orientation and use culling?\n\n        // gl.cullFace(gl.BACK);\n        // gl.cullFace(gl.FRONT);\n        // gl.cullFace(gl.FRONT_AND_BACK);\n\n        gl.drawArrays(\n            gl.TRIANGLES, // kind of primitives to render; e.g., POINTS, LINES\n            0,            // Specifies the starting index in the enabled arrays.\n            triangleVertexPosBufr.numItems // Specifies the number of indices to be rendered.\n        );\n    }\n}\n\n\n\nclass PolygonDrawProgram extends DrawProgram {\n    constructor(gl) {\n        let vertexShaderText = `\nprecision highp float;\n\nattribute vec3 vertexPosition_modelspace;\nattribute vec4 vertexColor;\nuniform mat4 M;\nvarying vec4 fragColor;\n\nvoid main()\n{\n    fragColor = vertexColor;\n    gl_Position = M * vec4(vertexPosition_modelspace, 1);\n}\n`;\n        let fragmentShaderText = `\nprecision mediump float;\n\nvarying vec4 fragColor;\nvoid main()\n{\n    gl_FragColor = vec4(fragColor);\n}\n`;\n        super(gl, vertexShaderText, fragmentShaderText)\n    }\n\n    draw_tile(matrix, tile) {\n        let gl = this.gl;\n        let shaderProgram = this.shaderProgram;\n        gl.useProgram(shaderProgram);\n\n        var triangleVertexPosBufr = tile.content.polygon_triangleVertexPosBufr;\n        if (triangleVertexPosBufr === null) {\n            return;\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPosBufr);\n        this._prepare_vertices(gl, shaderProgram, 'vertexPosition_modelspace', 3, 24, 0);\n        this._prepare_vertices(gl, shaderProgram, 'vertexColor', 3, 24, 12);\n\n        {\n            let M_location = gl.getUniformLocation(shaderProgram, 'M');\n            gl.uniformMatrix4fv(M_location, false, matrix);\n        }\n\n        gl.disable(gl.BLEND);\n        gl.enable(gl.DEPTH_TEST);\n        gl.drawArrays(gl.TRIANGLES, 0, triangleVertexPosBufr.numItems);\n    }\n}\n\n\n\n\n\n\nexport class Renderer {\n    constructor(gl, ssctree) {\n        this.gl = gl\n        this.ssctree = ssctree\n\n        //console.log(this.ssctree)\n        // this.map = map;\n        // this.buckets = [];\n        //this.programs = [\n        //    new PolygonDrawProgram(gl),\n        //    new LineDrawProgram(gl),\n        //    //new ImageTileProgram(gl)\n        //]\n        // console.log(this.gl);\n        // console.log(this.buckets);\n    }\n\n    // addBucket(mesh)\n    // {\n    //     console.log('making new mesh')\n    //     let b = new Bucket(this.gl, mesh)\n    //     this.buckets.push(b)\n    //     // setTimeout(() => {\n    //     //     this.buckets.map(bucket => {\n    //     //         bucket.destroy()\n    //     //     })\n    //     // }, 15000)\n    // }\n\n    render_relevant_tiles(matrix, box3d, near_St, rect) {\n        // FIXME: \n        // should a bucket have a method to 'draw' itself?\n        // e.g. by associating multiple programs with a bucket\n        // when the bucket is constructed?\n\n        var tiles = this.ssctree.get_relevant_tiles(box3d)\n\n//        let gl = this.gl;\n//        gl.clearColor(1.0, 1.0, 1.0, 1.0);\n//        gl.clearDepth(1.0); // Clear everything\n//        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); // Clear the color buffer with specified clear color\n\n        if (tiles.length > 0) {\n\n            var polygon_draw_program = new PolygonDrawProgram(this.gl);\n            tiles.forEach(tile => {\n                polygon_draw_program.draw_tile(matrix, tile);\n            })\n\n            // FIXME: if lines have width == 0; why draw them?\n            // If we want to draw lines twice -> thick line under / small line over\n            // we need to do this twice + move the code for determining line width here...\n            var line_draw_program = new LineDrawProgram(this.gl);\n            tiles.forEach(tile => {\n                // FIXME: would be nice to specify width here in pixels.\n                // bottom lines (black)\n                // line_draw_program.draw_tile(matrix, tile, near_St, 2.0);\n                // interior (color)\n                line_draw_program.draw_tile(matrix, tile, near_St, 0);\n            })\n        }\n\n        // this.buckets.forEach(bucket => {\n        //     this.programs[0].draw(matrix, bucket);\n        // })\n        // FIXME:\n        // in case there is no active buckets (i.e. all buckets are destroy()'ed )\n        // we should this.gl.clear()\n    }\n\n\n    setViewport(width, height) {\n        this.gl.viewport(0, 0, width, height);\n    }\n\n\n}\n","\"use strict\";\n\n// const bindHandler = require('./handler');\nimport { dragHandler } from './handlers/mouse.drag';\n// import { moveHandler } from './handlers/mouse.move';\nimport { scrollHandler } from './handlers/mouse.scroll';\n\nimport { touchPinchHandler } from './handlers/touch.pinch';\nimport { touchDragHandler } from \"./handlers/touch.drag\";\n\nimport Transform from './transform';\nimport { timed } from './animate';\nimport { Renderer } from \"./render\";\n\n// import MyLoader from './loader';\n// import { TileSet , Evictor } from './tiles';\nimport { SSCTree } from './tiles';\n\nimport { MessageBusConnector } from './pubsub'\n\nclass Map \n{\n    constructor(container) {\n        if (typeof container === 'string') {\n            this._container = window.document.getElementById(container)\n        }\n        else {\n            this._container = container\n        }\n        if (!this._container) {\n            throw new Error(`Container '${container}' not found.`)\n        }\n\n        const rect = this.getCanvasContainer().getBoundingClientRect();\n        this.rect = rect;\n        this._abort = null\n\n        // data loader\n        this.msgbus = new MessageBusConnector()\n        this.msgbus.subscribe('data.tile.loaded', (topic, message, sender) => {\n            //console.log('1 subscribe data.tile.loaded')\n            if (this._abort === null) {\n                //console.log('Rendering because received:', topic, \", \", message, \", \", sender)\n                this.panAnimated(0, 0) // animate for a small time, so that when new tiles are loaded, we are already rendering\n            }\n        })\n\n        this.msgbus.subscribe('data.tree.loaded', (topic, message, sender) => {\n            var tree = this.ssctree.tree;\n            //console.log(\"tree.view_scale_Sv in this.msgbus.subscribe:\", tree.view_scale_Sv);\n            this._transform = new Transform(\n                tree.start_scale_Sb,        //scale denominator of base map (according to dataset)\n                tree.no_of_objects_Nb,      //number of objects on base map (according to dataset)\n                tree.no_of_steps_Ns,        //number of steps of the SSCTree (according to dataset) \n                tree.center2d,              //center of the map extent (according to dataset)\n                [rect.width, rect.height],\n                tree.view_scale_Sv          //scale denominator of initial view (according to users' preference)\n            )\n\n            const near_St = this.getTransform().stepMap()\n            this._prepare_active_tiles(near_St[0])\n        })\n\n        this.msgbus.subscribe('map.scale', (topic, message, sender) => {\n            //console.log('message:', message)\n            const scale = (Math.round(message / 5) * 5).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\n            // console.log(`scale changed to: 1 : ${scale}`)\n\n            let el = document.getElementById(\"scale-denominator\");\n            el.textContent = \" 1:\" + scale;\n        })\n\n        this.ssctree = new SSCTree(this.msgbus)\n        this.ssctree.load()\n\n\n\n        this.renderer = new Renderer(\n            this._container.getContext('experimental-webgl', { alpha: false, antialias: true }),\n            this.ssctree);\n        this.renderer.setViewport(rect.width, rect.height)\n\n        //this.abortAndRender()\n\n        \n        dragHandler(this)  // attach mouse handlers\n        // moveHandler(this)\n        scrollHandler(this)        \n        touchPinchHandler(this) // attach touch handlers\n        touchDragHandler(this)\n\n        // this.evictor = new Evictor(this.ssctree,\n        //                             this._container.getContext('webgl', { alpha: false, antialias: true }))\n        // window.setInterval(() => {\n        //     const box2d = this.getTransform().visibleWorld()\n        //     this.evictor.evict([[box2d.xmin, box2d.ymin], [box2d.xmax, box2d.ymax]]); this.render() }, 15000)\n\n    }\n\n    getCanvasContainer()\n    {\n        return this._container;\n    }\n\n    getTransform()\n    {\n        return this._transform;\n    }\n\n    render()\n    {\n        const near_St = this.getTransform().stepMap()\n        this.msgbus.publish('map.scale', near_St[1])\n\n        var matrix_box3d = this._prepare_active_tiles(near_St[0])\n        this.renderer.render_relevant_tiles(matrix_box3d[0], matrix_box3d[1], near_St);\n    }\n\n    _prepare_active_tiles(near) {\n        let matrix = this.getTransform().world_square\n        const far = -1\n        matrix[10] = -2.0 / (near - far)\n        matrix[14] = (near + far) / (near - far)\n        const box2d = this.getTransform().visibleWorld()\n        const box3d = [box2d.xmin, box2d.ymin, near, box2d.xmax, box2d.ymax, near]\n        let gl = this._container.getContext('experimental-webgl', { alpha: false, antialias: true })\n        this.ssctree.fetch_tiles(box3d, gl)\n        return [matrix, box3d]\n    }\n\n    doEaseNone(start, end)\n    {\n        let interpolate = ((k) =>\n        {\n            var m = new Float32Array(16);\n            for (let i = 0; i < 16; i++) \n            {\n                let delta = start[i] + k * (end[i] - start[i]);\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1)\n            {\n                this._abort = null\n            }\n        })\n        return interpolate;\n    }\n\n    doEaseInOutSine(start, end)\n    {\n        function interpolate(k)\n        {\n            var m = new Float32Array(16);\n            let D = Math.cos(Math.PI * k) - 1\n            for (let i = 0; i < 16; i++) \n            {\n                let c = end[i] - start[i];\n                let delta = -c * 0.5 * D + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1)\n            {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    doEaseOutSine(start, end)\n    {\n        let interpolate = (k) =>\n        {\n            var m = new Float32Array(16);\n            let D = (Math.sin(k * (Math.PI * 0.5)));\n            for (let i = 0; i < 16; i++) \n            {\n                let c = end[i] - start[i];\n                let delta = c * D + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k === 1)\n            {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    doEaseOutQuint(start, end)\n    {\n        function interpolate(k)\n        {\n            let t = k - 1\n            let t5p1 = Math.pow(t, 5) + 1\n            var m = new Float32Array(16);\n            for (let i = 0; i < 16; i++) \n            {\n                let c = end[i] - start[i];\n                let delta = c * t5p1 + start[i];\n                m[i] = delta;\n            }\n            // update the world_square matrix\n            this.getTransform().world_square = m;\n            this.getTransform().updateViewportTransform()\n            this.render();\n            if (k == 1)\n            {\n                this._abort = null\n            }\n        }\n        return interpolate;\n    }\n\n    animateZoom(x, y, factor)\n    {\n        const start = this.getTransform().world_square;\n        this.getTransform().zoom(factor, x, this.rect.height - y);\n        const end = this.getTransform().world_square;\n        var interpolate = this.doEaseOutSine(start, end);\n        return interpolate;\n    }\n\n    animatePan(dx, dy)\n    {\n        const start = this.getTransform().world_square;\n        this.getTransform().pan(dx, -dy);\n        const end = this.getTransform().world_square;\n        var interpolate = this.doEaseOutSine(start, end);\n        return interpolate;\n    }\n\n    panBy(dx, dy)\n    {\n        //console.log(\"_abort in map.js:\", this._abort)\n        if (this._abort !== null)\n        {\n            this._abort();\n        }\n        this.getTransform().pan(dx, -dy);\n        this.render();\n    }\n\n    zoom(x, y, factor)\n    {\n        this.getTransform().zoom(factor, x, this.rect.height - y);\n        this.render();\n    }\n\n    abortAndRender()\n    {\n        // aborts running animation\n        // and renders the map based on the current transform\n        if (this._abort !== null)\n        {\n            this._abort();\n            this._abort = null;\n        }\n        this.getTransform().pan(0, 0);\n        this.render();\n    }\n\n    zoomInAnimated(x, y, step)\n    {\n        this.zoomAnimated(x, y,  1.0 + step)\n    }\n\n    zoomOutAnimated(x, y, step)\n    {\n        this.zoomAnimated(x, y, 1.0 / (1.0 + step))\n    }\n\n    zoomAnimated(x, y, factor)\n    {\n        if (this._abort !== null)\n        {\n            this._abort();\n        }\n        var interpolator = this.animateZoom(x, y, factor); \n        var duration = parseFloat(document.getElementById('duration').value);\n        this._abort = timed(interpolator, duration, this);\n    }\n\n    panAnimated(dx, dy)\n    {\n        if (this._abort !== null)\n        {\n            this._abort();\n        }\n        var duration = parseFloat(document.getElementById('panduration').value);\n        var interpolator = this.animatePan(dx, dy); \n        this._abort = timed(interpolator, duration, this);\n    }\n\n    resize(newWidth, newHeight)\n    {\n        //console.log(\"resize\");\n        let tr = this.getTransform();\n        let center = tr.getCenter();\n        let denominator = tr.getScaleDenominator();\n        // re-initialize the transform\n        tr.initTransform(center, [newWidth, newHeight], denominator);\n        // update the viewport size of the renderer\n        this.renderer.setViewport(newWidth, newHeight)\n\n    }\n}\n\nexport default Map\n","// import  Rectangle from \"./rect\"\nimport Map from \"./map\"\n//let r = new Rectangle(1, 2, 3, 4);\n//console.log(r);\n\nconst exported = {\n    Map\n}\n\nexport default exported;"],"names":["timed","fn","dur","ctx","tick","now","abort","_now","start","call","let","k","_frame","dragHandler","map","doMouseDown","evt","preventDefault","canvas","removeEventListener","passive","addEventListener","doMouseDrag","doMouseUp","r","getBoundingClientRect","e","touches","x","clientX","left","clientLeft","y","clientY","top","clientTop","_trace","Trace","panBy","const","prev","last","dx","dy","shift","push","changedTouches","first","time","vx","vy","duration","parseFloat","document","getElementById","value","tx","ty","panAnimated","getCanvasContainer","oncontextmenu","scrollHandler","doMouseWheel","_prev","undefined","type","deltaY","wheelDeltaY","step","direction","Math","max","min","delta","radios","getElementsByName","factor","i","length","checked","_canvas","_map","zoomInAnimated","zoomOutAnimated","touchPinchHandler","dist","points","vec","sqrt","center","p0","getTouchPoints","event","j","doPinchStart","doPinchMove","capture","doPinchEnd","_prevDist","_startTime","console","log","abortAndRender","curDist","scaleDelta","zoom","lastbutone","prevDist","touchDragHandler","getTouchPoint","doTouchDragStart","doTouchDragMove","doTouchDragEnd","point","_state","vec3transform","out","a","m","z","w","createvec3","Float32Array","create","invert","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiply","b","b0","b1","b2","b3","square_viewport_matrix","box","sx","xmax","xmin","sy","ymax","ymin","obtain_overlapped_dataelements","node","box3d","result","stack","pop","children","forEach","child","overlaps3d","dataelements","element","obtain_dataelements","root","one","other","are_overlapping","generate_class_color_dt","class_color_dt","2101","g","2112","2114","2201","2202","2213","2230","2301","3103","3302","4101","4102","4103","4104","4105","4107","4108","4109","4111","5112","key","color","r_frac","g_frac","b_frac","bytesToUuid","buf","offset","bth","byteToHex","join","mathRNG","rnds","Array","random","getUuid","window","performance","bind","Date","frame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","val","this","cutoff","this$1","_multiply","Rectangle","width","height","toString","area","Transform","Sb","Nb","Ns","center_world","viewport_size","denominator","viewport_world","world_viewport","world_square","square_viewport","viewport","initTransform","cx","cy","halfw","halfh","half_visible_screen","visible_world","scale","translate","updateViewportTransform","backward","vec3","pan","visibleWorld","tmp","eye","eye$1","eye$2","ll","tr","getCenter","getScaleDenominator","viewport_in_meter","world_in_meter","stepMap","St","reductionf","pow","DrawProgram","gl","vertexShaderText","fragmentShaderText","loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","validateProgram","VALIDATE_STATUS","getProgramInfoLog","_prepare_vertices","attribute_name","itemSize","stride","attrib_location","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","LineDrawProgram","colors","super","draw_tile","matrix","tile","near_St","width_increase","triangleVertexPosBufr","content","line_triangleVertexPosBufr","displacementBuffer","useProgram","bindBuffer","ARRAY_BUFFER","boundary_width_screen","half_width_reality","M_location","getUniformLocation","uniformMatrix4fv","near_location","uniform1f","half_width_reality_location","c","id","color_location","uniform4f","enable","BLEND","disable","DEPTH_TEST","drawArrays","TRIANGLES","numItems","PolygonDrawProgram","polygon_triangleVertexPosBufr","Renderer","ssctree","render_relevant_tiles","rect","tiles","get_relevant_tiles","polygon_draw_program","line_draw_program","setViewport","SSCTree","msgbus","tree","retrieved","load","fetch","data_folder","then","json","center2d","last_touched","url","info","publish","catch","err","fetch_tiles","elem","TileContent","filter","response","text","data_text","data_from_text","_obtain_data_from_text","deltas_bound_triangles","line_and_polygon_triangleVertexPosBufr","_obtain_line_and_polygon_triangleVertexPosBufr","displacementElements","flat","createBuffer","bufferData","STATIC_DRAW","step_high","vertex_lt","feature_color","triangle_color_lt","vertices_bound_triangles","split","l","_parseLine","line_vertexElements","_obtain_triangleVertexPosBufr","polygon_vertexElements","vertexElements","extended_itemSize","line","sub","result_values","isNaN","add","mul","dot","v1","v2","dot_value","norm2","v","rotate90ccw","rotate90cw","words","Number","feature_class","f_color","vertex","polyline","point_records","pt","end","start_xy","slice","end_xy","unitvec","startr","startl","endr","endl","substr","MessageBus","_topics","topic","message","sender","subscriberFn","setTimeout","subscribe","func","remove","index","indexOf","splice","instance","Object","freeze","MessageBusConnector","Map","container","_container","Error","_abort","_transform","start_scale_Sb","no_of_objects_Nb","no_of_steps_Ns","view_scale_Sv","getTransform","_prepare_active_tiles","round","replace","textContent","renderer","getContext","alpha","antialias","render","matrix_box3d","near","box2d","doEaseNone","doEaseInOutSine","interpolate","D","cos","PI","doEaseOutSine","sin","doEaseOutQuint","t","t5p1","animateZoom","animatePan","zoomAnimated","interpolator","resize","newWidth","newHeight"],"mappings":"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"}