{"version":3,"file":"worker.js","sources":["../../src/parse.js","../../src/worker.js"],"sourcesContent":["\n\n\nfunction parse_obj(txt)\n{\n    let f_color = null\n    let step_high = null\n    let class_color = generate_class_color()\n\n    let output = {\n        vertices: [],\n        triangles: [],\n        boundaries: {\n            triangles: [],\n            deltas: []\n        }\n    }\n\n    txt.split('\\n').forEach(line => {\n        let words = line.split(' ');\n        // skip empty line\n        if (line.length == 0) {\n             return \n        }\n        // dispatch based on first character on the line\n        switch (words[0])\n        {\n            case 'v': {\n                output.vertices.push([parseFloat(words[1]), parseFloat(words[2]), parseFloat(words[3])])\n                break\n            }\n\n            case 'g': {\n                let feature_class = parseInt(words[1].split('_')[0]);\n                f_color = class_color[feature_class];\n                if (f_color === undefined) \n                {\n                    console.error('color not defined for feature class ' + feature_class);\n                    f_color = { r_frac: 1., g_frac: 0, b_frac: 0 };\n                }\n                break\n            }\n\n            case 'f': {\n                // 3 vertex indentifiers make a triangle; add coordinates and colors\n                for (let i = 1; i <= 3; i++) {\n                    let vertex = output.vertices[parseInt(words[i]) - 1];\n                    output.triangles.push([vertex[0], vertex[1], vertex[2], f_color.r_frac, f_color.g_frac, f_color.b_frac])\n                }\n                break\n            }\n\n            case '#': {\n                // words[1]: step_high; words[2]: edge_id\n                if (words.length > 1) {\n                    step_high = parseFloat(words[1])\n                }\n                break\n            }\n\n            case 'l': {\n                let polyline = [];\n                //console.log('words:', words)\n                //console.log('step_high:', step_high)\n                for (let i = 1; i < words.length; i++) {\n                    polyline.push(output.vertices[words[i] - 1]);\n                }\n\n                let point_records = [];\n                for (let j = 0; j < polyline.length; j++) {\n                    let pt = polyline[j];\n                    point_records.push([pt[0], pt[1], pt[2], step_high]); //pt[2] is step_low\n                }\n\n                for (var k = 0; k < point_records.length - 1; k++) {\n                    let start = point_records[k];    //start point of a line segment\n                    let end = point_records[k + 1];  //end point of the line segment\n                    let start_xy = start.slice(0, 2);\n                    let end_xy = end.slice(0, 2);\n                    let v = make_vector_start_end(start_xy, end_xy);\n                    let length = norm(v);\n\n                    if (length != 0) {\n                        let unitvec = div(v, length);\n                        //The lengths of startr, startl, endr, and endl are sqrt(2)\n                        let startr = add(mul(unitvec, -1), rotate90cw(unitvec));\n                        let startl = add(mul(unitvec, -1), rotate90ccw(unitvec));\n                        let endr = add(unitvec, rotate90cw(unitvec));\n                        let endl = add(unitvec, rotate90ccw(unitvec));\n\n                        //start consists of x, y, z (step_low), step_high, while\n                        //startl consists of only x, y\n                        output.boundaries.triangles.push(start, start, end, start, end, end);\n                        output.boundaries.deltas.push(startl, startr, endl, startr, endr, endl);\n                    }\n                }\n                break;\n            }\n\n            default: {\n                break\n            }\n\n        }\n\n    })\n\n    //if\n\n\n\n    //console.log('parse.js output.boundaries.triangles:', output.boundaries.triangles)\n    //console.log('parse.js output.boundaries.deltas:', output.boundaries.deltas)\n\n    let flattened = flatten_output(output)\n    //console.log('parse.js flattened:', flattened)\n    return flattened\n\n\n    // flatten nested lists to single lists as Float32Array\n    //return flatten_output(output)\n}\n\n\nfunction flatten_output(output)\n{\n//    output.vertices = new Float32Array(output.vertices.flat(1))\n//    output.triangles = new Float32Array(output.triangles.flat(1))\n//    output.boundaries.triangles = new Float32Array(output.boundaries.triangles.flat(1))\n//    output.boundaries.deltas = new Float32Array(output.boundaries.deltas.flat(1))\n\n    return [\n\n\n//        new Float32Array(output.vertices.flat(1)).buffer,\n        new Float32Array(output.triangles.flat(1)).buffer,\n        new Float32Array(output.boundaries.triangles.flat(1)).buffer,\n        new Float32Array(output.boundaries.deltas.flat(1)).buffer\n    ]\n//    return output\n}\n\n\n//#region vector computation\nfunction sub(a, b) {\n    /*Subtract a vector b from a, or subtract a scalar*/\n    var result_values = [];\n    if (isNaN(b)) { //b is not a number; b is iterable\n        if (a.length != b.length) {\n            throw \"Vector dimensions should be equal\";\n        }\n        for (var i = 0; i < a.length; i++) {\n            result_values.push(a[i] - b[i]);\n        }\n    }\n    else {\n        for (var j = 0; j < a.length; j++) {\n            result_values.push(a[j] - b);\n        }\n    }\n\n    return result_values;\n}\n\nfunction add(a, b) {\n    /*Add a vector b to a, or add a scalar*/\n    var result_values = [];\n    if (isNaN(b)) {\n        if (a.length != b.length) {\n            throw \"Vector dimensions should be equal\";\n        }\n        for (var i = 0; i < a.length; i++) {\n            result_values.push(a[i] + b[i]);\n        }\n    }\n    else {\n        for (var j = 0; j < a.length; j++) {\n            result_values.push(a[j] + b);\n        }\n    }\n\n    return result_values;\n}\n\nfunction mul(a, b) {\n    /*Multiply a vector either element-wise with another vector, or with a\n    scalar.*/\n    var result_values = [];\n    if (isNaN(b)) {\n        if (a.length != b.length) {\n            throw \"Vector dimensions should be equal\";\n        }\n        for (var i = 0; i < a.length; i++) {\n            result_values.push(a[i] * b[i]);\n        }\n    }\n    else {\n        for (var j = 0; j < a.length; j++) {\n            result_values.push(a[j] * b);\n        }\n    }\n\n    return result_values;\n}\n\nfunction div(a, b) {\n    /*Element-wise division with another vector, or with a scalar.*/\n    var result_values = [];\n    if (isNaN(b)) {\n        if (a.length != b.length) {\n            throw \"Vector dimensions should be equal\";\n        }\n        for (var i = 0; i < a.length; i++) {\n            result_values.push(a[i] / b[i]);\n        }\n    }\n    else {\n        for (var j = 0; j < a.length; j++) {\n            result_values.push(a[j] / b);\n        }\n    }\n\n    return result_values;\n}\n\n\n//function make_vector(end, start) {\n//    /*Creates a vector from the start to the end.\n\n//    Vector is made based on two points{ end - (minus) start.\n//        */\n//    return sub(end, start);\n//}\n\nfunction make_vector_start_end(start, end) {\n    /*Creates a vector from the start to the end.\n    \n    Vector is made based on two points{ end - (minus) start.\n        */\n    return sub(end, start);\n}\n\nfunction dot(v1, v2) {\n    /*Returns dot product of v1 and v2 */\n    if (v1.length != v2.length) {\n        throw \"Vector dimensions should be equal\";\n    }\n\n    var dot_value = 0;\n    for (var i = 0; i < v1.length; i++) {\n        dot_value += v1[i] * v2[i];\n    }\n    return dot_value;\n}\n\n\nfunction norm2(v) {\n    /*Returns the norm of v, *squared*.*/\n    return dot(v, v);\n}\n\n\nfunction norm(a) {\n    /*L2 norm*/\n    return Math.sqrt(norm2(a));\n}\n\n\n//function dist(start, end) {\n//    /*Distance between two positons*/\n//    return norm(make_vector_start_end(start, end));\n//}\n\n\n//function unit(v) {\n//    /*Returns the unit vector in the direction of v.*/\n//    return div(v, norm(v));\n//}\n\n\n//function cross(a, b) {\n//    /*Cross product between a 3-vector or a 2-vector*/\n//    if (a.length != b.length) {\n//        throw \"Vector dimensions should be equal\";\n//    }\n//    if (a.length == 3) {\n//        return (\n//            a[1] * b[2] - a[2] * b[1],\n//            a[2] * b[0] - a[0] * b[2],\n//            a[0] * b[1] - a[1] * b[0]);\n//    }\n//    else if (a.length == 2) {\n//        return a[0] * b[1] - a[1] * b[0];\n//    }\n//    else {\n//        throw 'Vectors must be 2D or 3D';\n//    }\n//}\n\n//function angle(v1, v2) {\n//    /*angle between 2 vectors*/\n//    return Math.acos(dot(v1, v2) / (norm(v1) * norm(v2)));\n//}\n\n//function angle_unit(v1, v2) {\n//    /*angle between 2 *unit* vectors*/\n//    let d = dot(v1, v2)\n//    if (d > 1.0 || d < -1.0) {\n//        console.log(\"dot not in [-1, 1] -- clamp\");\n//    }\n//    d = Math.max(-1.0, Math.min(1.0, d));\n//    return Math.acos(d);\n//}\n\n//function near_zero(val) {\n//    if (Math.abs(val) <= Math.pow(0.1, 8)) {\n//        return true;\n//    }\n//    else {\n//        return false;\n//    }\n//}\n\n//function bisector(u1, u2) {\n//    /*Based on two unit vectors perpendicular to the wavefront,\n//    get the bisector\n    \n//    The magnitude of the bisector vector represents the speed\n//        in which a vertex has to move to keep up(stay at the intersection of)\n//    the 2 wavefront edges\n//    */\n//    let direction = add(u1, u2);\n\n//    var max_value = 0;\n//    for (var i = 0; i < direction.length; i++) {\n//        max_value = Math.max(max_value, Math.abs(direction[i]));\n//    }\n\n//    if (near_zero(max_value)) {\n//        return (0, 0);\n//    }\n//    let alpha = 0.5 * Math.PI + 0.5 * angle_unit(u1, u2);\n//    let magnitude = Math.sin(alpha); //if u1 and u2 are unit vectors, then magnitude = sqrt(2) / 2\n//    var bisector_result = div(unit(direction), magnitude);\n//    return bisector_result;\n//}\n\n\nfunction rotate90ccw(v) {\n    /*Rotate 2d vector 90 degrees counter clockwise\n    \n        (x, y) -> (-y, x)\n    */\n    return [-v[1], v[0]];\n}\n\n\nfunction rotate90cw(v) {\n    /*Rotate 2d vector 90 degrees clockwise\n    \n        (x, y) -> (y, -x)\n    */\n    return [v[1], -v[0]];\n}\n//#endregion\n\n\n\nfunction generate_class_color() {\n    var class_color_dt = {\n        // atkis\n        2101: { r: 239, g: 200, b: 200 },\n        2112: { r: 255, g: 174, b: 185 },\n        2114: { r: 204, g: 204, b: 204 },\n        2201: { r: 138, g: 211, b: 175 },\n        2202: { r: 51, g: 204, b: 153 },\n        2213: { r: 170, g: 203, b: 175 },\n        2230: { r: 181, g: 227, b: 181 },\n        2301: { r: 157, g: 157, b: 108 },\n        3103: { r: 254, g: 254, b: 254 },\n        3302: { r: 204, g: 153, b: 255 },\n        4101: { r: 234, g: 216, b: 189 },\n        4102: { r: 230, g: 255, b: 204 },\n        4103: { r: 171, g: 223, b: 150 },\n        4104: { r: 255, g: 255, b: 192 },\n        4105: { r: 40, g: 200, b: 254 },\n        4107: { r: 141, g: 197, b: 108 },\n        4108: { r: 174, g: 209, b: 160 },\n        4109: { r: 207, g: 236, b: 168 },\n        4111: { r: 190, g: 239, b: 255 },\n        5112: { r: 181, g: 208, b: 208 },\n\n        // top10nl\n        // http://register.geostandaarden.nl/visualisatie/top10nl/1.2.0/BRT_TOP10NL_1.2_beschrijving_visualisatie.xlsx\n        // aeroway / runway\n        10000: { r: 204, g: 204, b: 204 },\n        10001: { r: 204, g: 204, b: 204 },\n        10002: { r: 204, g: 204, b: 204 },\n        10100: { r: 204, g: 204, b: 204 },\n        10101: { r: 204, g: 204, b: 204 },\n        10102: { r: 204, g: 204, b: 204 },\n\n        // road - highway\n        10200: { r: 153, g: 96, b: 137 },\n        10201: { r: 153, g: 96, b: 137 },\n        10202: { r: 153, g: 96, b: 137 },\n\n        // road - main road\n        10300: { r: 230, g: 0, b: 0 },\n        10301: { r: 230, g: 0, b: 0 },\n        10302: { r: 230, g: 0, b: 0 },\n        10310: { r: 230, g: 0, b: 0 },\n        10311: { r: 230, g: 0, b: 0 },\n        10312: { r: 230, g: 0, b: 0 },\n\n        //// road - regional road\n        //10400: { r: 255, g: 150, b: 0 },   //check\n        //10401: { r: 255, g: 150, b: 0 },   //check\n        //10402: { r: 255, g: 150, b: 0 },   //check\n        //10410: { r: 255, g: 150, b: 0 },   //check\n        //10411: { r: 255, g: 150, b: 0 },   //check\n        //10412: { r: 255, g: 150, b: 0 },   //check\n        // road - regional road\n        10400: { r: 255, g: 170, b: 0 },   //check\n        10401: { r: 255, g: 170, b: 0 },   //check\n        10402: { r: 255, g: 170, b: 0 },   //check\n        10410: { r: 255, g: 170, b: 0 },   //check\n        10411: { r: 255, g: 170, b: 0 },   //check\n        10412: { r: 255, g: 170, b: 0 },   //check\n\n\n        // road - local road\n        10500: { r: 255, g: 255, b: 0 },\n        10501: { r: 255, g: 255, b: 0 },\n        10502: { r: 255, g: 255, b: 0 },\n        10510: { r: 255, g: 255, b: 0 },\n        10511: { r: 255, g: 255, b: 0 },\n        10512: { r: 255, g: 255, b: 0 },\n\n        // road: street\n        10600: { r: 255, g: 255, b: 255 },\n        10601: { r: 255, g: 255, b: 255 },\n        10602: { r: 255, g: 255, b: 255 },\n\n        // road: other type\n        10700: { r: 255, g: 255, b: 255 },\n        10701: { r: 255, g: 255, b: 255 },\n        10702: { r: 255, g: 255, b: 255 },\n        10710: { r: 255, g: 255, b: 255 },\n        10711: { r: 255, g: 255, b: 255 },\n        10712: { r: 255, g: 255, b: 255 },\n        10790: { r: 255, g: 255, b: 255 },\n        10791: { r: 255, g: 255, b: 255 },\n        10792: { r: 255, g: 255, b: 255 },\n\n        //// road: half paved\n        //10720: { r: 179, g: 179, b: 179 },   //check\n        //10721: { r: 179, g: 179, b: 179 },   //check\n        //10722: { r: 179, g: 179, b: 179 },   //check\n        // road: half paved\n        10720: { r: 179, g: 179, b: 0 },   //check\n        10721: { r: 179, g: 179, b: 0 },   //check\n        10722: { r: 179, g: 179, b: 0 },   //check\n\n        // road: unpaved\n        10730: { r: 156, g: 156, b: 156 },\n        10731: { r: 156, g: 156, b: 156 },\n        10732: { r: 156, g: 156, b: 156 },\n\n        // road - cyclists\n        10740: { r: 255, g: 211, b: 127 },\n        10741: { r: 255, g: 211, b: 127 },\n        10742: { r: 255, g: 211, b: 127 },\n\n        // road - pedestrians\n        10750: { r: 255, g: 167, b: 127 },\n        10751: { r: 255, g: 167, b: 127 },\n        10752: { r: 255, g: 167, b: 127 },\n        10760: { r: 255, g: 167, b: 127 },\n        10761: { r: 255, g: 167, b: 127 },\n        10762: { r: 255, g: 167, b: 127 },\n\n        10780: { r: 255, g: 255, b: 255 },\n\n        12400: { r: 190, g: 232, b: 255 },\n        12405: { r: 190, g: 232, b: 255 },\n        12415: { r: 190, g: 232, b: 255 },\n        12425: { r: 190, g: 232, b: 255 },\n        12435: { r: 190, g: 232, b: 255 },\n        12500: { r: 190, g: 232, b: 255 },\n        12505: { r: 190, g: 232, b: 255 },\n\n        12800: { r: 190, g: 232, b: 255 },\n        12820: { r: 190, g: 232, b: 255 },\n\n        13000: { r: 0, g: 0, b: 0 },\n\n        // pier (aanlegsteiger)\n        14000: { r: 104, g: 104, b: 104 },\n        14002: { r: 104, g: 104, b: 104 },\n        14003: { r: 104, g: 104, b: 104 },\n\n        14010: { r: 255, g: 255, b: 222 },\n        14030: { r: 156, g: 156, b: 156 },\n        14040: { r: 201, g: 235, b: 112 },\n        14050: { r: 255, g: 255, b: 190 },\n        14060: { r: 140, g: 168, b: 0 },\n\n        14070: { r: 140, g: 168, b: 0 },\n        14072: { r: 140, g: 168, b: 0 },\n        14073: { r: 140, g: 168, b: 0 },\n\n        14080: { r: 140, g: 168, b: 0 },\n        14090: { r: 140, g: 168, b: 0 },\n\n        // burial ground\n        14100: { r: 204, g: 204, b: 204 },\n        14102: { r: 204, g: 204, b: 204 },\n        14103: { r: 204, g: 204, b: 204 },\n        14110: { r: 204, g: 204, b: 204 },\n        14112: { r: 204, g: 204, b: 204 },\n        14113: { r: 204, g: 204, b: 204 },\n\n        14120: { r: 255, g: 255, b: 222 },\n\n        // grassland\n        14130: { r: 201, g: 235, b: 112 },\n        14132: { r: 201, g: 235, b: 112 },\n        14133: { r: 201, g: 235, b: 112 },\n\n        // hay\n        14140: { r: 252, g: 179, b: 251 },\n        14142: { r: 252, g: 179, b: 251 },\n        14143: { r: 252, g: 179, b: 251 },\n\n        14160: { r: 255, g: 255, b: 255 },\n        14162: { r: 255, g: 255, b: 255 },\n        14170: { r: 201, g: 235, b: 112 },\n\n        // rail body\n        14180: { r: 255, g: 255, b: 255 },\n        14182: { r: 255, g: 255, b: 255 },\n        14183: { r: 255, g: 255, b: 255 },\n\n        14190: { r: 255, g: 255, b: 115 }\n    };\n\n    for (let key in class_color_dt) {\n        let color = class_color_dt[key];  //color is a dictionary of elements r, g, b\n        color.r_frac = color.r / 255;\n        color.g_frac = color.g / 255;\n        color.b_frac = color.b / 255;\n    }\n\n    return class_color_dt;\n}\n\nexport default parse_obj;\n","import parse_obj from './parse';\n\nself.onmessage = function(e) {    \n    let id = e.data.id\n    let url = e.data.msg\n\n    fetch(url)  //e.g., url = \"/gpudemo/2020/03/merge/0.1/data/sscgen_smooth.obj\"\n        .then(response => { return response.text() })  //e.g., the text (dataset) stored in an .obj file            \n        .then(data_text => { \n            let arrays = parse_obj(data_text)\n            // the arrays are transferable objects (ArrayBuffer objects)\n            // (will be transferred without copy overhead to main process)\n            postMessage({id: id, msg: arrays}, arrays)  \n        })\n        .catch(err => { console.error(err) });\n}\n"],"names":["let","i"],"mappings":";;;AAGA,SAAS,SAAS,CAAC,GAAG;AACtB;IACIA,IAAI,OAAO,GAAG,KAAI;IAClBA,IAAI,SAAS,GAAG,KAAI;IACpBA,IAAI,WAAW,GAAG,oBAAoB,GAAE;;IAExCA,IAAI,MAAM,GAAG;QACT,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,EAAE;QACb,UAAU,EAAE;YACR,SAAS,EAAE,EAAE;YACb,MAAM,EAAE,EAAE;SACb;MACJ;;IAED,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,WAAC,MAAQ;QAC5BA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAE5B,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;aACjB,MAAM;SACV;;QAED,QAAQ,KAAK,CAAC,CAAC,CAAC;;YAEZ,KAAK,GAAG,EAAE;gBACN,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gBACxF,KAAK;aACR;;YAED,KAAK,GAAG,EAAE;gBACNA,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,OAAO,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;gBACrC,IAAI,OAAO,KAAK,SAAS;gBACzB;oBACI,OAAO,CAAC,KAAK,CAAC,sCAAsC,GAAG,aAAa,CAAC,CAAC;oBACtE,OAAO,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;iBAClD;gBACD,KAAK;aACR;;YAED,KAAK,GAAG,EAAE;;gBAEN,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBACzBA,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,EAAC;iBAC3G;gBACD,KAAK;aACR;;YAED,KAAK,GAAG,EAAE;;gBAEN,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;iBACnC;gBACD,KAAK;aACR;;YAED,KAAK,GAAG,EAAE;gBACNA,IAAI,QAAQ,GAAG,EAAE,CAAC;;;gBAGlB,KAAKA,IAAIC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,KAAK,CAAC,MAAM,EAAEA,GAAC,EAAE,EAAE;oBACnC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAACA,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAChD;;gBAEDD,IAAI,aAAa,GAAG,EAAE,CAAC;gBACvB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACtCA,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACrB,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;iBACxD;;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC/CA,IAAI,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC7BA,IAAI,GAAG,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC/BA,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjCA,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7BA,IAAI,CAAC,GAAG,qBAAqB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;oBAChDA,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;oBAErB,IAAI,MAAM,IAAI,CAAC,EAAE;wBACbA,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;wBAE7BA,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;wBACxDA,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;wBACzDA,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC7CA,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;;;;wBAI9C,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;wBACrE,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;qBAC3E;iBACJ;gBACD,MAAM;aACT;;YAED,SAAS;gBACL,KAAK;aACR;;SAEJ;;KAEJ,EAAC;;;;;;;;;IASFA,IAAI,SAAS,GAAG,cAAc,CAAC,MAAM,EAAC;;IAEtC,OAAO,SAAS;;;;;CAKnB;;;AAGD,SAAS,cAAc,CAAC,MAAM;AAC9B;;;;;;IAMI,OAAO;;;;QAIH,IAAI,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QACjD,IAAI,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QAC5D,IAAI,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;KAC5D;;CAEJ;;;;AAID,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;;IAEf,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;YACtB,MAAM,mCAAmC,CAAC;SAC7C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;KACJ;SACI;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;KACJ;;IAED,OAAO,aAAa,CAAC;CACxB;;AAED,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;;IAEf,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;YACtB,MAAM,mCAAmC,CAAC;SAC7C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;KACJ;SACI;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;KACJ;;IAED,OAAO,aAAa,CAAC;CACxB;;AAED,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;;;IAGf,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;YACtB,MAAM,mCAAmC,CAAC;SAC7C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;KACJ;SACI;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;KACJ;;IAED,OAAO,aAAa,CAAC;CACxB;;AAED,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;;IAEf,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;YACtB,MAAM,mCAAmC,CAAC;SAC7C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;KACJ;SACI;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;KACJ;;IAED,OAAO,aAAa,CAAC;CACxB;;;;;;;;;;;AAWD,SAAS,qBAAqB,CAAC,KAAK,EAAE,GAAG,EAAE;;;;;IAKvC,OAAO,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;CAC1B;;AAED,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;;IAEjB,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE;QACxB,MAAM,mCAAmC,CAAC;KAC7C;;IAED,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9B;IACD,OAAO,SAAS,CAAC;CACpB;;;AAGD,SAAS,KAAK,CAAC,CAAC,EAAE;;IAEd,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACpB;;;AAGD,SAAS,IAAI,CAAC,CAAC,EAAE;;IAEb,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFD,SAAS,WAAW,CAAC,CAAC,EAAE;;;;;IAKpB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACxB;;;AAGD,SAAS,UAAU,CAAC,CAAC,EAAE;;;;;IAKnB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACxB;;;;;AAKD,SAAS,oBAAoB,GAAG;IAC5B,IAAI,cAAc,GAAG;;QAEjB,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAC/B,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QAChC,IAAI,EAAE,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,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;;QAGjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;;;;;;QAOjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;QAC/B,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;QAC/B,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;;;QAG/B,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;;QAGjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;;QAGjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;QAEjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;QAEjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;QAEjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;QAEjC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;;QAG3B,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;;QAEjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;QACjC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE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"}